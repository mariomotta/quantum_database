#INFO: **** input file is /Users/mario/Documents/GitHub/VATech/quantum_database/second_quantization/circuits/hardware_efficient/gather_beh2_results_ry_linear.py ****
from qiskit                                        import *
from qiskit.chemistry.drivers                      import UnitsType,HFMethodType
from qiskit.chemistry.core                         import Hamiltonian,TransformationType,QubitMappingType
from qiskit.chemistry.components.initial_states    import HartreeFock
from qiskit.chemistry.components.variational_forms import UCCSD
from qiskit.aqua.components.optimizers             import L_BFGS_B,COBYLA,CG
from qiskit.aqua.algorithms                        import VQE
from qiskit.aqua                                   import QuantumInstance,aqua_globals
from qiskit.circuit.library                        import EfficientSU2

import logging
from   qiskit.chemistry import set_qiskit_chemistry_logging
from   qiskit.aqua      import set_qiskit_aqua_logging
set_qiskit_chemistry_logging(logging.INFO)
set_qiskit_aqua_logging(logging.INFO)

import sys
import numpy as np
sys.path.append('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/subroutines')
sys.path.append('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/subroutines/pyscfd')
from pyscfdriver import *
from utils       import *

def print_circuit(fname,circuit):
    outf = open(fname,'w')
    for gate in circuit:
        gate_name = gate[0].name
        qubits = [q.index for q in gate[1]]
        outf.write(str(gate_name)+' | '+' '.join([str(x) for x in qubits])+' | '+' '.join([str(x._symbol_expr) for x in gate[0].params])+'\n')
    outf.close()

def print_results(fname,res_vqe,res_ee,dN=0):
    outf = open(fname,'w')
    outf.write('%.12f %.12f \n' % (res_vqe[0],np.real(res_ee[0])))
    outf.write('%.12f %.12f \n' % (res_vqe[1]+dN,np.real(res_ee[1]+dN)))
    outf.write('%.12f %.12f \n' % (res_vqe[2],np.real(res_ee[2])))
    outf.write('%.12f %.12f \n' % (res_vqe[3],np.real(res_ee[3])))
    outf.close()

dist_list = [0.7] #2.1,2.3,2.5,2.7,2.9,3.1,3.3,3.5] #[0.7,0.9,1.1,1.3,1.5,1.7,1.9,2.1,2.3,2.5,2.7,2.9,3.1,3.3,3.5,3.7,3.9,4.1,4.3,4.5]
depth_list = [1,2,3,4,5,6,7,8]

for depth in depth_list:
  for dist in dist_list:

    outfile = open('pes.txt','w')
    
    outfile.write("Bond distance: {}\n".format(dist))
    rho = np.load('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/SCF_FCI/beh2/res_fourth_pass.npy',allow_pickle=True).item()
    rho = rho[str(dist)]['rho_scf']
    driver    = PySCFDriver(atom="Be 0.0000 0.0000 0.0000; H 0.0000 0.0000 -{0}; H 0.0000 0.0000 {0}".format(dist),
                            unit=UnitsType.ANGSTROM,charge=0,spin=0,basis='sto-6g',hf_method=HFMethodType.RHF,symgroup='dooh',
                            outfile=outfile,irrep_nelec={'A1g':4,'A1u':2},rho=rho)
    molecule  = driver.run()
    outfile.write("\nHartree-Fock energy %f \n" % (molecule.hf_energy))
    
    core      = Hamiltonian(transformation=TransformationType.FULL,qubit_mapping=QubitMappingType.PARITY,two_qubit_reduction=True,freeze_core=False,orbital_reduction=[0])
    H_op,A_op = core.run(molecule)
    
    z2syms,sqlist           = None,None
    H_op,A_op,z2syms,sqlist = taper(molecule,core,H_op,A_op,outfile)
    
    init_state = HartreeFock(num_orbitals=core._molecule_info['num_orbitals'],qubit_mapping=core._qubit_mapping,two_qubit_reduction=core._two_qubit_reduction,num_particles=core._molecule_info['num_particles'],sq_list=sqlist)
    init_state.construct_circuit()
    x_hf = init_state._bitstr
 
    outfile.write("\nHartree-Fock energy %f \n" % (molecule.hf_energy))
    outfile.write("\nHartree-Fock circuit\n")
    outfile.write(str(init_state.construct_circuit().draw())+"\n")

    par = np.loadtxt('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/Ry_linear_DEPTH_%d/beh2/R_%s/output_parameters.txt' % (depth,str(dist)))
    var_form  = EfficientSU2(num_qubits=H_op.num_qubits,reps=depth,entanglement='linear',su2_gates=['ry'],initial_state=init_state)
    circuit = var_form.bind_parameters(par)

    optimizer = COBYLA(maxiter=0)
    algo      = VQE(H_op,var_form,optimizer,aux_operators=A_op,include_custom=True,initial_point=par)
    backend          = Aer.get_backend('statevector_simulator')
    quantum_instance = QuantumInstance(backend=backend)
    algo_result      = algo.run(quantum_instance)
    
    # -----------------------------------------------------------------------------------------------------------------------
    
    p1 = algo._ret['opt_params']
    res_vqe,res_ee = get_results(H_op,A_op,molecule,core,algo_result,outfile)
    print_results('ry_linear_%d/beh2_%s_results.txt' % (depth,str(dist)),res_vqe,res_ee,dN=2)

    circuit = var_form.bind_parameters(p1)
    print_circuit('ry_linear_%d/beh2_%s_circuit.txt' % (depth,str(dist)),circuit)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Tue Apr 19 15:27:22 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 3
[INPUT] num. electrons = 6
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry Dooh subgroup None
[INPUT] Mole.unit = Angstrom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000  -0.700000000000 AA    0.000000000000   0.000000000000  -1.322808287196 Bohr
[INPUT]  3 H      0.000000000000   0.000000000000   0.700000000000 AA    0.000000000000   0.000000000000   1.322808287196 Bohr

nuclear repulsion = 6.42572327545714
point group symmetry = Dooh
num. orbitals of irrep A1g = 3
num. orbitals of irrep A1u = 2
num. orbitals of irrep E1uy = 1
num. orbitals of irrep E1ux = 1
number of shells = 5
number of NR pGTOs = 42
number of NR cGTOs = 7
basis = sto-6g
ecp = {}
CPU time:         4.52

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 6 electrons in irreps ['A1g', 'A1u']
    0 free electrons in irreps E1uy E1ux




******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp3hbqoteh
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp3hbqoteh
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (A1g) = -0.533375259176049  LUMO (E1ux) = 0.15912932089226
Initial guess E= -15.0164889300848  |g|= 1.08145e-12
macro= 0  E= -15.0164889300848  delta_E= -1.06581e-14  |g|= 1.08145e-12  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-15.0164889300848  |g|= 1.08145e-12  total 2 KF 4 JK
converged SCF energy = -15.0164889300848
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:91: DeprecationWarning: The ChemistryOperator is deprecated as of Qiskit Aqua 0.8.0 and will be removed no earlier than 3 months after the release date. Instead, the FermionicTransformation can be used to transform QMolecules and construct ground state result objects.
  super().__init__()
2022-04-19 15:27:22,722:qiskit.chemistry.core.hamiltonian:INFO: Configured orbital reduction list: [0]
2022-04-19 15:27:22,748:qiskit.chemistry.core.hamiltonian:INFO: Combined orbital reduction list: [0]
2022-04-19 15:27:22,749:qiskit.chemistry.core.hamiltonian:INFO:   converting to spin orbital reduction list: [0 7]
2022-04-19 15:27:22,749:qiskit.chemistry.core.hamiltonian:INFO:     => freezing spin orbitals: [0 7]
2022-04-19 15:27:22,750:qiskit.chemistry.core.hamiltonian:INFO:     => removing spin orbitals: [] (indexes accounting for freeze [])
2022-04-19 15:27:22,839:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital energy shift: -16.617170358057287
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/quantum_info/operators/symplectic/pauli.py:185: DeprecationWarning: Initializing Pauli from `Pauli(z=z, x=x)` kwargs is deprecated as of version 0.17.0 and will be removed no earlier than 3 months after the release date. Use tuple initialization `Pauli((z, x))` instead.
  base_z, base_x, base_phase = self._from_array_deprecated(z, x)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/fermionic_operator.py:431: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  pauli_prod = Pauli.sgn_prod(a_i[alpha], a_j[beta])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/fermionic_operator.py:431: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  pauli_prod = Pauli.sgn_prod(a_i[alpha], a_j[beta])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/fermionic_operator.py:431: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  pauli_prod = Pauli.sgn_prod(a_i[alpha], a_j[beta])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/fermionic_operator.py:431: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  pauli_prod = Pauli.sgn_prod(a_i[alpha], a_j[beta])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/fermionic_operator.py:431: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  pauli_prod = Pauli.sgn_prod(a_i[alpha], a_j[beta])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/fermionic_operator.py:431: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  pauli_prod = Pauli.sgn_prod(a_i[alpha], a_j[beta])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/fermionic_operator.py:459: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  pauli_prod_1 = Pauli.sgn_prod(a_i[alpha], a_k[beta])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/fermionic_operator.py:459: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  pauli_prod_1 = Pauli.sgn_prod(a_i[alpha], a_k[beta])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/fermionic_operator.py:459: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  pauli_prod_1 = Pauli.sgn_prod(a_i[alpha], a_k[beta])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/fermionic_operator.py:459: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  pauli_prod_1 = Pauli.sgn_prod(a_i[alpha], a_k[beta])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/fermionic_operator.py:459: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  pauli_prod_1 = Pauli.sgn_prod(a_i[alpha], a_k[beta])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/fermionic_operator.py:459: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  pauli_prod_1 = Pauli.sgn_prod(a_i[alpha], a_k[beta])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/operators/legacy/weighted_pauli_operator.py:1289: DeprecationWarning: `from_label` is deprecated and will be removed no earlier than 3 months after the release date. Use Pauli(label) instead.
  z_sym = Pauli.from_label(''.join(pauli_str)[::-1])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/operators/legacy/weighted_pauli_operator.py:291: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  new_pauli, sign = Pauli.sgn_prod(existed_pauli, pauli)
2022-04-19 15:27:25,114:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital x dipole shift: 0.0
2022-04-19 15:27:25,200:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital y dipole shift: 0.0
2022-04-19 15:27:25,287:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital z dipole shift: 0.0
2022-04-19 15:27:25,374:qiskit.chemistry.core.hamiltonian:INFO: Molecule num electrons: [3, 3], remaining for processing: [2, 2]
2022-04-19 15:27:25,375:qiskit.chemistry.core.hamiltonian:INFO: Molecule num spin orbitals: 14, remaining for processing: 12
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/operators/primitive_ops/pauli_op.py:164: DeprecationWarning: `to_spmatrix` is deprecated and will be removed no earlier than 3 months after the release date. Use `to_matrix(sparse=True)` instead.
  return self.primitive.to_spmatrix() * self.coeff  # type: ignore
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:417: DeprecationWarning: Processing a dictionary result is deprecated, pass a (minimum) eigensolver result now.
  ' pass a (minimum) eigensolver result now.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:134: DeprecationWarning: energy deprecated, use eigenvalues property.
  warnings.warn('energy deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:134: DeprecationWarning: energy deprecated, use eigenvalues property.
  warnings.warn('energy deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:149: DeprecationWarning: aux_ops deprecated, use aux_operator_eigenvalues property.
  DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:138: DeprecationWarning: energies deprecated, use eigenvalues property.
  warnings.warn('energies deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:138: DeprecationWarning: energies deprecated, use eigenvalues property.
  warnings.warn('energies deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:149: DeprecationWarning: aux_ops deprecated, use aux_operator_eigenvalues property.
  DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/operators/primitive_ops/pauli_op.py:94: DeprecationWarning: `kron` is deprecated and will be removed no earlier than 3 months after the release date of Qiskit Terra 0.17.0. Use `expand` instead, but note this does not change the operator in-place.
  return PauliOp(op_copy.kron(self.primitive), coeff=self.coeff * other.coeff)
2022-04-19 15:27:30,549:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: 
==================== Setting of VQE ============================
Algorithm: VQE
-- max_evals_grouped: 1
-- circuit_sampler: None
-- expectation: None
-- user_valid_expectation: False
-- include_custom: True
-- expect_op: None
-- operator: SummedOp([
  -0.6192771499994366 * IIIIIII,
  -0.22730651630951085 * ZIIIZZI,
  -0.03321163049383873 * IIIIIXX,
  0.03321163049383873 * ZIIIZXX,
  -0.2253147080776801 * ZZIZZZZ,
  0.05679163446780257 * ZIIIZIX,
  -0.05679163446780257 * IZIZIIX,
  -0.7258623265715671 * IIZZIII,
  -0.7258623265715669 * IZZIIII,
  -0.6030929064553017 * IIIIIZZ,
  -1.157696674452874 * IIIIIZI,
  -0.22730651630951093 * IIIIZII,
  -0.033211630493838705 * XXXXXII,
  -0.033211630493838705 * YXXXYII,
  -0.22531470807768003 * IIIZZII,
  0.0567916344678026 * ZXXXZII,
  0.0567916344678026 * IYXYIII,
  -0.6030929064553021 * ZZIIIII,
  -1.1576966744528747 * ZIIIIII,
  0.08334297239187934 * IZIZIIZ,
  0.0005769335647369502 * IIIIIZX,
  -0.0005769335647369502 * ZZIZZZX,
  0.20146330378884153 * ZIZZZZI,
  0.20146330378884153 * ZZZIZZI,
  0.09225589239004754 * ZIIIZIZ,
  0.2070609674991095 * ZIIIZII,
  -0.005836451951820793 * ZZIZZYY,
  0.005836451951820793 * IZIZIYY,
  -0.01871300096477631 * IZIZIXI,
  0.01950649403086242 * IZIZIXZ,
  -0.0007934930660861022 * ZIIIZXI,
  -0.0007934930660861022 * ZZIZZXI,
  0.01950649403086242 * IIIIIXZ,
  -0.01871300096477631 * IIIIIXI,
  0.016414969451734544 * IIZZIXX,
  -0.016414969451734544 * ZIZZZXX,
  0.016414969451734544 * IZZIIXX,
  -0.016414969451734544 * ZZZIZXX,
  0.004059418345102082 * IIIIIYY,
  -0.004059418345102082 * ZIIIZYY,
  0.2574950295951019 * ZIIIIZI,
  -0.005096331270005864 * IIIIZXX,
  0.005096331270005864 * ZIIIIXX,
  -0.039900548641951715 * IZIZXIZ,
  0.039900548641951715 * IZIIXIZ,
  0.039900548641951715 * IIIIXII,
  -0.039900548641951715 * IIIZXII,
  0.02761983228392986 * IIIIXZX,
  -0.02761983228392986 * IIIZXZX,
  0.02761983228392986 * ZIIIYZY,
  -0.02761983228392986 * ZIIZYZY,
  0.005144111872843905 * IZZYYIZ,
  0.005144111872843905 * IZIXXIZ,
  0.005144111872843905 * ZZIXXZZ,
  0.005144111872843905 * ZZZYYZZ,
  0.005144111872843905 * IIYXYIZ,
  0.005144111872843905 * IZXXXIZ,
  0.005144111872843905 * ZZXXXZZ,
  0.005144111872843905 * ZIYXYZZ,
  -0.02761983228392986 * IXXYYIZ,
  0.02761983228392986 * ZYXYXIZ,
  0.02761983228392986 * IYXXYII,
  0.02761983228392986 * ZXXXXII,
  0.024829363427025124 * IYXXYZX,
  0.024829363427025124 * ZXXXXZX,
  -0.024829363427025124 * ZYXXXZY,
  0.024829363427025124 * IXXXYZY,
  0.005096331270005864 * XXXXXZI,
  0.005096331270005864 * YXXXYZI,
  0.040309126010204054 * YXXXYXX,
  0.040309126010204054 * XXXXXXX,
  0.12324352103383106 * ZIIZIZI,
  0.020172309693380137 * IIIZZXX,
  -0.020172309693380137 * ZIIZIXX,
  -0.02704289871919291 * ZYXYZZI,
  -0.02704289871919291 * IXXXIZI,
  -0.0176251544088086 * IYXYIXX,
  -0.0176251544088086 * ZXXXZXX,
  0.0176251544088086 * ZYXYZXX,
  0.0176251544088086 * IXXXIXX,
  0.014335857741559347 * YYXXIIZ,
  -0.014335857741559347 * XYXYZIZ,
  -0.014335857741559347 * YXXYIII,
  -0.014335857741559347 * XXXXZII,
  -0.016831661342722494 * YXXYIZX,
  -0.016831661342722494 * XXXXZZX,
  0.016831661342722494 * XXXYZZY,
  -0.016831661342722494 * YXXXIZY,
  -0.0026771586587551912 * YYXIIIZ,
  0.0026771586587551912 * XYYZIIZ,
  0.0026771586587551912 * XYYZZZZ,
  -0.0026771586587551912 * YYXIZZZ,
  -0.0026771586587551912 * YYIIIIZ,
  -0.0026771586587551912 * XXZIIIZ,
  -0.0026771586587551912 * XXZIZZZ,
  -0.0026771586587551912 * YYIIZZZ,
  0.11708525581707264 * IZIIZZI,
  0.025353540310681544 * ZZIIIXX,
  -0.025353540310681544 * IZIIZXX,
  0.03633815537358491 * XZIZIIZ,
  -0.03633815537358491 * XIIZIIZ,
  -0.03633815537358491 * XIIIIII,
  0.03633815537358491 * XZIIIII,
  -0.029412958655783628 * XIIIIZX,
  0.029412958655783628 * XZIIIZX,
  -0.029412958655783628 * YIIIZZY,
  0.029412958655783628 * YZIIZZY,
  0.24737009350931358 * IIIIZZI,
  0.1972129542494357 * ZZZIZZZ,
  0.1972129542494357 * ZIZZZZZ,
  0.1890750782620393 * ZZIZZII,
  0.10213539151593913 * ZZIZZIZ,
  -0.02146329537529415 * ZIZZZIX,
  0.02146329537529415 * IZZIIIX,
  -0.02146329537529415 * ZZZIZIX,
  0.02146329537529415 * IIZZIIX,
  -0.00989812276346958 * ZIIIZZX,
  0.00989812276346958 * IZIZIZX,
  0.12324352103383106 * ZZIZIZZ,
  -0.027042898719192913 * ZIIIIIX,
  0.027042898719192913 * IZIZZIX,
  0.014335857741559347 * ZIIIYYX,
  -0.014335857741559347 * ZIIZYYX,
  -0.014335857741559347 * IZIZXYY,
  0.014335857741559347 * IZIIXYY,
  -0.01683166134272249 * ZYXXXYX,
  0.01683166134272249 * IXXXYYX,
  -0.01683166134272249 * IXXYYYY,
  0.01683166134272249 * ZYXYXYY,
  0.020172309693380137 * XYXYXZZ,
  0.020172309693380137 * YYXYYZZ,
  0.0176251544088086 * XXXXXIX,
  0.0176251544088086 * YXXXYIX,
  -0.0176251544088086 * YYXYYIX,
  -0.0176251544088086 * XYXYXIX,
  0.2330296305961526 * ZZIIIZZ,
  0.001671692012152396 * ZIIZIIX,
  -0.001671692012152396 * IZIIZIX,
  -0.016279945780510962 * ZZZXZZZ,
  0.016279945780510962 * ZZIXIZZ,
  0.016279945780510962 * IIIXIII,
  -0.016279945780510962 * IIZXZII,
  0.016279945780510962 * ZIYYZZZ,
  0.016279945780510962 * ZZXXIZZ,
  0.016279945780510962 * IIXXIII,
  0.016279945780510962 * IZYYZII,
  -0.001671692012152396 * ZXXXZZZ,
  -0.001671692012152396 * IYXYIZZ,
  0.035730306195109925 * ZYXYZIX,
  0.035730306195109925 * IXXXIIX,
  0.013761477078992203 * XXXYZYX,
  -0.013761477078992203 * YXXXIYX,
  0.013761477078992203 * YYXXIYY,
  -0.013761477078992203 * XYXYZYY,
  -0.010270084289159999 * ZXXIZZZ,
  -0.010270084289159999 * IYYZZZZ,
  -0.010270084289159999 * IYYIIII,
  -0.010270084289159999 * ZXXZIII,
  -0.010270084289159999 * ZXIIZZZ,
  0.010270084289159999 * IXZIZZZ,
  0.010270084289159999 * IXZZIII,
  -0.010270084289159999 * ZXIZIII,
  0.22480538445714923 * IIIZZZZ,
  -0.01886307133245532 * YIIIZYX,
  0.01886307133245532 * YZIIZYX,
  0.01886307133245532 * XZIZIYY,
  -0.01886307133245532 * XIIZIYY,
  0.11589686859493135 * IZIZZZZ,
  -0.0287611940959249 * IIIIZIX,
  0.0287611940959249 * ZZIZIIX,
  0.38947179486833605 * IZIZIII,
  0.18647570075538616 * IIZZIZZ,
  0.1883020217766596 * IIZZIZI,
  0.20146330378884153 * IIZZZII,
  -0.0026771586587551912 * IZIXYXY,
  0.0026771586587551912 * IZZYXXY,
  -0.0026771586587551912 * IZZYYYY,
  -0.0026771586587551912 * IZIXXYY,
  -0.016414969451734544 * YXYYYII,
  -0.016414969451734544 * XXYYXII,
  0.1972129542494357 * IIZIZII,
  0.010270084289159999 * IZIYIZY,
  -0.010270084289159999 * IZZYZZY,
  0.010270084289159999 * IZZXIIX,
  -0.010270084289159999 * IZIXZIX,
  -0.02146329537529415 * IYYXIII,
  0.02146329537529415 * ZXYYZII,
  -0.012128953755816447 * IZXZIII,
  0.012128953755816447 * IIXIIII,
  0.009509761069347353 * IXYZIZY,
  -0.009509761069347353 * ZYXIIZY,
  0.009509761069347353 * IXXIIIX,
  0.009509761069347353 * ZYYZIIX,
  -0.0025708476077440662 * YYYZIXY,
  -0.0025708476077440662 * XYXIIXY,
  0.0025708476077440662 * YYXIIYY,
  -0.0025708476077440662 * XYYZIYY,
  0.18647570075538616 * ZZZZIII,
  0.1883020217766596 * ZIZZIII,
  0.18647570075538616 * IZZIIZZ,
  0.1883020217766596 * IZZIIZI,
  0.20146330378884153 * IZZIZII,
  -0.0026771586587551912 * IZXXYXY,
  0.0026771586587551912 * IIYXXXY,
  -0.0026771586587551912 * IIYXYYY,
  -0.0026771586587551912 * IZXXXYY,
  -0.016414969451734544 * YYYXYII,
  -0.016414969451734544 * XYYXXII,
  0.1972129542494357 * IZZZZII,
  0.010270084289159999 * IZXYIZY,
  -0.010270084289159999 * IIYXZZY,
  -0.010270084289159999 * IIYYIIX,
  -0.010270084289159999 * IZXXZIX,
  -0.02146329537529415 * IXYYIII,
  0.02146329537529415 * ZYYXZII,
  0.009509761069347353 * IYZIIZY,
  -0.009509761069347353 * ZYIIIZY,
  0.009509761069347353 * IXIIIIX,
  -0.009509761069347353 * ZXZIIIX,
  0.0025708476077440662 * YXZIIXY,
  -0.0025708476077440662 * XYIIIXY,
  0.0025708476077440662 * YYIIIYY,
  0.0025708476077440662 * XXZIIYY,
  0.18647570075538616 * ZIZIIII,
  0.1883020217766596 * ZZZIIII,
  0.07688554243850795 * IIIIIIZ,
  0.11708525581707264 * IIIIZZZ,
  0.03633815537358492 * IIIIXXZ,
  -0.03633815537358492 * IIIZXXZ,
  -0.03633815537358492 * IIIIXXI,
  0.03633815537358492 * IIIZXXI,
  0.02941295865578362 * IYXXYXZ,
  0.02941295865578362 * ZXXXXXZ,
  -0.02941295865578362 * IYXXYXI,
  -0.02941295865578362 * ZXXXXXI,
  0.025353540310681544 * YXXXYZZ,
  0.025353540310681544 * XXXXXZZ,
  -0.018863071332455322 * YXXYIXZ,
  -0.018863071332455322 * XXXXZXZ,
  0.018863071332455322 * YXXYIXI,
  0.018863071332455322 * XXXXZXI,
  -0.04011876971168971 * XIIIIXZ,
  0.04011876971168971 * XZIIIXZ,
  0.04011876971168971 * XIIIIXI,
  -0.04011876971168971 * XZIIIXI,
  0.11700431215019767 * ZIIIIZZ,
  0.11589686859493135 * IIIZZZI,
  -0.0287611940959249 * IYXYIZI,
  -0.0287611940959249 * ZXXXZZI,
  0.11700431215019767 * ZZIIIZI,
  0.08334297239187934 * IIIZIII,
  0.0005769335647369502 * ZXXXIII,
  0.0005769335647369502 * IYXYZII,
  0.09225589239004754 * ZZIIZII,
  -0.005836451951820793 * XXXYYII,
  0.005836451951820793 * YXXYXII,
  -0.01871300096477631 * XZIZXII,
  0.01950649403086242 * XIIZXII,
  0.0007934930660861022 * YIIIYII,
  0.0007934930660861022 * YZIZYII,
  0.01950649403086242 * XZIIXII,
  -0.01871300096477631 * XIIIXII,
  0.004059418345102082 * YYXXXII,
  -0.004059418345102082 * XYXXYII,
  0.10213539151593913 * ZIIZZII,
  -0.00989812276346958 * IXXXZII,
  -0.00989812276346958 * ZYXYIII,
  0.07688554243850795 * IZIIIII
])
-- quantum_instance: None
-- optimizer: <qiskit.aqua.components.optimizers.cobyla.COBYLA object at 0x7fd57b250d90>
-- gradient: None
-- cost_fn: <bound method VQE._energy_evaluation of <qiskit.aqua.algorithms.minimum_eigen_solvers.vqe.VQE object at 0x7fd57b1e5dd0>>
-- initial_point: [ 2.45548617e-05  1.07727293e-02  2.32545783e+00 -1.57291050e+00
  1.57079172e+00 -1.23142755e-05  2.59593166e-02 -2.90171190e+00
  2.32633498e+00 -1.56849049e+00 -1.57080462e+00  1.52645857e-02
 -2.57509916e-03  3.23633957e-03]
-- var_form:      ┌──────────┐            ┌──────────┐                                     »
q_0: ┤ RY(θ[0]) ├─────■──────┤ RY(θ[7]) ├─────────────────────────────────────»
     ├──────────┤   ┌─┴─┐    └──────────┘┌──────────┐                         »
q_1: ┤ RY(θ[1]) ├───┤ X ├─────────■──────┤ RY(θ[8]) ├─────────────────────────»
     └──┬───┬───┘┌──┴───┴───┐   ┌─┴─┐    └──────────┘┌──────────┐             »
q_2: ───┤ X ├────┤ RY(θ[2]) ├───┤ X ├─────────■──────┤ RY(θ[9]) ├─────────────»
     ┌──┴───┴───┐└──────────┘   └───┘       ┌─┴─┐    └──────────┘┌───────────┐»
q_3: ┤ RY(θ[3]) ├───────────────────────────┤ X ├─────────■──────┤ RY(θ[10]) ├»
     ├──────────┤                           └───┘       ┌─┴─┐    └───────────┘»
q_4: ┤ RY(θ[4]) ├───────────────────────────────────────┤ X ├──────────■──────»
     ├──────────┤                                       └───┘        ┌─┴─┐    »
q_5: ┤ RY(θ[5]) ├────────────────────────────────────────────────────┤ X ├────»
     ├──────────┤                                                    └───┘    »
q_6: ┤ RY(θ[6]) ├─────────────────────────────────────────────────────────────»
     └──────────┘                                                             »
«                               
«q_0: ──────────────────────────
«                               
«q_1: ──────────────────────────
«                               
«q_2: ──────────────────────────
«                               
«q_3: ──────────────────────────
«     ┌───────────┐             
«q_4: ┤ RY(θ[11]) ├─────────────
«     └───────────┘┌───────────┐
«q_5: ──────■──────┤ RY(θ[12]) ├
«         ┌─┴─┐    ├───────────┤
«q_6: ────┤ X ├────┤ RY(θ[13]) ├
«         └───┘    └───────────┘
-- var_form_params: [ParameterVectorElement(θ[0]), ParameterVectorElement(θ[10]), ParameterVectorElement(θ[11]), ParameterVectorElement(θ[12]), ParameterVectorElement(θ[13]), ParameterVectorElement(θ[1]), ParameterVectorElement(θ[2]), ParameterVectorElement(θ[3]), ParameterVectorElement(θ[4]), ParameterVectorElement(θ[5]), ParameterVectorElement(θ[6]), ParameterVectorElement(θ[7]), ParameterVectorElement(θ[8]), ParameterVectorElement(θ[9])]
-- parameterized_circuits: None
-- ret: None
-- eval_time: None
-- callback: None
-- aux_op_nones: [False, False, False, False, False, False]
-- aux_operators: [SummedOp([PauliOp(Pauli('IIIIIII'), coeff=5.999999999999994), PauliOp(Pauli('ZIIIZZI'), coeff=-0.4999999999999996), PauliOp(Pauli('ZZIZZZZ'), coeff=-0.4999999999999996), PauliOp(Pauli('IIZZIII'), coeff=-0.9999999999999992), PauliOp(Pauli('IZZIIII'), coeff=-0.9999999999999992), PauliOp(Pauli('IIIIIZZ'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIIIZI'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIIZII'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIZZII'), coeff=-0.4999999999999996), PauliOp(Pauli('ZZIIIII'), coeff=-0.4999999999999996), PauliOp(Pauli('ZIIIIII'), coeff=-0.4999999999999996)], coeff=1.0, abelian=False), SummedOp([PauliOp(Pauli('IIIIIII'), coeff=1.4999999999999987), PauliOp(Pauli('IZIZIIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIZIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIIIZI'), coeff=-0.7499999999999992), PauliOp(Pauli('ZIIZIZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IZIIZZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIZZI'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIIIXZI'), coeff=0.1249999999999999), PauliOp(Pauli('IZIZXIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIZXZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IZIIXIZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIXII'), coeff=-0.1249999999999999), PauliOp(Pauli('ZZIZXZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZXII'), coeff=0.1249999999999999), PauliOp(Pauli('ZZIIXZZ'), coeff=0.1249999999999999), PauliOp(Pauli('IYXXXIY'), coeff=-0.1249999999999999), PauliOp(Pauli('IYXXYZX'), coeff=-0.1249999999999999), PauliOp(Pauli('ZXXXYIY'), coeff=0.1249999999999999), PauliOp(Pauli('ZXXXXZX'), coeff=-0.1249999999999999), PauliOp(Pauli('ZYXXXZY'), coeff=0.1249999999999999), PauliOp(Pauli('ZYXXYIX'), coeff=0.1249999999999999), PauliOp(Pauli('IXXXYZY'), coeff=-0.1249999999999999), PauliOp(Pauli('IXXXXIX'), coeff=0.1249999999999999), PauliOp(Pauli('YXXXXYX'), coeff=-0.2499999999999998), PauliOp(Pauli('YXXXYXX'), coeff=-0.2499999999999998), PauliOp(Pauli('XXXXYYX'), coeff=0.2499999999999998), PauliOp(Pauli('XXXXXXX'), coeff=-0.2499999999999998), PauliOp(Pauli('ZZIZZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZZIZZIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZZIZIZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZZIIIZZ'), coeff=-0.7499999999999992), PauliOp(Pauli('IIIZZZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IZIZZZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZYXXIZY'), coeff=-0.2499999999999998), PauliOp(Pauli('ZYXYZIX'), coeff=-0.2499999999999998), PauliOp(Pauli('IXXYZZY'), coeff=0.2499999999999998), PauliOp(Pauli('IXXXIIX'), coeff=-0.2499999999999998), PauliOp(Pauli('XXXXIXX'), coeff=0.1249999999999999), PauliOp(Pauli('XXXYZYX'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXYZXX'), coeff=0.1249999999999999), PauliOp(Pauli('YXXXIYX'), coeff=0.1249999999999999), PauliOp(Pauli('YYXXIYY'), coeff=-0.1249999999999999), PauliOp(Pauli('YYXYZXY'), coeff=-0.1249999999999999), PauliOp(Pauli('XYXYZYY'), coeff=0.1249999999999999), PauliOp(Pauli('XYXXIXY'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIIIZ'), coeff=0.1249999999999999), PauliOp(Pauli('IIIIZZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIIIIZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('YZIIIYZ'), coeff=-0.1249999999999999), PauliOp(Pauli('XIIIIXZ'), coeff=0.1249999999999999), PauliOp(Pauli('YIIIIYZ'), coeff=0.1249999999999999), PauliOp(Pauli('XZIIIXZ'), coeff=-0.1249999999999999), PauliOp(Pauli('XIIIIXI'), coeff=-0.1249999999999999), PauliOp(Pauli('YZIIIYI'), coeff=0.1249999999999999), PauliOp(Pauli('XZIIIXI'), coeff=0.1249999999999999), PauliOp(Pauli('YIIIIYI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZZZI'), coeff=-0.1249999999999999), PauliOp(Pauli('ZZIIIZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZIII'), coeff=0.1249999999999999), PauliOp(Pauli('ZZIIZII'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIZZII'), coeff=0.1249999999999999), PauliOp(Pauli('IZIIIII'), coeff=0.1249999999999999)], coeff=1.0, abelian=False), SummedOp([PauliOp(Pauli('ZIIIZZI'), coeff=-0.2499999999999998), PauliOp(Pauli('ZZIZZZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIIZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIIZI'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIZII'), coeff=0.2499999999999998), PauliOp(Pauli('IIIZZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZZIIIII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIIIII'), coeff=0.2499999999999998)], coeff=1.0, abelian=False), PauliOp(Pauli('IIIIIII'), coeff=0.0), PauliOp(Pauli('IIIIIII'), coeff=0.0), PauliOp(Pauli('IIIIIII'), coeff=0.0)]
-- eval_count: 0
===============================================================
NLocal: EfficientSU2
-- base_name: nlocal
-- data: [(<qiskit.circuit.library.standard_gates.x.XGate object at 0x7fd57b5c3650>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd57b5c34d0>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5585b0e90>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5585b0bd0>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5585b0f90>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5585b0fd0>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5585b0b90>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5585b03d0>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5482d0ed0>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5585b0c90>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5585b0b50>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5585b0c10>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5585b01d0>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5585b0990>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd57b023050>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd57b5c3850>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5585b0a90>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5585b00d0>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5585b0890>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5585b0f50>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5585b0cd0>, [Qubit(QuantumRegister(7, 'q'), 6)], [])]
-- qregs: [QuantumRegister(7, 'q')]
-- qubits: [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)]
-- qubit_set: {Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 6)}
-- parameter_table: ParameterTable({ParameterVectorElement(θ[0]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd57b5c34d0>, 0)], ParameterVectorElement(θ[1]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5585b0e90>, 0)], ParameterVectorElement(θ[2]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5585b0bd0>, 0)], ParameterVectorElement(θ[3]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5585b0f90>, 0)], ParameterVectorElement(θ[4]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5585b0fd0>, 0)], ParameterVectorElement(θ[5]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5585b0b90>, 0)], ParameterVectorElement(θ[6]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5585b03d0>, 0)], ParameterVectorElement(θ[7]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd57b023050>, 0)], ParameterVectorElement(θ[8]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd57b5c3850>, 0)], ParameterVectorElement(θ[9]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5585b0a90>, 0)], ParameterVectorElement(θ[10]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5585b00d0>, 0)], ParameterVectorElement(θ[11]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5585b0890>, 0)], ParameterVectorElement(θ[12]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5585b0f50>, 0)], ParameterVectorElement(θ[13]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5585b0cd0>, 0)]})
-- clbits: []
-- clbit_set: set()
-- ancillas: []
-- calibrations: defaultdict(<class 'dict'>, {})
-- parameters: [ParameterVectorElement(θ[0]), ParameterVectorElement(θ[1]), ParameterVectorElement(θ[2]), ParameterVectorElement(θ[3]), ParameterVectorElement(θ[4]), ParameterVectorElement(θ[5]), ParameterVectorElement(θ[6]), ParameterVectorElement(θ[7]), ParameterVectorElement(θ[8]), ParameterVectorElement(θ[9]), ParameterVectorElement(θ[10]), ParameterVectorElement(θ[11]), ParameterVectorElement(θ[12]), ParameterVectorElement(θ[13])]
-- layout: None
-- global_phase: 0
-- metadata: None
-- cregs: []
-- num_qubits: 7
-- insert_barriers: False
-- reps: 1
-- entanglement_blocks: [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7fd5282bca10>]
-- rotation_blocks: [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7fd5282bc0d0>]
-- prepended_blocks: []
-- prepended_entanglement: []
-- appended_blocks: []
-- appended_entanglement: []
-- entanglement: linear
-- entangler_maps: None
-- ordered_parameters: θ, ['θ[0]', 'θ[1]', 'θ[2]', 'θ[3]', 'θ[4]', 'θ[5]', 'θ[6]', 'θ[7]', 'θ[8]', 'θ[9]', 'θ[10]', 'θ[11]', 'θ[12]', 'θ[13]']
-- overwrite_block_parameters: True
-- skip_final_rotation_layer: False
-- skip_unentangled_qubits: False
-- initial_state: <qiskit.chemistry.components.initial_states.hartree_fock.HartreeFock object at 0x7fd57b2396d0>
-- initial_state_circuit:           
q_0: ─────
          
q_1: ─────
     ┌───┐
q_2: ┤ X ├
     └───┘
q_3: ─────
          
q_4: ─────
          
q_5: ─────
          
q_6: ─────
          
-- bounds: None
===============================================================
Optimizer: COBYLA
-- gradient_support_level: 1
-- bounds_support_level: 1
-- initial_point_support_level: 3
-- options: {'maxiter': 0, 'disp': False, 'rhobeg': 1.0}
-- max_evals_grouped: 1
-- tol: None
===============================================================

2022-04-19 15:27:30,565:qiskit.aqua.quantum_instance:INFO: statevector backend only works with shot=1, changing shots from 1024 to 1.
2022-04-19 15:27:30,793:qiskit.aqua.quantum_instance:INFO: 
Qiskit Terra version: 0.17.0
Backend: 'statevector_simulator (AerProvider)', with following setting:
{'basis_gates': ['ccx', 'cp', 'cswap', 'csx', 'cu1', 'cu2', 'cu3', 'cx', 'cy', 'cz', 'delay', 'diagonal', 'h', 'id', 'initialize', 'mcp', 'mcr', 'mcrx', 'mcry', 'mcrz', 'mcswap', 'mcsx', 'mcu1', 'mcu2', 'mcu3', 'mcx', 'mcy', 'mcz', 'multiplexer', 'p', 'pauli', 'r', 'rx', 'rxx', 'ry', 'ryy', 'rz', 'rzx', 'rzz', 's', 'sdg', 'swap', 'sx', 't', 'tdg', 'u', 'u1', 'u2', 'u3', 'unitary', 'x', 'y', 'z', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector'], 'coupling_map': None}
{'initial_layout': None, 'seed_transpiler': None, 'optimization_level': None}
RunConfig(max_credits=10, shots=1)
{'timeout': None}
{}
{}
Measurement mitigation: None
2022-04-19 15:27:30,794:qiskit.aqua.algorithms.vq_algorithm:INFO: Starting optimizer.
bounds=[(-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793)]
initial point=[ 2.45548617e-05  1.07727293e-02  2.32545783e+00 -1.57291050e+00
  1.57079172e+00 -1.23142755e-05  2.59593166e-02 -2.90171190e+00
  2.32633498e+00 -1.56849049e+00 -1.57080462e+00  1.52645857e-02
 -2.57509916e-03  3.23633957e-03]
2022-04-19 15:27:31,433:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: Energy evaluation returned [-4.83615885] - 430.42159 (ms), eval count: 1
2022-04-19 15:27:31,433:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: Optimization complete in 0.6394309997558594 seconds.
Found opt_params [ 2.45548617e-05  1.07727293e-02  2.32545783e+00 -1.57291050e+00
  1.57079172e+00 -1.23142755e-05  2.59593166e-02 -2.90171190e+00
  2.32633498e+00 -1.56849049e+00 -1.57080462e+00  1.52645857e-02
 -2.57509916e-03  3.23633957e-03] in 1 evals
ancilla op commutes?  True
ancilla op commutes?  True
ancilla op commutes?  True
ancilla op commutes?  False
ancilla op commutes?  False
ancilla op commutes?  False
#INFO: **** input file is /Users/mario/Documents/GitHub/VATech/quantum_database/second_quantization/circuits/hardware_efficient/gather_beh2_results_ry_linear.py ****
from qiskit                                        import *
from qiskit.chemistry.drivers                      import UnitsType,HFMethodType
from qiskit.chemistry.core                         import Hamiltonian,TransformationType,QubitMappingType
from qiskit.chemistry.components.initial_states    import HartreeFock
from qiskit.chemistry.components.variational_forms import UCCSD
from qiskit.aqua.components.optimizers             import L_BFGS_B,COBYLA,CG
from qiskit.aqua.algorithms                        import VQE
from qiskit.aqua                                   import QuantumInstance,aqua_globals
from qiskit.circuit.library                        import EfficientSU2

import logging
from   qiskit.chemistry import set_qiskit_chemistry_logging
from   qiskit.aqua      import set_qiskit_aqua_logging
set_qiskit_chemistry_logging(logging.INFO)
set_qiskit_aqua_logging(logging.INFO)

import sys
import numpy as np
sys.path.append('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/subroutines')
sys.path.append('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/subroutines/pyscfd')
from pyscfdriver import *
from utils       import *

def print_circuit(fname,circuit):
    outf = open(fname,'w')
    for gate in circuit:
        gate_name = gate[0].name
        qubits = [q.index for q in gate[1]]
        outf.write(str(gate_name)+' | '+' '.join([str(x) for x in qubits])+' | '+' '.join([str(x._symbol_expr) for x in gate[0].params])+'\n')
    outf.close()

def print_results(fname,res_vqe,res_ee,dN=0):
    outf = open(fname,'w')
    outf.write('%.12f %.12f \n' % (res_vqe[0],np.real(res_ee[0])))
    outf.write('%.12f %.12f \n' % (res_vqe[1]+dN,np.real(res_ee[1]+dN)))
    outf.write('%.12f %.12f \n' % (res_vqe[2],np.real(res_ee[2])))
    outf.write('%.12f %.12f \n' % (res_vqe[3],np.real(res_ee[3])))
    outf.close()

dist_list = [0.7] #2.1,2.3,2.5,2.7,2.9,3.1,3.3,3.5] #[0.7,0.9,1.1,1.3,1.5,1.7,1.9,2.1,2.3,2.5,2.7,2.9,3.1,3.3,3.5,3.7,3.9,4.1,4.3,4.5]
depth_list = [1,2,3,4,5,6,7,8]

for depth in depth_list:
  for dist in dist_list:

    outfile = open('pes.txt','w')
    
    outfile.write("Bond distance: {}\n".format(dist))
    rho = np.load('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/SCF_FCI/beh2/res_fourth_pass.npy',allow_pickle=True).item()
    rho = rho[str(dist)]['rho_scf']
    driver    = PySCFDriver(atom="Be 0.0000 0.0000 0.0000; H 0.0000 0.0000 -{0}; H 0.0000 0.0000 {0}".format(dist),
                            unit=UnitsType.ANGSTROM,charge=0,spin=0,basis='sto-6g',hf_method=HFMethodType.RHF,symgroup='dooh',
                            outfile=outfile,irrep_nelec={'A1g':4,'A1u':2},rho=rho)
    molecule  = driver.run()
    outfile.write("\nHartree-Fock energy %f \n" % (molecule.hf_energy))
    
    core      = Hamiltonian(transformation=TransformationType.FULL,qubit_mapping=QubitMappingType.PARITY,two_qubit_reduction=True,freeze_core=False,orbital_reduction=[0])
    H_op,A_op = core.run(molecule)
    
    z2syms,sqlist           = None,None
    H_op,A_op,z2syms,sqlist = taper(molecule,core,H_op,A_op,outfile)
    
    init_state = HartreeFock(num_orbitals=core._molecule_info['num_orbitals'],qubit_mapping=core._qubit_mapping,two_qubit_reduction=core._two_qubit_reduction,num_particles=core._molecule_info['num_particles'],sq_list=sqlist)
    init_state.construct_circuit()
    x_hf = init_state._bitstr
 
    outfile.write("\nHartree-Fock energy %f \n" % (molecule.hf_energy))
    outfile.write("\nHartree-Fock circuit\n")
    outfile.write(str(init_state.construct_circuit().draw())+"\n")

    par = np.loadtxt('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/Ry_linear_DEPTH_%d/beh2/R_%s/output_parameters.txt' % (depth,str(dist)))
    var_form  = EfficientSU2(num_qubits=H_op.num_qubits,reps=depth,entanglement='linear',su2_gates=['ry'],initial_state=init_state)
    circuit = var_form.bind_parameters(par)

    optimizer = COBYLA(maxiter=0)
    algo      = VQE(H_op,var_form,optimizer,aux_operators=A_op,include_custom=True,initial_point=par)
    backend          = Aer.get_backend('statevector_simulator')
    quantum_instance = QuantumInstance(backend=backend)
    algo_result      = algo.run(quantum_instance)
    
    # -----------------------------------------------------------------------------------------------------------------------
    
    p1 = algo._ret['opt_params']
    res_vqe,res_ee = get_results(H_op,A_op,molecule,core,algo_result,outfile)
    print_results('ry_linear_%d/beh2_%s_results.txt' % (depth,str(dist)),res_vqe,res_ee,dN=2)

    circuit = var_form.bind_parameters(p1)
    print_circuit('ry_linear_%d/beh2_%s_circuit.txt' % (depth,str(dist)),circuit)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Tue Apr 19 15:27:31 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 3
[INPUT] num. electrons = 6
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry Dooh subgroup None
[INPUT] Mole.unit = Angstrom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000  -0.700000000000 AA    0.000000000000   0.000000000000  -1.322808287196 Bohr
[INPUT]  3 H      0.000000000000   0.000000000000   0.700000000000 AA    0.000000000000   0.000000000000   1.322808287196 Bohr

nuclear repulsion = 6.42572327545714
point group symmetry = Dooh
num. orbitals of irrep A1g = 3
num. orbitals of irrep A1u = 2
num. orbitals of irrep E1uy = 1
num. orbitals of irrep E1ux = 1
number of shells = 5
number of NR pGTOs = 42
number of NR cGTOs = 7
basis = sto-6g
ecp = {}
CPU time:        15.56

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 6 electrons in irreps ['A1g', 'A1u']
    0 free electrons in irreps E1uy E1ux




******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpm4wgpk4h
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpm4wgpk4h
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (A1g) = -0.533375259176049  LUMO (E1ux) = 0.15912932089226
Initial guess E= -15.0164889300848  |g|= 1.08145e-12
macro= 0  E= -15.0164889300848  delta_E= -1.06581e-14  |g|= 1.08145e-12  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-15.0164889300848  |g|= 1.08145e-12  total 2 KF 4 JK
converged SCF energy = -15.0164889300848
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/chemistry_operator.py:170: DeprecationWarning: The qiskit.chemistry.chemistry_operator.MolecularChemistryResult object is deprecated as of 0.8.0 and will be removed no sooner than 3 months after the release. You should use qiskit.chemistry.algorithms.ground_state_solvers.FermionicGroundStateResult instead.
  super().__init__(a_dict)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:381: DeprecationWarning: The qiskit.chemistry.chemistry_operator.MolecularGroundStateResult object is deprecated as of 0.8.0 and will be removed no sooner than 3 months after the release. You should use qiskit.chemistry.algorithms.ground_state_solvers.FermionicGroundStateResult instead.
  mgsr = MolecularGroundStateResult()
gather_beh2_results_ry_linear.py:28: DeprecationWarning: Back-references to from Bit instances to their containing Registers have been deprecated. Instead, inspect Registers to find their contained Bits.
  qubits = [q.index for q in gate[1]]
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:91: DeprecationWarning: The ChemistryOperator is deprecated as of Qiskit Aqua 0.8.0 and will be removed no earlier than 3 months after the release date. Instead, the FermionicTransformation can be used to transform QMolecules and construct ground state result objects.
  super().__init__()
2022-04-19 15:27:31,921:qiskit.chemistry.core.hamiltonian:INFO: Configured orbital reduction list: [0]
2022-04-19 15:27:31,922:qiskit.chemistry.core.hamiltonian:INFO: Combined orbital reduction list: [0]
2022-04-19 15:27:31,922:qiskit.chemistry.core.hamiltonian:INFO:   converting to spin orbital reduction list: [0 7]
2022-04-19 15:27:31,922:qiskit.chemistry.core.hamiltonian:INFO:     => freezing spin orbitals: [0 7]
2022-04-19 15:27:31,922:qiskit.chemistry.core.hamiltonian:INFO:     => removing spin orbitals: [] (indexes accounting for freeze [])
2022-04-19 15:27:31,983:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital energy shift: -16.617170358057287
2022-04-19 15:27:34,451:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital x dipole shift: 0.0
2022-04-19 15:27:34,511:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital y dipole shift: 0.0
2022-04-19 15:27:34,576:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital z dipole shift: 0.0
2022-04-19 15:27:34,657:qiskit.chemistry.core.hamiltonian:INFO: Molecule num electrons: [3, 3], remaining for processing: [2, 2]
2022-04-19 15:27:34,658:qiskit.chemistry.core.hamiltonian:INFO: Molecule num spin orbitals: 14, remaining for processing: 12
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:417: DeprecationWarning: Processing a dictionary result is deprecated, pass a (minimum) eigensolver result now.
  ' pass a (minimum) eigensolver result now.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:134: DeprecationWarning: energy deprecated, use eigenvalues property.
  warnings.warn('energy deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:134: DeprecationWarning: energy deprecated, use eigenvalues property.
  warnings.warn('energy deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:149: DeprecationWarning: aux_ops deprecated, use aux_operator_eigenvalues property.
  DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:138: DeprecationWarning: energies deprecated, use eigenvalues property.
  warnings.warn('energies deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:138: DeprecationWarning: energies deprecated, use eigenvalues property.
  warnings.warn('energies deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:149: DeprecationWarning: aux_ops deprecated, use aux_operator_eigenvalues property.
  DeprecationWarning)
2022-04-19 15:27:39,780:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: 
==================== Setting of VQE ============================
Algorithm: VQE
-- max_evals_grouped: 1
-- circuit_sampler: None
-- expectation: None
-- user_valid_expectation: False
-- include_custom: True
-- expect_op: None
-- operator: SummedOp([
  -0.6192771499994366 * IIIIIII,
  -0.22730651630951085 * ZIIIZZI,
  -0.03321163049383873 * IIIIIXX,
  0.03321163049383873 * ZIIIZXX,
  -0.2253147080776801 * ZZIZZZZ,
  0.05679163446780257 * ZIIIZIX,
  -0.05679163446780257 * IZIZIIX,
  -0.7258623265715671 * IIZZIII,
  -0.7258623265715669 * IZZIIII,
  -0.6030929064553017 * IIIIIZZ,
  -1.157696674452874 * IIIIIZI,
  -0.22730651630951093 * IIIIZII,
  -0.033211630493838705 * XXXXXII,
  -0.033211630493838705 * YXXXYII,
  -0.22531470807768003 * IIIZZII,
  0.0567916344678026 * ZXXXZII,
  0.0567916344678026 * IYXYIII,
  -0.6030929064553021 * ZZIIIII,
  -1.1576966744528747 * ZIIIIII,
  0.08334297239187934 * IZIZIIZ,
  0.0005769335647369502 * IIIIIZX,
  -0.0005769335647369502 * ZZIZZZX,
  0.20146330378884153 * ZIZZZZI,
  0.20146330378884153 * ZZZIZZI,
  0.09225589239004754 * ZIIIZIZ,
  0.2070609674991095 * ZIIIZII,
  -0.005836451951820793 * ZZIZZYY,
  0.005836451951820793 * IZIZIYY,
  -0.01871300096477631 * IZIZIXI,
  0.01950649403086242 * IZIZIXZ,
  -0.0007934930660861022 * ZIIIZXI,
  -0.0007934930660861022 * ZZIZZXI,
  0.01950649403086242 * IIIIIXZ,
  -0.01871300096477631 * IIIIIXI,
  0.016414969451734544 * IIZZIXX,
  -0.016414969451734544 * ZIZZZXX,
  0.016414969451734544 * IZZIIXX,
  -0.016414969451734544 * ZZZIZXX,
  0.004059418345102082 * IIIIIYY,
  -0.004059418345102082 * ZIIIZYY,
  0.2574950295951019 * ZIIIIZI,
  -0.005096331270005864 * IIIIZXX,
  0.005096331270005864 * ZIIIIXX,
  -0.039900548641951715 * IZIZXIZ,
  0.039900548641951715 * IZIIXIZ,
  0.039900548641951715 * IIIIXII,
  -0.039900548641951715 * IIIZXII,
  0.02761983228392986 * IIIIXZX,
  -0.02761983228392986 * IIIZXZX,
  0.02761983228392986 * ZIIIYZY,
  -0.02761983228392986 * ZIIZYZY,
  0.005144111872843905 * IZZYYIZ,
  0.005144111872843905 * IZIXXIZ,
  0.005144111872843905 * ZZIXXZZ,
  0.005144111872843905 * ZZZYYZZ,
  0.005144111872843905 * IIYXYIZ,
  0.005144111872843905 * IZXXXIZ,
  0.005144111872843905 * ZZXXXZZ,
  0.005144111872843905 * ZIYXYZZ,
  -0.02761983228392986 * IXXYYIZ,
  0.02761983228392986 * ZYXYXIZ,
  0.02761983228392986 * IYXXYII,
  0.02761983228392986 * ZXXXXII,
  0.024829363427025124 * IYXXYZX,
  0.024829363427025124 * ZXXXXZX,
  -0.024829363427025124 * ZYXXXZY,
  0.024829363427025124 * IXXXYZY,
  0.005096331270005864 * XXXXXZI,
  0.005096331270005864 * YXXXYZI,
  0.040309126010204054 * YXXXYXX,
  0.040309126010204054 * XXXXXXX,
  0.12324352103383106 * ZIIZIZI,
  0.020172309693380137 * IIIZZXX,
  -0.020172309693380137 * ZIIZIXX,
  -0.02704289871919291 * ZYXYZZI,
  -0.02704289871919291 * IXXXIZI,
  -0.0176251544088086 * IYXYIXX,
  -0.0176251544088086 * ZXXXZXX,
  0.0176251544088086 * ZYXYZXX,
  0.0176251544088086 * IXXXIXX,
  0.014335857741559347 * YYXXIIZ,
  -0.014335857741559347 * XYXYZIZ,
  -0.014335857741559347 * YXXYIII,
  -0.014335857741559347 * XXXXZII,
  -0.016831661342722494 * YXXYIZX,
  -0.016831661342722494 * XXXXZZX,
  0.016831661342722494 * XXXYZZY,
  -0.016831661342722494 * YXXXIZY,
  -0.0026771586587551912 * YYXIIIZ,
  0.0026771586587551912 * XYYZIIZ,
  0.0026771586587551912 * XYYZZZZ,
  -0.0026771586587551912 * YYXIZZZ,
  -0.0026771586587551912 * YYIIIIZ,
  -0.0026771586587551912 * XXZIIIZ,
  -0.0026771586587551912 * XXZIZZZ,
  -0.0026771586587551912 * YYIIZZZ,
  0.11708525581707264 * IZIIZZI,
  0.025353540310681544 * ZZIIIXX,
  -0.025353540310681544 * IZIIZXX,
  0.03633815537358491 * XZIZIIZ,
  -0.03633815537358491 * XIIZIIZ,
  -0.03633815537358491 * XIIIIII,
  0.03633815537358491 * XZIIIII,
  -0.029412958655783628 * XIIIIZX,
  0.029412958655783628 * XZIIIZX,
  -0.029412958655783628 * YIIIZZY,
  0.029412958655783628 * YZIIZZY,
  0.24737009350931358 * IIIIZZI,
  0.1972129542494357 * ZZZIZZZ,
  0.1972129542494357 * ZIZZZZZ,
  0.1890750782620393 * ZZIZZII,
  0.10213539151593913 * ZZIZZIZ,
  -0.02146329537529415 * ZIZZZIX,
  0.02146329537529415 * IZZIIIX,
  -0.02146329537529415 * ZZZIZIX,
  0.02146329537529415 * IIZZIIX,
  -0.00989812276346958 * ZIIIZZX,
  0.00989812276346958 * IZIZIZX,
  0.12324352103383106 * ZZIZIZZ,
  -0.027042898719192913 * ZIIIIIX,
  0.027042898719192913 * IZIZZIX,
  0.014335857741559347 * ZIIIYYX,
  -0.014335857741559347 * ZIIZYYX,
  -0.014335857741559347 * IZIZXYY,
  0.014335857741559347 * IZIIXYY,
  -0.01683166134272249 * ZYXXXYX,
  0.01683166134272249 * IXXXYYX,
  -0.01683166134272249 * IXXYYYY,
  0.01683166134272249 * ZYXYXYY,
  0.020172309693380137 * XYXYXZZ,
  0.020172309693380137 * YYXYYZZ,
  0.0176251544088086 * XXXXXIX,
  0.0176251544088086 * YXXXYIX,
  -0.0176251544088086 * YYXYYIX,
  -0.0176251544088086 * XYXYXIX,
  0.2330296305961526 * ZZIIIZZ,
  0.001671692012152396 * ZIIZIIX,
  -0.001671692012152396 * IZIIZIX,
  -0.016279945780510962 * ZZZXZZZ,
  0.016279945780510962 * ZZIXIZZ,
  0.016279945780510962 * IIIXIII,
  -0.016279945780510962 * IIZXZII,
  0.016279945780510962 * ZIYYZZZ,
  0.016279945780510962 * ZZXXIZZ,
  0.016279945780510962 * IIXXIII,
  0.016279945780510962 * IZYYZII,
  -0.001671692012152396 * ZXXXZZZ,
  -0.001671692012152396 * IYXYIZZ,
  0.035730306195109925 * ZYXYZIX,
  0.035730306195109925 * IXXXIIX,
  0.013761477078992203 * XXXYZYX,
  -0.013761477078992203 * YXXXIYX,
  0.013761477078992203 * YYXXIYY,
  -0.013761477078992203 * XYXYZYY,
  -0.010270084289159999 * ZXXIZZZ,
  -0.010270084289159999 * IYYZZZZ,
  -0.010270084289159999 * IYYIIII,
  -0.010270084289159999 * ZXXZIII,
  -0.010270084289159999 * ZXIIZZZ,
  0.010270084289159999 * IXZIZZZ,
  0.010270084289159999 * IXZZIII,
  -0.010270084289159999 * ZXIZIII,
  0.22480538445714923 * IIIZZZZ,
  -0.01886307133245532 * YIIIZYX,
  0.01886307133245532 * YZIIZYX,
  0.01886307133245532 * XZIZIYY,
  -0.01886307133245532 * XIIZIYY,
  0.11589686859493135 * IZIZZZZ,
  -0.0287611940959249 * IIIIZIX,
  0.0287611940959249 * ZZIZIIX,
  0.38947179486833605 * IZIZIII,
  0.18647570075538616 * IIZZIZZ,
  0.1883020217766596 * IIZZIZI,
  0.20146330378884153 * IIZZZII,
  -0.0026771586587551912 * IZIXYXY,
  0.0026771586587551912 * IZZYXXY,
  -0.0026771586587551912 * IZZYYYY,
  -0.0026771586587551912 * IZIXXYY,
  -0.016414969451734544 * YXYYYII,
  -0.016414969451734544 * XXYYXII,
  0.1972129542494357 * IIZIZII,
  0.010270084289159999 * IZIYIZY,
  -0.010270084289159999 * IZZYZZY,
  0.010270084289159999 * IZZXIIX,
  -0.010270084289159999 * IZIXZIX,
  -0.02146329537529415 * IYYXIII,
  0.02146329537529415 * ZXYYZII,
  -0.012128953755816447 * IZXZIII,
  0.012128953755816447 * IIXIIII,
  0.009509761069347353 * IXYZIZY,
  -0.009509761069347353 * ZYXIIZY,
  0.009509761069347353 * IXXIIIX,
  0.009509761069347353 * ZYYZIIX,
  -0.0025708476077440662 * YYYZIXY,
  -0.0025708476077440662 * XYXIIXY,
  0.0025708476077440662 * YYXIIYY,
  -0.0025708476077440662 * XYYZIYY,
  0.18647570075538616 * ZZZZIII,
  0.1883020217766596 * ZIZZIII,
  0.18647570075538616 * IZZIIZZ,
  0.1883020217766596 * IZZIIZI,
  0.20146330378884153 * IZZIZII,
  -0.0026771586587551912 * IZXXYXY,
  0.0026771586587551912 * IIYXXXY,
  -0.0026771586587551912 * IIYXYYY,
  -0.0026771586587551912 * IZXXXYY,
  -0.016414969451734544 * YYYXYII,
  -0.016414969451734544 * XYYXXII,
  0.1972129542494357 * IZZZZII,
  0.010270084289159999 * IZXYIZY,
  -0.010270084289159999 * IIYXZZY,
  -0.010270084289159999 * IIYYIIX,
  -0.010270084289159999 * IZXXZIX,
  -0.02146329537529415 * IXYYIII,
  0.02146329537529415 * ZYYXZII,
  0.009509761069347353 * IYZIIZY,
  -0.009509761069347353 * ZYIIIZY,
  0.009509761069347353 * IXIIIIX,
  -0.009509761069347353 * ZXZIIIX,
  0.0025708476077440662 * YXZIIXY,
  -0.0025708476077440662 * XYIIIXY,
  0.0025708476077440662 * YYIIIYY,
  0.0025708476077440662 * XXZIIYY,
  0.18647570075538616 * ZIZIIII,
  0.1883020217766596 * ZZZIIII,
  0.07688554243850795 * IIIIIIZ,
  0.11708525581707264 * IIIIZZZ,
  0.03633815537358492 * IIIIXXZ,
  -0.03633815537358492 * IIIZXXZ,
  -0.03633815537358492 * IIIIXXI,
  0.03633815537358492 * IIIZXXI,
  0.02941295865578362 * IYXXYXZ,
  0.02941295865578362 * ZXXXXXZ,
  -0.02941295865578362 * IYXXYXI,
  -0.02941295865578362 * ZXXXXXI,
  0.025353540310681544 * YXXXYZZ,
  0.025353540310681544 * XXXXXZZ,
  -0.018863071332455322 * YXXYIXZ,
  -0.018863071332455322 * XXXXZXZ,
  0.018863071332455322 * YXXYIXI,
  0.018863071332455322 * XXXXZXI,
  -0.04011876971168971 * XIIIIXZ,
  0.04011876971168971 * XZIIIXZ,
  0.04011876971168971 * XIIIIXI,
  -0.04011876971168971 * XZIIIXI,
  0.11700431215019767 * ZIIIIZZ,
  0.11589686859493135 * IIIZZZI,
  -0.0287611940959249 * IYXYIZI,
  -0.0287611940959249 * ZXXXZZI,
  0.11700431215019767 * ZZIIIZI,
  0.08334297239187934 * IIIZIII,
  0.0005769335647369502 * ZXXXIII,
  0.0005769335647369502 * IYXYZII,
  0.09225589239004754 * ZZIIZII,
  -0.005836451951820793 * XXXYYII,
  0.005836451951820793 * YXXYXII,
  -0.01871300096477631 * XZIZXII,
  0.01950649403086242 * XIIZXII,
  0.0007934930660861022 * YIIIYII,
  0.0007934930660861022 * YZIZYII,
  0.01950649403086242 * XZIIXII,
  -0.01871300096477631 * XIIIXII,
  0.004059418345102082 * YYXXXII,
  -0.004059418345102082 * XYXXYII,
  0.10213539151593913 * ZIIZZII,
  -0.00989812276346958 * IXXXZII,
  -0.00989812276346958 * ZYXYIII,
  0.07688554243850795 * IZIIIII
])
-- quantum_instance: None
-- optimizer: <qiskit.aqua.components.optimizers.cobyla.COBYLA object at 0x7fd500630190>
-- gradient: None
-- cost_fn: <bound method VQE._energy_evaluation of <qiskit.aqua.algorithms.minimum_eigen_solvers.vqe.VQE object at 0x7fd500630fd0>>
-- initial_point: [-7.55979755 -4.71793492 -4.71354921 -4.69934692 -3.65886564  6.30886129
 11.51023718 -2.45929485 -3.19694066 -6.282735   -6.26845626 -4.69802804
 -4.19507341  0.51753844 -7.17151006 -7.74235507 -7.85115398  1.57787178
  1.45680399  1.57648305 -1.56697408]
-- var_form:      ┌──────────┐            ┌──────────┐                        ┌───────────┐»
q_0: ┤ RY(θ[0]) ├─────■──────┤ RY(θ[7]) ├─────────────────■──────┤ RY(θ[14]) ├»
     ├──────────┤   ┌─┴─┐    └──────────┘┌──────────┐   ┌─┴─┐    └───────────┘»
q_1: ┤ RY(θ[1]) ├───┤ X ├─────────■──────┤ RY(θ[8]) ├───┤ X ├──────────■──────»
     └──┬───┬───┘┌──┴───┴───┐   ┌─┴─┐    └──────────┘┌──┴───┴───┐    ┌─┴─┐    »
q_2: ───┤ X ├────┤ RY(θ[2]) ├───┤ X ├─────────■──────┤ RY(θ[9]) ├────┤ X ├────»
     ┌──┴───┴───┐└──────────┘   └───┘       ┌─┴─┐    └──────────┘┌───┴───┴───┐»
q_3: ┤ RY(θ[3]) ├───────────────────────────┤ X ├─────────■──────┤ RY(θ[10]) ├»
     ├──────────┤                           └───┘       ┌─┴─┐    └───────────┘»
q_4: ┤ RY(θ[4]) ├───────────────────────────────────────┤ X ├──────────■──────»
     ├──────────┤                                       └───┘        ┌─┴─┐    »
q_5: ┤ RY(θ[5]) ├────────────────────────────────────────────────────┤ X ├────»
     ├──────────┤                                                    └───┘    »
q_6: ┤ RY(θ[6]) ├─────────────────────────────────────────────────────────────»
     └──────────┘                                                             »
«                                                                      
«q_0: ─────────────────────────────────────────────────────────────────
«     ┌───────────┐                                                    
«q_1: ┤ RY(θ[15]) ├────────────────────────────────────────────────────
«     └───────────┘┌───────────┐                                       
«q_2: ──────■──────┤ RY(θ[16]) ├───────────────────────────────────────
«         ┌─┴─┐    └───────────┘┌───────────┐                          
«q_3: ────┤ X ├──────────■──────┤ RY(θ[17]) ├──────────────────────────
«     ┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───────────┐             
«q_4: ┤ RY(θ[11]) ├────┤ X ├──────────■──────┤ RY(θ[18]) ├─────────────
«     └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───────────┐
«q_5: ──────■──────┤ RY(θ[12]) ├────┤ X ├──────────■──────┤ RY(θ[19]) ├
«         ┌─┴─┐    ├───────────┤    └───┘        ┌─┴─┐    ├───────────┤
«q_6: ────┤ X ├────┤ RY(θ[13]) ├─────────────────┤ X ├────┤ RY(θ[20]) ├
«         └───┘    └───────────┘                 └───┘    └───────────┘
-- var_form_params: [ParameterVectorElement(θ[0]), ParameterVectorElement(θ[10]), ParameterVectorElement(θ[11]), ParameterVectorElement(θ[12]), ParameterVectorElement(θ[13]), ParameterVectorElement(θ[14]), ParameterVectorElement(θ[15]), ParameterVectorElement(θ[16]), ParameterVectorElement(θ[17]), ParameterVectorElement(θ[18]), ParameterVectorElement(θ[19]), ParameterVectorElement(θ[1]), ParameterVectorElement(θ[20]), ParameterVectorElement(θ[2]), ParameterVectorElement(θ[3]), ParameterVectorElement(θ[4]), ParameterVectorElement(θ[5]), ParameterVectorElement(θ[6]), ParameterVectorElement(θ[7]), ParameterVectorElement(θ[8]), ParameterVectorElement(θ[9])]
-- parameterized_circuits: None
-- ret: None
-- eval_time: None
-- callback: None
-- aux_op_nones: [False, False, False, False, False, False]
-- aux_operators: [SummedOp([PauliOp(Pauli('IIIIIII'), coeff=5.999999999999994), PauliOp(Pauli('ZIIIZZI'), coeff=-0.4999999999999996), PauliOp(Pauli('ZZIZZZZ'), coeff=-0.4999999999999996), PauliOp(Pauli('IIZZIII'), coeff=-0.9999999999999992), PauliOp(Pauli('IZZIIII'), coeff=-0.9999999999999992), PauliOp(Pauli('IIIIIZZ'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIIIZI'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIIZII'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIZZII'), coeff=-0.4999999999999996), PauliOp(Pauli('ZZIIIII'), coeff=-0.4999999999999996), PauliOp(Pauli('ZIIIIII'), coeff=-0.4999999999999996)], coeff=1.0, abelian=False), SummedOp([PauliOp(Pauli('IIIIIII'), coeff=1.4999999999999987), PauliOp(Pauli('IZIZIIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIZIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIIIZI'), coeff=-0.7499999999999992), PauliOp(Pauli('ZIIZIZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IZIIZZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIZZI'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIIIXZI'), coeff=0.1249999999999999), PauliOp(Pauli('IZIZXIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIZXZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IZIIXIZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIXII'), coeff=-0.1249999999999999), PauliOp(Pauli('ZZIZXZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZXII'), coeff=0.1249999999999999), PauliOp(Pauli('ZZIIXZZ'), coeff=0.1249999999999999), PauliOp(Pauli('IYXXXIY'), coeff=-0.1249999999999999), PauliOp(Pauli('IYXXYZX'), coeff=-0.1249999999999999), PauliOp(Pauli('ZXXXYIY'), coeff=0.1249999999999999), PauliOp(Pauli('ZXXXXZX'), coeff=-0.1249999999999999), PauliOp(Pauli('ZYXXXZY'), coeff=0.1249999999999999), PauliOp(Pauli('ZYXXYIX'), coeff=0.1249999999999999), PauliOp(Pauli('IXXXYZY'), coeff=-0.1249999999999999), PauliOp(Pauli('IXXXXIX'), coeff=0.1249999999999999), PauliOp(Pauli('YXXXXYX'), coeff=-0.2499999999999998), PauliOp(Pauli('YXXXYXX'), coeff=-0.2499999999999998), PauliOp(Pauli('XXXXYYX'), coeff=0.2499999999999998), PauliOp(Pauli('XXXXXXX'), coeff=-0.2499999999999998), PauliOp(Pauli('ZZIZZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZZIZZIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZZIZIZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZZIIIZZ'), coeff=-0.7499999999999992), PauliOp(Pauli('IIIZZZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IZIZZZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZYXXIZY'), coeff=-0.2499999999999998), PauliOp(Pauli('ZYXYZIX'), coeff=-0.2499999999999998), PauliOp(Pauli('IXXYZZY'), coeff=0.2499999999999998), PauliOp(Pauli('IXXXIIX'), coeff=-0.2499999999999998), PauliOp(Pauli('XXXXIXX'), coeff=0.1249999999999999), PauliOp(Pauli('XXXYZYX'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXYZXX'), coeff=0.1249999999999999), PauliOp(Pauli('YXXXIYX'), coeff=0.1249999999999999), PauliOp(Pauli('YYXXIYY'), coeff=-0.1249999999999999), PauliOp(Pauli('YYXYZXY'), coeff=-0.1249999999999999), PauliOp(Pauli('XYXYZYY'), coeff=0.1249999999999999), PauliOp(Pauli('XYXXIXY'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIIIZ'), coeff=0.1249999999999999), PauliOp(Pauli('IIIIZZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIIIIZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('YZIIIYZ'), coeff=-0.1249999999999999), PauliOp(Pauli('XIIIIXZ'), coeff=0.1249999999999999), PauliOp(Pauli('YIIIIYZ'), coeff=0.1249999999999999), PauliOp(Pauli('XZIIIXZ'), coeff=-0.1249999999999999), PauliOp(Pauli('XIIIIXI'), coeff=-0.1249999999999999), PauliOp(Pauli('YZIIIYI'), coeff=0.1249999999999999), PauliOp(Pauli('XZIIIXI'), coeff=0.1249999999999999), PauliOp(Pauli('YIIIIYI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZZZI'), coeff=-0.1249999999999999), PauliOp(Pauli('ZZIIIZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZIII'), coeff=0.1249999999999999), PauliOp(Pauli('ZZIIZII'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIZZII'), coeff=0.1249999999999999), PauliOp(Pauli('IZIIIII'), coeff=0.1249999999999999)], coeff=1.0, abelian=False), SummedOp([PauliOp(Pauli('ZIIIZZI'), coeff=-0.2499999999999998), PauliOp(Pauli('ZZIZZZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIIZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIIZI'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIZII'), coeff=0.2499999999999998), PauliOp(Pauli('IIIZZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZZIIIII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIIIII'), coeff=0.2499999999999998)], coeff=1.0, abelian=False), PauliOp(Pauli('IIIIIII'), coeff=0.0), PauliOp(Pauli('IIIIIII'), coeff=0.0), PauliOp(Pauli('IIIIIII'), coeff=0.0)]
-- eval_count: 0
===============================================================
NLocal: EfficientSU2
-- base_name: nlocal
-- data: [(<qiskit.circuit.library.standard_gates.x.XGate object at 0x7fd5483788d0>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31d350>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd57b573650>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2c4b50>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2c4510>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2c4210>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2c40d0>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2c4b90>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a31df50>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a2c4410>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a2c44d0>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a2c4350>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a2c4c90>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a2c4890>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31d610>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31d890>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31d310>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31d190>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2c4a50>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2c49d0>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2c4c50>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a31dcd0>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a2c4f90>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a2c4cd0>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a2c4290>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a2c4850>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5482b5610>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31de90>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31dc50>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31d550>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2c4e50>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2c4ed0>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a0e0c50>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a10a290>, [Qubit(QuantumRegister(7, 'q'), 6)], [])]
-- qregs: [QuantumRegister(7, 'q')]
-- qubits: [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)]
-- qubit_set: {Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 6)}
-- parameter_table: ParameterTable({ParameterVectorElement(θ[0]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31d350>, 0)], ParameterVectorElement(θ[1]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd57b573650>, 0)], ParameterVectorElement(θ[2]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2c4b50>, 0)], ParameterVectorElement(θ[3]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2c4510>, 0)], ParameterVectorElement(θ[4]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2c4210>, 0)], ParameterVectorElement(θ[5]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2c40d0>, 0)], ParameterVectorElement(θ[6]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2c4b90>, 0)], ParameterVectorElement(θ[7]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31d610>, 0)], ParameterVectorElement(θ[8]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31d890>, 0)], ParameterVectorElement(θ[9]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31d310>, 0)], ParameterVectorElement(θ[10]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31d190>, 0)], ParameterVectorElement(θ[11]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2c4a50>, 0)], ParameterVectorElement(θ[12]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2c49d0>, 0)], ParameterVectorElement(θ[13]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2c4c50>, 0)], ParameterVectorElement(θ[14]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31de90>, 0)], ParameterVectorElement(θ[15]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31dc50>, 0)], ParameterVectorElement(θ[16]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31d550>, 0)], ParameterVectorElement(θ[17]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2c4e50>, 0)], ParameterVectorElement(θ[18]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2c4ed0>, 0)], ParameterVectorElement(θ[19]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a0e0c50>, 0)], ParameterVectorElement(θ[20]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a10a290>, 0)]})
-- clbits: []
-- clbit_set: set()
-- ancillas: []
-- calibrations: defaultdict(<class 'dict'>, {})
-- parameters: [ParameterVectorElement(θ[0]), ParameterVectorElement(θ[1]), ParameterVectorElement(θ[2]), ParameterVectorElement(θ[3]), ParameterVectorElement(θ[4]), ParameterVectorElement(θ[5]), ParameterVectorElement(θ[6]), ParameterVectorElement(θ[7]), ParameterVectorElement(θ[8]), ParameterVectorElement(θ[9]), ParameterVectorElement(θ[10]), ParameterVectorElement(θ[11]), ParameterVectorElement(θ[12]), ParameterVectorElement(θ[13]), ParameterVectorElement(θ[14]), ParameterVectorElement(θ[15]), ParameterVectorElement(θ[16]), ParameterVectorElement(θ[17]), ParameterVectorElement(θ[18]), ParameterVectorElement(θ[19]), ParameterVectorElement(θ[20])]
-- layout: None
-- global_phase: 0
-- metadata: None
-- cregs: []
-- num_qubits: 7
-- insert_barriers: False
-- reps: 2
-- entanglement_blocks: [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7fd558717910>]
-- rotation_blocks: [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7fd548378110>]
-- prepended_blocks: []
-- prepended_entanglement: []
-- appended_blocks: []
-- appended_entanglement: []
-- entanglement: linear
-- entangler_maps: None
-- ordered_parameters: θ, ['θ[0]', 'θ[1]', 'θ[2]', 'θ[3]', 'θ[4]', 'θ[5]', 'θ[6]', 'θ[7]', 'θ[8]', 'θ[9]', 'θ[10]', 'θ[11]', 'θ[12]', 'θ[13]', 'θ[14]', 'θ[15]', 'θ[16]', 'θ[17]', 'θ[18]', 'θ[19]', 'θ[20]']
-- overwrite_block_parameters: True
-- skip_final_rotation_layer: False
-- skip_unentangled_qubits: False
-- initial_state: <qiskit.chemistry.components.initial_states.hartree_fock.HartreeFock object at 0x7fd57ca3f650>
-- initial_state_circuit:           
q_0: ─────
          
q_1: ─────
     ┌───┐
q_2: ┤ X ├
     └───┘
q_3: ─────
          
q_4: ─────
          
q_5: ─────
          
q_6: ─────
          
-- bounds: None
===============================================================
Optimizer: COBYLA
-- gradient_support_level: 1
-- bounds_support_level: 1
-- initial_point_support_level: 3
-- options: {'maxiter': 0, 'disp': False, 'rhobeg': 1.0}
-- max_evals_grouped: 1
-- tol: None
===============================================================

2022-04-19 15:27:39,781:qiskit.aqua.quantum_instance:INFO: statevector backend only works with shot=1, changing shots from 1024 to 1.
2022-04-19 15:27:39,781:qiskit.aqua.quantum_instance:INFO: 
Qiskit Terra version: 0.17.0
Backend: 'statevector_simulator (AerProvider)', with following setting:
{'basis_gates': ['ccx', 'cp', 'cswap', 'csx', 'cu1', 'cu2', 'cu3', 'cx', 'cy', 'cz', 'delay', 'diagonal', 'h', 'id', 'initialize', 'mcp', 'mcr', 'mcrx', 'mcry', 'mcrz', 'mcswap', 'mcsx', 'mcu1', 'mcu2', 'mcu3', 'mcx', 'mcy', 'mcz', 'multiplexer', 'p', 'pauli', 'r', 'rx', 'rxx', 'ry', 'ryy', 'rz', 'rzx', 'rzz', 's', 'sdg', 'swap', 'sx', 't', 'tdg', 'u', 'u1', 'u2', 'u3', 'unitary', 'x', 'y', 'z', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector'], 'coupling_map': None}
{'initial_layout': None, 'seed_transpiler': None, 'optimization_level': None}
RunConfig(max_credits=10, shots=1)
{'timeout': None}
{}
{}
Measurement mitigation: None
2022-04-19 15:27:39,782:qiskit.aqua.algorithms.vq_algorithm:INFO: Starting optimizer.
bounds=[(-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793)]
initial point=[-7.55979755 -4.71793492 -4.71354921 -4.69934692 -3.65886564  6.30886129
 11.51023718 -2.45929485 -3.19694066 -6.282735   -6.26845626 -4.69802804
 -4.19507341  0.51753844 -7.17151006 -7.74235507 -7.85115398  1.57787178
  1.45680399  1.57648305 -1.56697408]
2022-04-19 15:27:40,025:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: Energy evaluation returned [-4.84856594] - 13.26895 (ms), eval count: 1
2022-04-19 15:27:40,026:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: Optimization complete in 0.24392390251159668 seconds.
Found opt_params [-7.55979755 -4.71793492 -4.71354921 -4.69934692 -3.65886564  6.30886129
 11.51023718 -2.45929485 -3.19694066 -6.282735   -6.26845626 -4.69802804
 -4.19507341  0.51753844 -7.17151006 -7.74235507 -7.85115398  1.57787178
  1.45680399  1.57648305 -1.56697408] in 1 evals
ancilla op commutes?  True
ancilla op commutes?  True
ancilla op commutes?  True
ancilla op commutes?  False
ancilla op commutes?  False
ancilla op commutes?  False
#INFO: **** input file is /Users/mario/Documents/GitHub/VATech/quantum_database/second_quantization/circuits/hardware_efficient/gather_beh2_results_ry_linear.py ****
from qiskit                                        import *
from qiskit.chemistry.drivers                      import UnitsType,HFMethodType
from qiskit.chemistry.core                         import Hamiltonian,TransformationType,QubitMappingType
from qiskit.chemistry.components.initial_states    import HartreeFock
from qiskit.chemistry.components.variational_forms import UCCSD
from qiskit.aqua.components.optimizers             import L_BFGS_B,COBYLA,CG
from qiskit.aqua.algorithms                        import VQE
from qiskit.aqua                                   import QuantumInstance,aqua_globals
from qiskit.circuit.library                        import EfficientSU2

import logging
from   qiskit.chemistry import set_qiskit_chemistry_logging
from   qiskit.aqua      import set_qiskit_aqua_logging
set_qiskit_chemistry_logging(logging.INFO)
set_qiskit_aqua_logging(logging.INFO)

import sys
import numpy as np
sys.path.append('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/subroutines')
sys.path.append('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/subroutines/pyscfd')
from pyscfdriver import *
from utils       import *

def print_circuit(fname,circuit):
    outf = open(fname,'w')
    for gate in circuit:
        gate_name = gate[0].name
        qubits = [q.index for q in gate[1]]
        outf.write(str(gate_name)+' | '+' '.join([str(x) for x in qubits])+' | '+' '.join([str(x._symbol_expr) for x in gate[0].params])+'\n')
    outf.close()

def print_results(fname,res_vqe,res_ee,dN=0):
    outf = open(fname,'w')
    outf.write('%.12f %.12f \n' % (res_vqe[0],np.real(res_ee[0])))
    outf.write('%.12f %.12f \n' % (res_vqe[1]+dN,np.real(res_ee[1]+dN)))
    outf.write('%.12f %.12f \n' % (res_vqe[2],np.real(res_ee[2])))
    outf.write('%.12f %.12f \n' % (res_vqe[3],np.real(res_ee[3])))
    outf.close()

dist_list = [0.7] #2.1,2.3,2.5,2.7,2.9,3.1,3.3,3.5] #[0.7,0.9,1.1,1.3,1.5,1.7,1.9,2.1,2.3,2.5,2.7,2.9,3.1,3.3,3.5,3.7,3.9,4.1,4.3,4.5]
depth_list = [1,2,3,4,5,6,7,8]

for depth in depth_list:
  for dist in dist_list:

    outfile = open('pes.txt','w')
    
    outfile.write("Bond distance: {}\n".format(dist))
    rho = np.load('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/SCF_FCI/beh2/res_fourth_pass.npy',allow_pickle=True).item()
    rho = rho[str(dist)]['rho_scf']
    driver    = PySCFDriver(atom="Be 0.0000 0.0000 0.0000; H 0.0000 0.0000 -{0}; H 0.0000 0.0000 {0}".format(dist),
                            unit=UnitsType.ANGSTROM,charge=0,spin=0,basis='sto-6g',hf_method=HFMethodType.RHF,symgroup='dooh',
                            outfile=outfile,irrep_nelec={'A1g':4,'A1u':2},rho=rho)
    molecule  = driver.run()
    outfile.write("\nHartree-Fock energy %f \n" % (molecule.hf_energy))
    
    core      = Hamiltonian(transformation=TransformationType.FULL,qubit_mapping=QubitMappingType.PARITY,two_qubit_reduction=True,freeze_core=False,orbital_reduction=[0])
    H_op,A_op = core.run(molecule)
    
    z2syms,sqlist           = None,None
    H_op,A_op,z2syms,sqlist = taper(molecule,core,H_op,A_op,outfile)
    
    init_state = HartreeFock(num_orbitals=core._molecule_info['num_orbitals'],qubit_mapping=core._qubit_mapping,two_qubit_reduction=core._two_qubit_reduction,num_particles=core._molecule_info['num_particles'],sq_list=sqlist)
    init_state.construct_circuit()
    x_hf = init_state._bitstr
 
    outfile.write("\nHartree-Fock energy %f \n" % (molecule.hf_energy))
    outfile.write("\nHartree-Fock circuit\n")
    outfile.write(str(init_state.construct_circuit().draw())+"\n")

    par = np.loadtxt('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/Ry_linear_DEPTH_%d/beh2/R_%s/output_parameters.txt' % (depth,str(dist)))
    var_form  = EfficientSU2(num_qubits=H_op.num_qubits,reps=depth,entanglement='linear',su2_gates=['ry'],initial_state=init_state)
    circuit = var_form.bind_parameters(par)

    optimizer = COBYLA(maxiter=0)
    algo      = VQE(H_op,var_form,optimizer,aux_operators=A_op,include_custom=True,initial_point=par)
    backend          = Aer.get_backend('statevector_simulator')
    quantum_instance = QuantumInstance(backend=backend)
    algo_result      = algo.run(quantum_instance)
    
    # -----------------------------------------------------------------------------------------------------------------------
    
    p1 = algo._ret['opt_params']
    res_vqe,res_ee = get_results(H_op,A_op,molecule,core,algo_result,outfile)
    print_results('ry_linear_%d/beh2_%s_results.txt' % (depth,str(dist)),res_vqe,res_ee,dN=2)

    circuit = var_form.bind_parameters(p1)
    print_circuit('ry_linear_%d/beh2_%s_circuit.txt' % (depth,str(dist)),circuit)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Tue Apr 19 15:27:40 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 3
[INPUT] num. electrons = 6
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry Dooh subgroup None
[INPUT] Mole.unit = Angstrom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000  -0.700000000000 AA    0.000000000000   0.000000000000  -1.322808287196 Bohr
[INPUT]  3 H      0.000000000000   0.000000000000   0.700000000000 AA    0.000000000000   0.000000000000   1.322808287196 Bohr

nuclear repulsion = 6.42572327545714
point group symmetry = Dooh
num. orbitals of irrep A1g = 3
num. orbitals of irrep A1u = 2
num. orbitals of irrep E1uy = 1
num. orbitals of irrep E1ux = 1
number of shells = 5
number of NR pGTOs = 42
number of NR cGTOs = 7
basis = sto-6g
ecp = {}
CPU time:        26.35

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 6 electrons in irreps ['A1g', 'A1u']
    0 free electrons in irreps E1uy E1ux




******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpb3pqd808
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpb3pqd808
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (A1g) = -0.533375259176049  LUMO (E1ux) = 0.15912932089226
Initial guess E= -15.0164889300848  |g|= 1.08145e-12
macro= 0  E= -15.0164889300848  delta_E= -1.06581e-14  |g|= 1.08145e-12  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-15.0164889300848  |g|= 1.08145e-12  total 2 KF 4 JK
converged SCF energy = -15.0164889300848
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/chemistry_operator.py:170: DeprecationWarning: The qiskit.chemistry.chemistry_operator.MolecularChemistryResult object is deprecated as of 0.8.0 and will be removed no sooner than 3 months after the release. You should use qiskit.chemistry.algorithms.ground_state_solvers.FermionicGroundStateResult instead.
  super().__init__(a_dict)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:381: DeprecationWarning: The qiskit.chemistry.chemistry_operator.MolecularGroundStateResult object is deprecated as of 0.8.0 and will be removed no sooner than 3 months after the release. You should use qiskit.chemistry.algorithms.ground_state_solvers.FermionicGroundStateResult instead.
  mgsr = MolecularGroundStateResult()
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:91: DeprecationWarning: The ChemistryOperator is deprecated as of Qiskit Aqua 0.8.0 and will be removed no earlier than 3 months after the release date. Instead, the FermionicTransformation can be used to transform QMolecules and construct ground state result objects.
  super().__init__()
2022-04-19 15:27:40,595:qiskit.chemistry.core.hamiltonian:INFO: Configured orbital reduction list: [0]
2022-04-19 15:27:40,596:qiskit.chemistry.core.hamiltonian:INFO: Combined orbital reduction list: [0]
2022-04-19 15:27:40,596:qiskit.chemistry.core.hamiltonian:INFO:   converting to spin orbital reduction list: [0 7]
2022-04-19 15:27:40,618:qiskit.chemistry.core.hamiltonian:INFO:     => freezing spin orbitals: [0 7]
2022-04-19 15:27:40,619:qiskit.chemistry.core.hamiltonian:INFO:     => removing spin orbitals: [] (indexes accounting for freeze [])
2022-04-19 15:27:40,685:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital energy shift: -16.617170358057287
2022-04-19 15:27:43,111:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital x dipole shift: 0.0
2022-04-19 15:27:43,179:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital y dipole shift: 0.0
2022-04-19 15:27:43,243:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital z dipole shift: 0.0
2022-04-19 15:27:43,330:qiskit.chemistry.core.hamiltonian:INFO: Molecule num electrons: [3, 3], remaining for processing: [2, 2]
2022-04-19 15:27:43,331:qiskit.chemistry.core.hamiltonian:INFO: Molecule num spin orbitals: 14, remaining for processing: 12
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:417: DeprecationWarning: Processing a dictionary result is deprecated, pass a (minimum) eigensolver result now.
  ' pass a (minimum) eigensolver result now.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:134: DeprecationWarning: energy deprecated, use eigenvalues property.
  warnings.warn('energy deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:134: DeprecationWarning: energy deprecated, use eigenvalues property.
  warnings.warn('energy deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:149: DeprecationWarning: aux_ops deprecated, use aux_operator_eigenvalues property.
  DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:138: DeprecationWarning: energies deprecated, use eigenvalues property.
  warnings.warn('energies deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:138: DeprecationWarning: energies deprecated, use eigenvalues property.
  warnings.warn('energies deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:149: DeprecationWarning: aux_ops deprecated, use aux_operator_eigenvalues property.
  DeprecationWarning)
2022-04-19 15:27:48,509:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: 
==================== Setting of VQE ============================
Algorithm: VQE
-- max_evals_grouped: 1
-- circuit_sampler: None
-- expectation: None
-- user_valid_expectation: False
-- include_custom: True
-- expect_op: None
-- operator: SummedOp([
  -0.6192771499994366 * IIIIIII,
  -0.22730651630951085 * ZIIIZZI,
  -0.03321163049383873 * IIIIIXX,
  0.03321163049383873 * ZIIIZXX,
  -0.2253147080776801 * ZZIZZZZ,
  0.05679163446780257 * ZIIIZIX,
  -0.05679163446780257 * IZIZIIX,
  -0.7258623265715671 * IIZZIII,
  -0.7258623265715669 * IZZIIII,
  -0.6030929064553017 * IIIIIZZ,
  -1.157696674452874 * IIIIIZI,
  -0.22730651630951093 * IIIIZII,
  -0.033211630493838705 * XXXXXII,
  -0.033211630493838705 * YXXXYII,
  -0.22531470807768003 * IIIZZII,
  0.0567916344678026 * ZXXXZII,
  0.0567916344678026 * IYXYIII,
  -0.6030929064553021 * ZZIIIII,
  -1.1576966744528747 * ZIIIIII,
  0.08334297239187934 * IZIZIIZ,
  0.0005769335647369502 * IIIIIZX,
  -0.0005769335647369502 * ZZIZZZX,
  0.20146330378884153 * ZIZZZZI,
  0.20146330378884153 * ZZZIZZI,
  0.09225589239004754 * ZIIIZIZ,
  0.2070609674991095 * ZIIIZII,
  -0.005836451951820793 * ZZIZZYY,
  0.005836451951820793 * IZIZIYY,
  -0.01871300096477631 * IZIZIXI,
  0.01950649403086242 * IZIZIXZ,
  -0.0007934930660861022 * ZIIIZXI,
  -0.0007934930660861022 * ZZIZZXI,
  0.01950649403086242 * IIIIIXZ,
  -0.01871300096477631 * IIIIIXI,
  0.016414969451734544 * IIZZIXX,
  -0.016414969451734544 * ZIZZZXX,
  0.016414969451734544 * IZZIIXX,
  -0.016414969451734544 * ZZZIZXX,
  0.004059418345102082 * IIIIIYY,
  -0.004059418345102082 * ZIIIZYY,
  0.2574950295951019 * ZIIIIZI,
  -0.005096331270005864 * IIIIZXX,
  0.005096331270005864 * ZIIIIXX,
  -0.039900548641951715 * IZIZXIZ,
  0.039900548641951715 * IZIIXIZ,
  0.039900548641951715 * IIIIXII,
  -0.039900548641951715 * IIIZXII,
  0.02761983228392986 * IIIIXZX,
  -0.02761983228392986 * IIIZXZX,
  0.02761983228392986 * ZIIIYZY,
  -0.02761983228392986 * ZIIZYZY,
  0.005144111872843905 * IZZYYIZ,
  0.005144111872843905 * IZIXXIZ,
  0.005144111872843905 * ZZIXXZZ,
  0.005144111872843905 * ZZZYYZZ,
  0.005144111872843905 * IIYXYIZ,
  0.005144111872843905 * IZXXXIZ,
  0.005144111872843905 * ZZXXXZZ,
  0.005144111872843905 * ZIYXYZZ,
  -0.02761983228392986 * IXXYYIZ,
  0.02761983228392986 * ZYXYXIZ,
  0.02761983228392986 * IYXXYII,
  0.02761983228392986 * ZXXXXII,
  0.024829363427025124 * IYXXYZX,
  0.024829363427025124 * ZXXXXZX,
  -0.024829363427025124 * ZYXXXZY,
  0.024829363427025124 * IXXXYZY,
  0.005096331270005864 * XXXXXZI,
  0.005096331270005864 * YXXXYZI,
  0.040309126010204054 * YXXXYXX,
  0.040309126010204054 * XXXXXXX,
  0.12324352103383106 * ZIIZIZI,
  0.020172309693380137 * IIIZZXX,
  -0.020172309693380137 * ZIIZIXX,
  -0.02704289871919291 * ZYXYZZI,
  -0.02704289871919291 * IXXXIZI,
  -0.0176251544088086 * IYXYIXX,
  -0.0176251544088086 * ZXXXZXX,
  0.0176251544088086 * ZYXYZXX,
  0.0176251544088086 * IXXXIXX,
  0.014335857741559347 * YYXXIIZ,
  -0.014335857741559347 * XYXYZIZ,
  -0.014335857741559347 * YXXYIII,
  -0.014335857741559347 * XXXXZII,
  -0.016831661342722494 * YXXYIZX,
  -0.016831661342722494 * XXXXZZX,
  0.016831661342722494 * XXXYZZY,
  -0.016831661342722494 * YXXXIZY,
  -0.0026771586587551912 * YYXIIIZ,
  0.0026771586587551912 * XYYZIIZ,
  0.0026771586587551912 * XYYZZZZ,
  -0.0026771586587551912 * YYXIZZZ,
  -0.0026771586587551912 * YYIIIIZ,
  -0.0026771586587551912 * XXZIIIZ,
  -0.0026771586587551912 * XXZIZZZ,
  -0.0026771586587551912 * YYIIZZZ,
  0.11708525581707264 * IZIIZZI,
  0.025353540310681544 * ZZIIIXX,
  -0.025353540310681544 * IZIIZXX,
  0.03633815537358491 * XZIZIIZ,
  -0.03633815537358491 * XIIZIIZ,
  -0.03633815537358491 * XIIIIII,
  0.03633815537358491 * XZIIIII,
  -0.029412958655783628 * XIIIIZX,
  0.029412958655783628 * XZIIIZX,
  -0.029412958655783628 * YIIIZZY,
  0.029412958655783628 * YZIIZZY,
  0.24737009350931358 * IIIIZZI,
  0.1972129542494357 * ZZZIZZZ,
  0.1972129542494357 * ZIZZZZZ,
  0.1890750782620393 * ZZIZZII,
  0.10213539151593913 * ZZIZZIZ,
  -0.02146329537529415 * ZIZZZIX,
  0.02146329537529415 * IZZIIIX,
  -0.02146329537529415 * ZZZIZIX,
  0.02146329537529415 * IIZZIIX,
  -0.00989812276346958 * ZIIIZZX,
  0.00989812276346958 * IZIZIZX,
  0.12324352103383106 * ZZIZIZZ,
  -0.027042898719192913 * ZIIIIIX,
  0.027042898719192913 * IZIZZIX,
  0.014335857741559347 * ZIIIYYX,
  -0.014335857741559347 * ZIIZYYX,
  -0.014335857741559347 * IZIZXYY,
  0.014335857741559347 * IZIIXYY,
  -0.01683166134272249 * ZYXXXYX,
  0.01683166134272249 * IXXXYYX,
  -0.01683166134272249 * IXXYYYY,
  0.01683166134272249 * ZYXYXYY,
  0.020172309693380137 * XYXYXZZ,
  0.020172309693380137 * YYXYYZZ,
  0.0176251544088086 * XXXXXIX,
  0.0176251544088086 * YXXXYIX,
  -0.0176251544088086 * YYXYYIX,
  -0.0176251544088086 * XYXYXIX,
  0.2330296305961526 * ZZIIIZZ,
  0.001671692012152396 * ZIIZIIX,
  -0.001671692012152396 * IZIIZIX,
  -0.016279945780510962 * ZZZXZZZ,
  0.016279945780510962 * ZZIXIZZ,
  0.016279945780510962 * IIIXIII,
  -0.016279945780510962 * IIZXZII,
  0.016279945780510962 * ZIYYZZZ,
  0.016279945780510962 * ZZXXIZZ,
  0.016279945780510962 * IIXXIII,
  0.016279945780510962 * IZYYZII,
  -0.001671692012152396 * ZXXXZZZ,
  -0.001671692012152396 * IYXYIZZ,
  0.035730306195109925 * ZYXYZIX,
  0.035730306195109925 * IXXXIIX,
  0.013761477078992203 * XXXYZYX,
  -0.013761477078992203 * YXXXIYX,
  0.013761477078992203 * YYXXIYY,
  -0.013761477078992203 * XYXYZYY,
  -0.010270084289159999 * ZXXIZZZ,
  -0.010270084289159999 * IYYZZZZ,
  -0.010270084289159999 * IYYIIII,
  -0.010270084289159999 * ZXXZIII,
  -0.010270084289159999 * ZXIIZZZ,
  0.010270084289159999 * IXZIZZZ,
  0.010270084289159999 * IXZZIII,
  -0.010270084289159999 * ZXIZIII,
  0.22480538445714923 * IIIZZZZ,
  -0.01886307133245532 * YIIIZYX,
  0.01886307133245532 * YZIIZYX,
  0.01886307133245532 * XZIZIYY,
  -0.01886307133245532 * XIIZIYY,
  0.11589686859493135 * IZIZZZZ,
  -0.0287611940959249 * IIIIZIX,
  0.0287611940959249 * ZZIZIIX,
  0.38947179486833605 * IZIZIII,
  0.18647570075538616 * IIZZIZZ,
  0.1883020217766596 * IIZZIZI,
  0.20146330378884153 * IIZZZII,
  -0.0026771586587551912 * IZIXYXY,
  0.0026771586587551912 * IZZYXXY,
  -0.0026771586587551912 * IZZYYYY,
  -0.0026771586587551912 * IZIXXYY,
  -0.016414969451734544 * YXYYYII,
  -0.016414969451734544 * XXYYXII,
  0.1972129542494357 * IIZIZII,
  0.010270084289159999 * IZIYIZY,
  -0.010270084289159999 * IZZYZZY,
  0.010270084289159999 * IZZXIIX,
  -0.010270084289159999 * IZIXZIX,
  -0.02146329537529415 * IYYXIII,
  0.02146329537529415 * ZXYYZII,
  -0.012128953755816447 * IZXZIII,
  0.012128953755816447 * IIXIIII,
  0.009509761069347353 * IXYZIZY,
  -0.009509761069347353 * ZYXIIZY,
  0.009509761069347353 * IXXIIIX,
  0.009509761069347353 * ZYYZIIX,
  -0.0025708476077440662 * YYYZIXY,
  -0.0025708476077440662 * XYXIIXY,
  0.0025708476077440662 * YYXIIYY,
  -0.0025708476077440662 * XYYZIYY,
  0.18647570075538616 * ZZZZIII,
  0.1883020217766596 * ZIZZIII,
  0.18647570075538616 * IZZIIZZ,
  0.1883020217766596 * IZZIIZI,
  0.20146330378884153 * IZZIZII,
  -0.0026771586587551912 * IZXXYXY,
  0.0026771586587551912 * IIYXXXY,
  -0.0026771586587551912 * IIYXYYY,
  -0.0026771586587551912 * IZXXXYY,
  -0.016414969451734544 * YYYXYII,
  -0.016414969451734544 * XYYXXII,
  0.1972129542494357 * IZZZZII,
  0.010270084289159999 * IZXYIZY,
  -0.010270084289159999 * IIYXZZY,
  -0.010270084289159999 * IIYYIIX,
  -0.010270084289159999 * IZXXZIX,
  -0.02146329537529415 * IXYYIII,
  0.02146329537529415 * ZYYXZII,
  0.009509761069347353 * IYZIIZY,
  -0.009509761069347353 * ZYIIIZY,
  0.009509761069347353 * IXIIIIX,
  -0.009509761069347353 * ZXZIIIX,
  0.0025708476077440662 * YXZIIXY,
  -0.0025708476077440662 * XYIIIXY,
  0.0025708476077440662 * YYIIIYY,
  0.0025708476077440662 * XXZIIYY,
  0.18647570075538616 * ZIZIIII,
  0.1883020217766596 * ZZZIIII,
  0.07688554243850795 * IIIIIIZ,
  0.11708525581707264 * IIIIZZZ,
  0.03633815537358492 * IIIIXXZ,
  -0.03633815537358492 * IIIZXXZ,
  -0.03633815537358492 * IIIIXXI,
  0.03633815537358492 * IIIZXXI,
  0.02941295865578362 * IYXXYXZ,
  0.02941295865578362 * ZXXXXXZ,
  -0.02941295865578362 * IYXXYXI,
  -0.02941295865578362 * ZXXXXXI,
  0.025353540310681544 * YXXXYZZ,
  0.025353540310681544 * XXXXXZZ,
  -0.018863071332455322 * YXXYIXZ,
  -0.018863071332455322 * XXXXZXZ,
  0.018863071332455322 * YXXYIXI,
  0.018863071332455322 * XXXXZXI,
  -0.04011876971168971 * XIIIIXZ,
  0.04011876971168971 * XZIIIXZ,
  0.04011876971168971 * XIIIIXI,
  -0.04011876971168971 * XZIIIXI,
  0.11700431215019767 * ZIIIIZZ,
  0.11589686859493135 * IIIZZZI,
  -0.0287611940959249 * IYXYIZI,
  -0.0287611940959249 * ZXXXZZI,
  0.11700431215019767 * ZZIIIZI,
  0.08334297239187934 * IIIZIII,
  0.0005769335647369502 * ZXXXIII,
  0.0005769335647369502 * IYXYZII,
  0.09225589239004754 * ZZIIZII,
  -0.005836451951820793 * XXXYYII,
  0.005836451951820793 * YXXYXII,
  -0.01871300096477631 * XZIZXII,
  0.01950649403086242 * XIIZXII,
  0.0007934930660861022 * YIIIYII,
  0.0007934930660861022 * YZIZYII,
  0.01950649403086242 * XZIIXII,
  -0.01871300096477631 * XIIIXII,
  0.004059418345102082 * YYXXXII,
  -0.004059418345102082 * XYXXYII,
  0.10213539151593913 * ZIIZZII,
  -0.00989812276346958 * IXXXZII,
  -0.00989812276346958 * ZYXYIII,
  0.07688554243850795 * IZIIIII
])
-- quantum_instance: None
-- optimizer: <qiskit.aqua.components.optimizers.cobyla.COBYLA object at 0x7fd569721e10>
-- gradient: None
-- cost_fn: <bound method VQE._energy_evaluation of <qiskit.aqua.algorithms.minimum_eigen_solvers.vqe.VQE object at 0x7fd56a0ea8d0>>
-- initial_point: [-4.77327773e-02 -1.51234422e+00  1.23393857e-01  1.07925972e-02
  1.55395729e-02  1.34718012e-01  2.28155820e-03 -3.41001143e-02
 -1.58170548e+00  1.57284672e+00 -1.60002771e+00  4.36103744e-01
 -5.13014441e-01  1.97860826e-02 -9.91863604e-01  5.06127331e-01
  3.08708025e+00  4.63065896e-03  3.25842802e-02 -1.05757900e+00
  2.71635688e-01  6.44555599e-02  1.59072292e+00  1.41278467e+00
  1.57025830e+00  4.71919001e-02  1.05050412e+00  3.39443238e-03]
-- var_form:      ┌──────────┐            ┌──────────┐                        ┌───────────┐»
q_0: ┤ RY(θ[0]) ├─────■──────┤ RY(θ[7]) ├─────────────────■──────┤ RY(θ[14]) ├»
     ├──────────┤   ┌─┴─┐    └──────────┘┌──────────┐   ┌─┴─┐    └───────────┘»
q_1: ┤ RY(θ[1]) ├───┤ X ├─────────■──────┤ RY(θ[8]) ├───┤ X ├──────────■──────»
     └──┬───┬───┘┌──┴───┴───┐   ┌─┴─┐    └──────────┘┌──┴───┴───┐    ┌─┴─┐    »
q_2: ───┤ X ├────┤ RY(θ[2]) ├───┤ X ├─────────■──────┤ RY(θ[9]) ├────┤ X ├────»
     ┌──┴───┴───┐└──────────┘   └───┘       ┌─┴─┐    └──────────┘┌───┴───┴───┐»
q_3: ┤ RY(θ[3]) ├───────────────────────────┤ X ├─────────■──────┤ RY(θ[10]) ├»
     ├──────────┤                           └───┘       ┌─┴─┐    └───────────┘»
q_4: ┤ RY(θ[4]) ├───────────────────────────────────────┤ X ├──────────■──────»
     ├──────────┤                                       └───┘        ┌─┴─┐    »
q_5: ┤ RY(θ[5]) ├────────────────────────────────────────────────────┤ X ├────»
     ├──────────┤                                                    └───┘    »
q_6: ┤ RY(θ[6]) ├─────────────────────────────────────────────────────────────»
     └──────────┘                                                             »
«                               ┌───────────┐                          »
«q_0: ───────────────────■──────┤ RY(θ[21]) ├──────────────────────────»
«     ┌───────────┐    ┌─┴─┐    └───────────┘┌───────────┐             »
«q_1: ┤ RY(θ[15]) ├────┤ X ├──────────■──────┤ RY(θ[22]) ├─────────────»
«     └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───────────┐»
«q_2: ──────■──────┤ RY(θ[16]) ├────┤ X ├──────────■──────┤ RY(θ[23]) ├»
«         ┌─┴─┐    └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘»
«q_3: ────┤ X ├──────────■──────┤ RY(θ[17]) ├────┤ X ├──────────■──────»
«     ┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───┴───┴───┐    ┌─┴─┐    »
«q_4: ┤ RY(θ[11]) ├────┤ X ├──────────■──────┤ RY(θ[18]) ├────┤ X ├────»
«     └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───┴───┴───┐»
«q_5: ──────■──────┤ RY(θ[12]) ├────┤ X ├──────────■──────┤ RY(θ[19]) ├»
«         ┌─┴─┐    ├───────────┤    └───┘        ┌─┴─┐    ├───────────┤»
«q_6: ────┤ X ├────┤ RY(θ[13]) ├─────────────────┤ X ├────┤ RY(θ[20]) ├»
«         └───┘    └───────────┘                 └───┘    └───────────┘»
«                                            
«q_0: ───────────────────────────────────────
«                                            
«q_1: ───────────────────────────────────────
«                                            
«q_2: ───────────────────────────────────────
«     ┌───────────┐                          
«q_3: ┤ RY(θ[24]) ├──────────────────────────
«     └───────────┘┌───────────┐             
«q_4: ──────■──────┤ RY(θ[25]) ├─────────────
«         ┌─┴─┐    └───────────┘┌───────────┐
«q_5: ────┤ X ├──────────■──────┤ RY(θ[26]) ├
«         └───┘        ┌─┴─┐    ├───────────┤
«q_6: ─────────────────┤ X ├────┤ RY(θ[27]) ├
«                      └───┘    └───────────┘
-- var_form_params: [ParameterVectorElement(θ[0]), ParameterVectorElement(θ[10]), ParameterVectorElement(θ[11]), ParameterVectorElement(θ[12]), ParameterVectorElement(θ[13]), ParameterVectorElement(θ[14]), ParameterVectorElement(θ[15]), ParameterVectorElement(θ[16]), ParameterVectorElement(θ[17]), ParameterVectorElement(θ[18]), ParameterVectorElement(θ[19]), ParameterVectorElement(θ[1]), ParameterVectorElement(θ[20]), ParameterVectorElement(θ[21]), ParameterVectorElement(θ[22]), ParameterVectorElement(θ[23]), ParameterVectorElement(θ[24]), ParameterVectorElement(θ[25]), ParameterVectorElement(θ[26]), ParameterVectorElement(θ[27]), ParameterVectorElement(θ[2]), ParameterVectorElement(θ[3]), ParameterVectorElement(θ[4]), ParameterVectorElement(θ[5]), ParameterVectorElement(θ[6]), ParameterVectorElement(θ[7]), ParameterVectorElement(θ[8]), ParameterVectorElement(θ[9])]
-- parameterized_circuits: None
-- ret: None
-- eval_time: None
-- callback: None
-- aux_op_nones: [False, False, False, False, False, False]
-- aux_operators: [SummedOp([PauliOp(Pauli('IIIIIII'), coeff=5.999999999999994), PauliOp(Pauli('ZIIIZZI'), coeff=-0.4999999999999996), PauliOp(Pauli('ZZIZZZZ'), coeff=-0.4999999999999996), PauliOp(Pauli('IIZZIII'), coeff=-0.9999999999999992), PauliOp(Pauli('IZZIIII'), coeff=-0.9999999999999992), PauliOp(Pauli('IIIIIZZ'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIIIZI'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIIZII'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIZZII'), coeff=-0.4999999999999996), PauliOp(Pauli('ZZIIIII'), coeff=-0.4999999999999996), PauliOp(Pauli('ZIIIIII'), coeff=-0.4999999999999996)], coeff=1.0, abelian=False), SummedOp([PauliOp(Pauli('IIIIIII'), coeff=1.4999999999999987), PauliOp(Pauli('IZIZIIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIZIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIIIZI'), coeff=-0.7499999999999992), PauliOp(Pauli('ZIIZIZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IZIIZZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIZZI'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIIIXZI'), coeff=0.1249999999999999), PauliOp(Pauli('IZIZXIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIZXZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IZIIXIZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIXII'), coeff=-0.1249999999999999), PauliOp(Pauli('ZZIZXZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZXII'), coeff=0.1249999999999999), PauliOp(Pauli('ZZIIXZZ'), coeff=0.1249999999999999), PauliOp(Pauli('IYXXXIY'), coeff=-0.1249999999999999), PauliOp(Pauli('IYXXYZX'), coeff=-0.1249999999999999), PauliOp(Pauli('ZXXXYIY'), coeff=0.1249999999999999), PauliOp(Pauli('ZXXXXZX'), coeff=-0.1249999999999999), PauliOp(Pauli('ZYXXXZY'), coeff=0.1249999999999999), PauliOp(Pauli('ZYXXYIX'), coeff=0.1249999999999999), PauliOp(Pauli('IXXXYZY'), coeff=-0.1249999999999999), PauliOp(Pauli('IXXXXIX'), coeff=0.1249999999999999), PauliOp(Pauli('YXXXXYX'), coeff=-0.2499999999999998), PauliOp(Pauli('YXXXYXX'), coeff=-0.2499999999999998), PauliOp(Pauli('XXXXYYX'), coeff=0.2499999999999998), PauliOp(Pauli('XXXXXXX'), coeff=-0.2499999999999998), PauliOp(Pauli('ZZIZZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZZIZZIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZZIZIZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZZIIIZZ'), coeff=-0.7499999999999992), PauliOp(Pauli('IIIZZZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IZIZZZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZYXXIZY'), coeff=-0.2499999999999998), PauliOp(Pauli('ZYXYZIX'), coeff=-0.2499999999999998), PauliOp(Pauli('IXXYZZY'), coeff=0.2499999999999998), PauliOp(Pauli('IXXXIIX'), coeff=-0.2499999999999998), PauliOp(Pauli('XXXXIXX'), coeff=0.1249999999999999), PauliOp(Pauli('XXXYZYX'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXYZXX'), coeff=0.1249999999999999), PauliOp(Pauli('YXXXIYX'), coeff=0.1249999999999999), PauliOp(Pauli('YYXXIYY'), coeff=-0.1249999999999999), PauliOp(Pauli('YYXYZXY'), coeff=-0.1249999999999999), PauliOp(Pauli('XYXYZYY'), coeff=0.1249999999999999), PauliOp(Pauli('XYXXIXY'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIIIZ'), coeff=0.1249999999999999), PauliOp(Pauli('IIIIZZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIIIIZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('YZIIIYZ'), coeff=-0.1249999999999999), PauliOp(Pauli('XIIIIXZ'), coeff=0.1249999999999999), PauliOp(Pauli('YIIIIYZ'), coeff=0.1249999999999999), PauliOp(Pauli('XZIIIXZ'), coeff=-0.1249999999999999), PauliOp(Pauli('XIIIIXI'), coeff=-0.1249999999999999), PauliOp(Pauli('YZIIIYI'), coeff=0.1249999999999999), PauliOp(Pauli('XZIIIXI'), coeff=0.1249999999999999), PauliOp(Pauli('YIIIIYI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZZZI'), coeff=-0.1249999999999999), PauliOp(Pauli('ZZIIIZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZIII'), coeff=0.1249999999999999), PauliOp(Pauli('ZZIIZII'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIZZII'), coeff=0.1249999999999999), PauliOp(Pauli('IZIIIII'), coeff=0.1249999999999999)], coeff=1.0, abelian=False), SummedOp([PauliOp(Pauli('ZIIIZZI'), coeff=-0.2499999999999998), PauliOp(Pauli('ZZIZZZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIIZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIIZI'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIZII'), coeff=0.2499999999999998), PauliOp(Pauli('IIIZZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZZIIIII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIIIII'), coeff=0.2499999999999998)], coeff=1.0, abelian=False), PauliOp(Pauli('IIIIIII'), coeff=0.0), PauliOp(Pauli('IIIIIII'), coeff=0.0), PauliOp(Pauli('IIIIIII'), coeff=0.0)]
-- eval_count: 0
===============================================================
NLocal: EfficientSU2
-- base_name: nlocal
-- data: [(<qiskit.circuit.library.standard_gates.x.XGate object at 0x7fd5585b0fd0>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd508109c50>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd4f8162dd0>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd4f81621d0>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd4f8162090>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd4f8162690>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd4f8162810>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd4f81627d0>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd4f8162e10>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd4f8162190>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd4f8162bd0>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd57bb1fb10>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd57bb1fe90>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5483e3150>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5081098d0>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd508109450>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd508109910>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd508109d90>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd508109a50>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483e3950>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483e3e10>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd57b2396d0>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd508109b90>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5483e3f50>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5483e38d0>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5483e3b10>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5483e3b90>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd4f8162510>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483e3550>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483e3990>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483e3b50>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483e3e90>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483e3bd0>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483e36d0>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd4f8162a50>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5483e3090>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5483e3350>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5483e3750>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5483e3a50>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5483e3290>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd57ac61790>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483e3c90>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483e3910>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483e3810>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483e33d0>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483e31d0>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483e34d0>, [Qubit(QuantumRegister(7, 'q'), 6)], [])]
-- qregs: [QuantumRegister(7, 'q')]
-- qubits: [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)]
-- qubit_set: {Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 6)}
-- parameter_table: ParameterTable({ParameterVectorElement(θ[0]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd508109c50>, 0)], ParameterVectorElement(θ[1]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd4f8162dd0>, 0)], ParameterVectorElement(θ[2]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd4f81621d0>, 0)], ParameterVectorElement(θ[3]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd4f8162090>, 0)], ParameterVectorElement(θ[4]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd4f8162690>, 0)], ParameterVectorElement(θ[5]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd4f8162810>, 0)], ParameterVectorElement(θ[6]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd4f81627d0>, 0)], ParameterVectorElement(θ[7]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5081098d0>, 0)], ParameterVectorElement(θ[8]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd508109450>, 0)], ParameterVectorElement(θ[9]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd508109910>, 0)], ParameterVectorElement(θ[10]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd508109d90>, 0)], ParameterVectorElement(θ[11]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd508109a50>, 0)], ParameterVectorElement(θ[12]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483e3950>, 0)], ParameterVectorElement(θ[13]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483e3e10>, 0)], ParameterVectorElement(θ[14]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd4f8162510>, 0)], ParameterVectorElement(θ[15]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483e3550>, 0)], ParameterVectorElement(θ[16]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483e3990>, 0)], ParameterVectorElement(θ[17]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483e3b50>, 0)], ParameterVectorElement(θ[18]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483e3e90>, 0)], ParameterVectorElement(θ[19]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483e3bd0>, 0)], ParameterVectorElement(θ[20]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483e36d0>, 0)], ParameterVectorElement(θ[21]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd57ac61790>, 0)], ParameterVectorElement(θ[22]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483e3c90>, 0)], ParameterVectorElement(θ[23]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483e3910>, 0)], ParameterVectorElement(θ[24]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483e3810>, 0)], ParameterVectorElement(θ[25]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483e33d0>, 0)], ParameterVectorElement(θ[26]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483e31d0>, 0)], ParameterVectorElement(θ[27]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483e34d0>, 0)]})
-- clbits: []
-- clbit_set: set()
-- ancillas: []
-- calibrations: defaultdict(<class 'dict'>, {})
-- parameters: [ParameterVectorElement(θ[0]), ParameterVectorElement(θ[1]), ParameterVectorElement(θ[2]), ParameterVectorElement(θ[3]), ParameterVectorElement(θ[4]), ParameterVectorElement(θ[5]), ParameterVectorElement(θ[6]), ParameterVectorElement(θ[7]), ParameterVectorElement(θ[8]), ParameterVectorElement(θ[9]), ParameterVectorElement(θ[10]), ParameterVectorElement(θ[11]), ParameterVectorElement(θ[12]), ParameterVectorElement(θ[13]), ParameterVectorElement(θ[14]), ParameterVectorElement(θ[15]), ParameterVectorElement(θ[16]), ParameterVectorElement(θ[17]), ParameterVectorElement(θ[18]), ParameterVectorElement(θ[19]), ParameterVectorElement(θ[20]), ParameterVectorElement(θ[21]), ParameterVectorElement(θ[22]), ParameterVectorElement(θ[23]), ParameterVectorElement(θ[24]), ParameterVectorElement(θ[25]), ParameterVectorElement(θ[26]), ParameterVectorElement(θ[27])]
-- layout: None
-- global_phase: 0
-- metadata: None
-- cregs: []
-- num_qubits: 7
-- insert_barriers: False
-- reps: 3
-- entanglement_blocks: [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7fd5585b0150>]
-- rotation_blocks: [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7fd57ac61550>]
-- prepended_blocks: []
-- prepended_entanglement: []
-- appended_blocks: []
-- appended_entanglement: []
-- entanglement: linear
-- entangler_maps: None
-- ordered_parameters: θ, ['θ[0]', 'θ[1]', 'θ[2]', 'θ[3]', 'θ[4]', 'θ[5]', 'θ[6]', 'θ[7]', 'θ[8]', 'θ[9]', 'θ[10]', 'θ[11]', 'θ[12]', 'θ[13]', 'θ[14]', 'θ[15]', 'θ[16]', 'θ[17]', 'θ[18]', 'θ[19]', 'θ[20]', 'θ[21]', 'θ[22]', 'θ[23]', 'θ[24]', 'θ[25]', 'θ[26]', 'θ[27]']
-- overwrite_block_parameters: True
-- skip_final_rotation_layer: False
-- skip_unentangled_qubits: False
-- initial_state: <qiskit.chemistry.components.initial_states.hartree_fock.HartreeFock object at 0x7fd5282de290>
-- initial_state_circuit:           
q_0: ─────
          
q_1: ─────
     ┌───┐
q_2: ┤ X ├
     └───┘
q_3: ─────
          
q_4: ─────
          
q_5: ─────
          
q_6: ─────
          
-- bounds: None
===============================================================
Optimizer: COBYLA
-- gradient_support_level: 1
-- bounds_support_level: 1
-- initial_point_support_level: 3
-- options: {'maxiter': 0, 'disp': False, 'rhobeg': 1.0}
-- max_evals_grouped: 1
-- tol: None
===============================================================

2022-04-19 15:27:48,509:qiskit.aqua.quantum_instance:INFO: statevector backend only works with shot=1, changing shots from 1024 to 1.
2022-04-19 15:27:48,510:qiskit.aqua.quantum_instance:INFO: 
Qiskit Terra version: 0.17.0
Backend: 'statevector_simulator (AerProvider)', with following setting:
{'basis_gates': ['ccx', 'cp', 'cswap', 'csx', 'cu1', 'cu2', 'cu3', 'cx', 'cy', 'cz', 'delay', 'diagonal', 'h', 'id', 'initialize', 'mcp', 'mcr', 'mcrx', 'mcry', 'mcrz', 'mcswap', 'mcsx', 'mcu1', 'mcu2', 'mcu3', 'mcx', 'mcy', 'mcz', 'multiplexer', 'p', 'pauli', 'r', 'rx', 'rxx', 'ry', 'ryy', 'rz', 'rzx', 'rzz', 's', 'sdg', 'swap', 'sx', 't', 'tdg', 'u', 'u1', 'u2', 'u3', 'unitary', 'x', 'y', 'z', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector'], 'coupling_map': None}
{'initial_layout': None, 'seed_transpiler': None, 'optimization_level': None}
RunConfig(max_credits=10, shots=1)
{'timeout': None}
{}
{}
Measurement mitigation: None
2022-04-19 15:27:48,510:qiskit.aqua.algorithms.vq_algorithm:INFO: Starting optimizer.
bounds=[(-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793)]
initial point=[-4.77327773e-02 -1.51234422e+00  1.23393857e-01  1.07925972e-02
  1.55395729e-02  1.34718012e-01  2.28155820e-03 -3.41001143e-02
 -1.58170548e+00  1.57284672e+00 -1.60002771e+00  4.36103744e-01
 -5.13014441e-01  1.97860826e-02 -9.91863604e-01  5.06127331e-01
  3.08708025e+00  4.63065896e-03  3.25842802e-02 -1.05757900e+00
  2.71635688e-01  6.44555599e-02  1.59072292e+00  1.41278467e+00
  1.57025830e+00  4.71919001e-02  1.05050412e+00  3.39443238e-03]
2022-04-19 15:27:48,744:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: Energy evaluation returned [-4.85348985] - 14.38522 (ms), eval count: 1
2022-04-19 15:27:48,745:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: Optimization complete in 0.23474717140197754 seconds.
Found opt_params [-4.77327773e-02 -1.51234422e+00  1.23393857e-01  1.07925972e-02
  1.55395729e-02  1.34718012e-01  2.28155820e-03 -3.41001143e-02
 -1.58170548e+00  1.57284672e+00 -1.60002771e+00  4.36103744e-01
 -5.13014441e-01  1.97860826e-02 -9.91863604e-01  5.06127331e-01
  3.08708025e+00  4.63065896e-03  3.25842802e-02 -1.05757900e+00
  2.71635688e-01  6.44555599e-02  1.59072292e+00  1.41278467e+00
  1.57025830e+00  4.71919001e-02  1.05050412e+00  3.39443238e-03] in 1 evals
ancilla op commutes?  True
ancilla op commutes?  True
ancilla op commutes?  True
ancilla op commutes?  False
ancilla op commutes?  False
ancilla op commutes?  False
#INFO: **** input file is /Users/mario/Documents/GitHub/VATech/quantum_database/second_quantization/circuits/hardware_efficient/gather_beh2_results_ry_linear.py ****
from qiskit                                        import *
from qiskit.chemistry.drivers                      import UnitsType,HFMethodType
from qiskit.chemistry.core                         import Hamiltonian,TransformationType,QubitMappingType
from qiskit.chemistry.components.initial_states    import HartreeFock
from qiskit.chemistry.components.variational_forms import UCCSD
from qiskit.aqua.components.optimizers             import L_BFGS_B,COBYLA,CG
from qiskit.aqua.algorithms                        import VQE
from qiskit.aqua                                   import QuantumInstance,aqua_globals
from qiskit.circuit.library                        import EfficientSU2

import logging
from   qiskit.chemistry import set_qiskit_chemistry_logging
from   qiskit.aqua      import set_qiskit_aqua_logging
set_qiskit_chemistry_logging(logging.INFO)
set_qiskit_aqua_logging(logging.INFO)

import sys
import numpy as np
sys.path.append('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/subroutines')
sys.path.append('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/subroutines/pyscfd')
from pyscfdriver import *
from utils       import *

def print_circuit(fname,circuit):
    outf = open(fname,'w')
    for gate in circuit:
        gate_name = gate[0].name
        qubits = [q.index for q in gate[1]]
        outf.write(str(gate_name)+' | '+' '.join([str(x) for x in qubits])+' | '+' '.join([str(x._symbol_expr) for x in gate[0].params])+'\n')
    outf.close()

def print_results(fname,res_vqe,res_ee,dN=0):
    outf = open(fname,'w')
    outf.write('%.12f %.12f \n' % (res_vqe[0],np.real(res_ee[0])))
    outf.write('%.12f %.12f \n' % (res_vqe[1]+dN,np.real(res_ee[1]+dN)))
    outf.write('%.12f %.12f \n' % (res_vqe[2],np.real(res_ee[2])))
    outf.write('%.12f %.12f \n' % (res_vqe[3],np.real(res_ee[3])))
    outf.close()

dist_list = [0.7] #2.1,2.3,2.5,2.7,2.9,3.1,3.3,3.5] #[0.7,0.9,1.1,1.3,1.5,1.7,1.9,2.1,2.3,2.5,2.7,2.9,3.1,3.3,3.5,3.7,3.9,4.1,4.3,4.5]
depth_list = [1,2,3,4,5,6,7,8]

for depth in depth_list:
  for dist in dist_list:

    outfile = open('pes.txt','w')
    
    outfile.write("Bond distance: {}\n".format(dist))
    rho = np.load('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/SCF_FCI/beh2/res_fourth_pass.npy',allow_pickle=True).item()
    rho = rho[str(dist)]['rho_scf']
    driver    = PySCFDriver(atom="Be 0.0000 0.0000 0.0000; H 0.0000 0.0000 -{0}; H 0.0000 0.0000 {0}".format(dist),
                            unit=UnitsType.ANGSTROM,charge=0,spin=0,basis='sto-6g',hf_method=HFMethodType.RHF,symgroup='dooh',
                            outfile=outfile,irrep_nelec={'A1g':4,'A1u':2},rho=rho)
    molecule  = driver.run()
    outfile.write("\nHartree-Fock energy %f \n" % (molecule.hf_energy))
    
    core      = Hamiltonian(transformation=TransformationType.FULL,qubit_mapping=QubitMappingType.PARITY,two_qubit_reduction=True,freeze_core=False,orbital_reduction=[0])
    H_op,A_op = core.run(molecule)
    
    z2syms,sqlist           = None,None
    H_op,A_op,z2syms,sqlist = taper(molecule,core,H_op,A_op,outfile)
    
    init_state = HartreeFock(num_orbitals=core._molecule_info['num_orbitals'],qubit_mapping=core._qubit_mapping,two_qubit_reduction=core._two_qubit_reduction,num_particles=core._molecule_info['num_particles'],sq_list=sqlist)
    init_state.construct_circuit()
    x_hf = init_state._bitstr
 
    outfile.write("\nHartree-Fock energy %f \n" % (molecule.hf_energy))
    outfile.write("\nHartree-Fock circuit\n")
    outfile.write(str(init_state.construct_circuit().draw())+"\n")

    par = np.loadtxt('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/Ry_linear_DEPTH_%d/beh2/R_%s/output_parameters.txt' % (depth,str(dist)))
    var_form  = EfficientSU2(num_qubits=H_op.num_qubits,reps=depth,entanglement='linear',su2_gates=['ry'],initial_state=init_state)
    circuit = var_form.bind_parameters(par)

    optimizer = COBYLA(maxiter=0)
    algo      = VQE(H_op,var_form,optimizer,aux_operators=A_op,include_custom=True,initial_point=par)
    backend          = Aer.get_backend('statevector_simulator')
    quantum_instance = QuantumInstance(backend=backend)
    algo_result      = algo.run(quantum_instance)
    
    # -----------------------------------------------------------------------------------------------------------------------
    
    p1 = algo._ret['opt_params']
    res_vqe,res_ee = get_results(H_op,A_op,molecule,core,algo_result,outfile)
    print_results('ry_linear_%d/beh2_%s_results.txt' % (depth,str(dist)),res_vqe,res_ee,dN=2)

    circuit = var_form.bind_parameters(p1)
    print_circuit('ry_linear_%d/beh2_%s_circuit.txt' % (depth,str(dist)),circuit)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Tue Apr 19 15:27:49 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 3
[INPUT] num. electrons = 6
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry Dooh subgroup None
[INPUT] Mole.unit = Angstrom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000  -0.700000000000 AA    0.000000000000   0.000000000000  -1.322808287196 Bohr
[INPUT]  3 H      0.000000000000   0.000000000000   0.700000000000 AA    0.000000000000   0.000000000000   1.322808287196 Bohr

nuclear repulsion = 6.42572327545714
point group symmetry = Dooh
num. orbitals of irrep A1g = 3
num. orbitals of irrep A1u = 2
num. orbitals of irrep E1uy = 1
num. orbitals of irrep E1ux = 1
number of shells = 5
number of NR pGTOs = 42
number of NR cGTOs = 7
basis = sto-6g
ecp = {}
CPU time:        37.18

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 6 electrons in irreps ['A1g', 'A1u']
    0 free electrons in irreps E1uy E1ux




******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpfydnmi2i
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpfydnmi2i
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (A1g) = -0.533375259176049  LUMO (E1ux) = 0.15912932089226
Initial guess E= -15.0164889300848  |g|= 1.08145e-12
macro= 0  E= -15.0164889300848  delta_E= -1.06581e-14  |g|= 1.08145e-12  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-15.0164889300848  |g|= 1.08145e-12  total 2 KF 4 JK
converged SCF energy = -15.0164889300848
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/chemistry_operator.py:170: DeprecationWarning: The qiskit.chemistry.chemistry_operator.MolecularChemistryResult object is deprecated as of 0.8.0 and will be removed no sooner than 3 months after the release. You should use qiskit.chemistry.algorithms.ground_state_solvers.FermionicGroundStateResult instead.
  super().__init__(a_dict)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:381: DeprecationWarning: The qiskit.chemistry.chemistry_operator.MolecularGroundStateResult object is deprecated as of 0.8.0 and will be removed no sooner than 3 months after the release. You should use qiskit.chemistry.algorithms.ground_state_solvers.FermionicGroundStateResult instead.
  mgsr = MolecularGroundStateResult()
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:91: DeprecationWarning: The ChemistryOperator is deprecated as of Qiskit Aqua 0.8.0 and will be removed no earlier than 3 months after the release date. Instead, the FermionicTransformation can be used to transform QMolecules and construct ground state result objects.
  super().__init__()
2022-04-19 15:27:49,254:qiskit.chemistry.core.hamiltonian:INFO: Configured orbital reduction list: [0]
2022-04-19 15:27:49,255:qiskit.chemistry.core.hamiltonian:INFO: Combined orbital reduction list: [0]
2022-04-19 15:27:49,255:qiskit.chemistry.core.hamiltonian:INFO:   converting to spin orbital reduction list: [0 7]
2022-04-19 15:27:49,255:qiskit.chemistry.core.hamiltonian:INFO:     => freezing spin orbitals: [0 7]
2022-04-19 15:27:49,255:qiskit.chemistry.core.hamiltonian:INFO:     => removing spin orbitals: [] (indexes accounting for freeze [])
2022-04-19 15:27:49,317:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital energy shift: -16.617170358057287
2022-04-19 15:27:51,820:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital x dipole shift: 0.0
2022-04-19 15:27:51,885:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital y dipole shift: 0.0
2022-04-19 15:27:51,945:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital z dipole shift: 0.0
2022-04-19 15:27:52,024:qiskit.chemistry.core.hamiltonian:INFO: Molecule num electrons: [3, 3], remaining for processing: [2, 2]
2022-04-19 15:27:52,025:qiskit.chemistry.core.hamiltonian:INFO: Molecule num spin orbitals: 14, remaining for processing: 12
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:417: DeprecationWarning: Processing a dictionary result is deprecated, pass a (minimum) eigensolver result now.
  ' pass a (minimum) eigensolver result now.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:134: DeprecationWarning: energy deprecated, use eigenvalues property.
  warnings.warn('energy deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:134: DeprecationWarning: energy deprecated, use eigenvalues property.
  warnings.warn('energy deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:149: DeprecationWarning: aux_ops deprecated, use aux_operator_eigenvalues property.
  DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:138: DeprecationWarning: energies deprecated, use eigenvalues property.
  warnings.warn('energies deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:138: DeprecationWarning: energies deprecated, use eigenvalues property.
  warnings.warn('energies deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:149: DeprecationWarning: aux_ops deprecated, use aux_operator_eigenvalues property.
  DeprecationWarning)
2022-04-19 15:27:56,986:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: 
==================== Setting of VQE ============================
Algorithm: VQE
-- max_evals_grouped: 1
-- circuit_sampler: None
-- expectation: None
-- user_valid_expectation: False
-- include_custom: True
-- expect_op: None
-- operator: SummedOp([
  -0.6192771499994366 * IIIIIII,
  -0.22730651630951085 * ZIIIZZI,
  -0.03321163049383873 * IIIIIXX,
  0.03321163049383873 * ZIIIZXX,
  -0.2253147080776801 * ZZIZZZZ,
  0.05679163446780257 * ZIIIZIX,
  -0.05679163446780257 * IZIZIIX,
  -0.7258623265715671 * IIZZIII,
  -0.7258623265715669 * IZZIIII,
  -0.6030929064553017 * IIIIIZZ,
  -1.157696674452874 * IIIIIZI,
  -0.22730651630951093 * IIIIZII,
  -0.033211630493838705 * XXXXXII,
  -0.033211630493838705 * YXXXYII,
  -0.22531470807768003 * IIIZZII,
  0.0567916344678026 * ZXXXZII,
  0.0567916344678026 * IYXYIII,
  -0.6030929064553021 * ZZIIIII,
  -1.1576966744528747 * ZIIIIII,
  0.08334297239187934 * IZIZIIZ,
  0.0005769335647369502 * IIIIIZX,
  -0.0005769335647369502 * ZZIZZZX,
  0.20146330378884153 * ZIZZZZI,
  0.20146330378884153 * ZZZIZZI,
  0.09225589239004754 * ZIIIZIZ,
  0.2070609674991095 * ZIIIZII,
  -0.005836451951820793 * ZZIZZYY,
  0.005836451951820793 * IZIZIYY,
  -0.01871300096477631 * IZIZIXI,
  0.01950649403086242 * IZIZIXZ,
  -0.0007934930660861022 * ZIIIZXI,
  -0.0007934930660861022 * ZZIZZXI,
  0.01950649403086242 * IIIIIXZ,
  -0.01871300096477631 * IIIIIXI,
  0.016414969451734544 * IIZZIXX,
  -0.016414969451734544 * ZIZZZXX,
  0.016414969451734544 * IZZIIXX,
  -0.016414969451734544 * ZZZIZXX,
  0.004059418345102082 * IIIIIYY,
  -0.004059418345102082 * ZIIIZYY,
  0.2574950295951019 * ZIIIIZI,
  -0.005096331270005864 * IIIIZXX,
  0.005096331270005864 * ZIIIIXX,
  -0.039900548641951715 * IZIZXIZ,
  0.039900548641951715 * IZIIXIZ,
  0.039900548641951715 * IIIIXII,
  -0.039900548641951715 * IIIZXII,
  0.02761983228392986 * IIIIXZX,
  -0.02761983228392986 * IIIZXZX,
  0.02761983228392986 * ZIIIYZY,
  -0.02761983228392986 * ZIIZYZY,
  0.005144111872843905 * IZZYYIZ,
  0.005144111872843905 * IZIXXIZ,
  0.005144111872843905 * ZZIXXZZ,
  0.005144111872843905 * ZZZYYZZ,
  0.005144111872843905 * IIYXYIZ,
  0.005144111872843905 * IZXXXIZ,
  0.005144111872843905 * ZZXXXZZ,
  0.005144111872843905 * ZIYXYZZ,
  -0.02761983228392986 * IXXYYIZ,
  0.02761983228392986 * ZYXYXIZ,
  0.02761983228392986 * IYXXYII,
  0.02761983228392986 * ZXXXXII,
  0.024829363427025124 * IYXXYZX,
  0.024829363427025124 * ZXXXXZX,
  -0.024829363427025124 * ZYXXXZY,
  0.024829363427025124 * IXXXYZY,
  0.005096331270005864 * XXXXXZI,
  0.005096331270005864 * YXXXYZI,
  0.040309126010204054 * YXXXYXX,
  0.040309126010204054 * XXXXXXX,
  0.12324352103383106 * ZIIZIZI,
  0.020172309693380137 * IIIZZXX,
  -0.020172309693380137 * ZIIZIXX,
  -0.02704289871919291 * ZYXYZZI,
  -0.02704289871919291 * IXXXIZI,
  -0.0176251544088086 * IYXYIXX,
  -0.0176251544088086 * ZXXXZXX,
  0.0176251544088086 * ZYXYZXX,
  0.0176251544088086 * IXXXIXX,
  0.014335857741559347 * YYXXIIZ,
  -0.014335857741559347 * XYXYZIZ,
  -0.014335857741559347 * YXXYIII,
  -0.014335857741559347 * XXXXZII,
  -0.016831661342722494 * YXXYIZX,
  -0.016831661342722494 * XXXXZZX,
  0.016831661342722494 * XXXYZZY,
  -0.016831661342722494 * YXXXIZY,
  -0.0026771586587551912 * YYXIIIZ,
  0.0026771586587551912 * XYYZIIZ,
  0.0026771586587551912 * XYYZZZZ,
  -0.0026771586587551912 * YYXIZZZ,
  -0.0026771586587551912 * YYIIIIZ,
  -0.0026771586587551912 * XXZIIIZ,
  -0.0026771586587551912 * XXZIZZZ,
  -0.0026771586587551912 * YYIIZZZ,
  0.11708525581707264 * IZIIZZI,
  0.025353540310681544 * ZZIIIXX,
  -0.025353540310681544 * IZIIZXX,
  0.03633815537358491 * XZIZIIZ,
  -0.03633815537358491 * XIIZIIZ,
  -0.03633815537358491 * XIIIIII,
  0.03633815537358491 * XZIIIII,
  -0.029412958655783628 * XIIIIZX,
  0.029412958655783628 * XZIIIZX,
  -0.029412958655783628 * YIIIZZY,
  0.029412958655783628 * YZIIZZY,
  0.24737009350931358 * IIIIZZI,
  0.1972129542494357 * ZZZIZZZ,
  0.1972129542494357 * ZIZZZZZ,
  0.1890750782620393 * ZZIZZII,
  0.10213539151593913 * ZZIZZIZ,
  -0.02146329537529415 * ZIZZZIX,
  0.02146329537529415 * IZZIIIX,
  -0.02146329537529415 * ZZZIZIX,
  0.02146329537529415 * IIZZIIX,
  -0.00989812276346958 * ZIIIZZX,
  0.00989812276346958 * IZIZIZX,
  0.12324352103383106 * ZZIZIZZ,
  -0.027042898719192913 * ZIIIIIX,
  0.027042898719192913 * IZIZZIX,
  0.014335857741559347 * ZIIIYYX,
  -0.014335857741559347 * ZIIZYYX,
  -0.014335857741559347 * IZIZXYY,
  0.014335857741559347 * IZIIXYY,
  -0.01683166134272249 * ZYXXXYX,
  0.01683166134272249 * IXXXYYX,
  -0.01683166134272249 * IXXYYYY,
  0.01683166134272249 * ZYXYXYY,
  0.020172309693380137 * XYXYXZZ,
  0.020172309693380137 * YYXYYZZ,
  0.0176251544088086 * XXXXXIX,
  0.0176251544088086 * YXXXYIX,
  -0.0176251544088086 * YYXYYIX,
  -0.0176251544088086 * XYXYXIX,
  0.2330296305961526 * ZZIIIZZ,
  0.001671692012152396 * ZIIZIIX,
  -0.001671692012152396 * IZIIZIX,
  -0.016279945780510962 * ZZZXZZZ,
  0.016279945780510962 * ZZIXIZZ,
  0.016279945780510962 * IIIXIII,
  -0.016279945780510962 * IIZXZII,
  0.016279945780510962 * ZIYYZZZ,
  0.016279945780510962 * ZZXXIZZ,
  0.016279945780510962 * IIXXIII,
  0.016279945780510962 * IZYYZII,
  -0.001671692012152396 * ZXXXZZZ,
  -0.001671692012152396 * IYXYIZZ,
  0.035730306195109925 * ZYXYZIX,
  0.035730306195109925 * IXXXIIX,
  0.013761477078992203 * XXXYZYX,
  -0.013761477078992203 * YXXXIYX,
  0.013761477078992203 * YYXXIYY,
  -0.013761477078992203 * XYXYZYY,
  -0.010270084289159999 * ZXXIZZZ,
  -0.010270084289159999 * IYYZZZZ,
  -0.010270084289159999 * IYYIIII,
  -0.010270084289159999 * ZXXZIII,
  -0.010270084289159999 * ZXIIZZZ,
  0.010270084289159999 * IXZIZZZ,
  0.010270084289159999 * IXZZIII,
  -0.010270084289159999 * ZXIZIII,
  0.22480538445714923 * IIIZZZZ,
  -0.01886307133245532 * YIIIZYX,
  0.01886307133245532 * YZIIZYX,
  0.01886307133245532 * XZIZIYY,
  -0.01886307133245532 * XIIZIYY,
  0.11589686859493135 * IZIZZZZ,
  -0.0287611940959249 * IIIIZIX,
  0.0287611940959249 * ZZIZIIX,
  0.38947179486833605 * IZIZIII,
  0.18647570075538616 * IIZZIZZ,
  0.1883020217766596 * IIZZIZI,
  0.20146330378884153 * IIZZZII,
  -0.0026771586587551912 * IZIXYXY,
  0.0026771586587551912 * IZZYXXY,
  -0.0026771586587551912 * IZZYYYY,
  -0.0026771586587551912 * IZIXXYY,
  -0.016414969451734544 * YXYYYII,
  -0.016414969451734544 * XXYYXII,
  0.1972129542494357 * IIZIZII,
  0.010270084289159999 * IZIYIZY,
  -0.010270084289159999 * IZZYZZY,
  0.010270084289159999 * IZZXIIX,
  -0.010270084289159999 * IZIXZIX,
  -0.02146329537529415 * IYYXIII,
  0.02146329537529415 * ZXYYZII,
  -0.012128953755816447 * IZXZIII,
  0.012128953755816447 * IIXIIII,
  0.009509761069347353 * IXYZIZY,
  -0.009509761069347353 * ZYXIIZY,
  0.009509761069347353 * IXXIIIX,
  0.009509761069347353 * ZYYZIIX,
  -0.0025708476077440662 * YYYZIXY,
  -0.0025708476077440662 * XYXIIXY,
  0.0025708476077440662 * YYXIIYY,
  -0.0025708476077440662 * XYYZIYY,
  0.18647570075538616 * ZZZZIII,
  0.1883020217766596 * ZIZZIII,
  0.18647570075538616 * IZZIIZZ,
  0.1883020217766596 * IZZIIZI,
  0.20146330378884153 * IZZIZII,
  -0.0026771586587551912 * IZXXYXY,
  0.0026771586587551912 * IIYXXXY,
  -0.0026771586587551912 * IIYXYYY,
  -0.0026771586587551912 * IZXXXYY,
  -0.016414969451734544 * YYYXYII,
  -0.016414969451734544 * XYYXXII,
  0.1972129542494357 * IZZZZII,
  0.010270084289159999 * IZXYIZY,
  -0.010270084289159999 * IIYXZZY,
  -0.010270084289159999 * IIYYIIX,
  -0.010270084289159999 * IZXXZIX,
  -0.02146329537529415 * IXYYIII,
  0.02146329537529415 * ZYYXZII,
  0.009509761069347353 * IYZIIZY,
  -0.009509761069347353 * ZYIIIZY,
  0.009509761069347353 * IXIIIIX,
  -0.009509761069347353 * ZXZIIIX,
  0.0025708476077440662 * YXZIIXY,
  -0.0025708476077440662 * XYIIIXY,
  0.0025708476077440662 * YYIIIYY,
  0.0025708476077440662 * XXZIIYY,
  0.18647570075538616 * ZIZIIII,
  0.1883020217766596 * ZZZIIII,
  0.07688554243850795 * IIIIIIZ,
  0.11708525581707264 * IIIIZZZ,
  0.03633815537358492 * IIIIXXZ,
  -0.03633815537358492 * IIIZXXZ,
  -0.03633815537358492 * IIIIXXI,
  0.03633815537358492 * IIIZXXI,
  0.02941295865578362 * IYXXYXZ,
  0.02941295865578362 * ZXXXXXZ,
  -0.02941295865578362 * IYXXYXI,
  -0.02941295865578362 * ZXXXXXI,
  0.025353540310681544 * YXXXYZZ,
  0.025353540310681544 * XXXXXZZ,
  -0.018863071332455322 * YXXYIXZ,
  -0.018863071332455322 * XXXXZXZ,
  0.018863071332455322 * YXXYIXI,
  0.018863071332455322 * XXXXZXI,
  -0.04011876971168971 * XIIIIXZ,
  0.04011876971168971 * XZIIIXZ,
  0.04011876971168971 * XIIIIXI,
  -0.04011876971168971 * XZIIIXI,
  0.11700431215019767 * ZIIIIZZ,
  0.11589686859493135 * IIIZZZI,
  -0.0287611940959249 * IYXYIZI,
  -0.0287611940959249 * ZXXXZZI,
  0.11700431215019767 * ZZIIIZI,
  0.08334297239187934 * IIIZIII,
  0.0005769335647369502 * ZXXXIII,
  0.0005769335647369502 * IYXYZII,
  0.09225589239004754 * ZZIIZII,
  -0.005836451951820793 * XXXYYII,
  0.005836451951820793 * YXXYXII,
  -0.01871300096477631 * XZIZXII,
  0.01950649403086242 * XIIZXII,
  0.0007934930660861022 * YIIIYII,
  0.0007934930660861022 * YZIZYII,
  0.01950649403086242 * XZIIXII,
  -0.01871300096477631 * XIIIXII,
  0.004059418345102082 * YYXXXII,
  -0.004059418345102082 * XYXXYII,
  0.10213539151593913 * ZIIZZII,
  -0.00989812276346958 * IXXXZII,
  -0.00989812276346958 * ZYXYIII,
  0.07688554243850795 * IZIIIII
])
-- quantum_instance: None
-- optimizer: <qiskit.aqua.components.optimizers.cobyla.COBYLA object at 0x7fd52832bd90>
-- gradient: None
-- cost_fn: <bound method VQE._energy_evaluation of <qiskit.aqua.algorithms.minimum_eigen_solvers.vqe.VQE object at 0x7fd52832bb90>>
-- initial_point: [-1.35336355e+00  7.64173394e-02 -3.81780006e-02  1.54066015e-01
  1.97427470e-04  1.04886421e+00 -3.31525788e-03  1.56138182e+00
 -3.38239051e-01  1.57032059e+00 -1.49441687e-02  1.35641650e-01
  7.00380128e-03 -2.67358676e-01 -9.39827836e-03  3.05191780e-02
 -4.17160258e-03  2.92147992e-02 -1.62681314e+00 -5.17737808e-01
  1.16542820e+00  6.38046067e-03 -3.61797388e-01  6.72777593e-01
  1.44075449e+00  6.85135369e-03  1.17874152e-02 -1.05258422e+00
 -1.21570906e+00  8.95724491e-01  1.61672416e+00  1.57085394e+00
 -2.53872460e-02 -2.50920702e-01  4.99983609e-01]
-- var_form:      ┌──────────┐            ┌──────────┐                        ┌───────────┐»
q_0: ┤ RY(θ[0]) ├─────■──────┤ RY(θ[7]) ├─────────────────■──────┤ RY(θ[14]) ├»
     ├──────────┤   ┌─┴─┐    └──────────┘┌──────────┐   ┌─┴─┐    └───────────┘»
q_1: ┤ RY(θ[1]) ├───┤ X ├─────────■──────┤ RY(θ[8]) ├───┤ X ├──────────■──────»
     └──┬───┬───┘┌──┴───┴───┐   ┌─┴─┐    └──────────┘┌──┴───┴───┐    ┌─┴─┐    »
q_2: ───┤ X ├────┤ RY(θ[2]) ├───┤ X ├─────────■──────┤ RY(θ[9]) ├────┤ X ├────»
     ┌──┴───┴───┐└──────────┘   └───┘       ┌─┴─┐    └──────────┘┌───┴───┴───┐»
q_3: ┤ RY(θ[3]) ├───────────────────────────┤ X ├─────────■──────┤ RY(θ[10]) ├»
     ├──────────┤                           └───┘       ┌─┴─┐    └───────────┘»
q_4: ┤ RY(θ[4]) ├───────────────────────────────────────┤ X ├──────────■──────»
     ├──────────┤                                       └───┘        ┌─┴─┐    »
q_5: ┤ RY(θ[5]) ├────────────────────────────────────────────────────┤ X ├────»
     ├──────────┤                                                    └───┘    »
q_6: ┤ RY(θ[6]) ├─────────────────────────────────────────────────────────────»
     └──────────┘                                                             »
«                               ┌───────────┐                          »
«q_0: ───────────────────■──────┤ RY(θ[21]) ├───────────────────■──────»
«     ┌───────────┐    ┌─┴─┐    └───────────┘┌───────────┐    ┌─┴─┐    »
«q_1: ┤ RY(θ[15]) ├────┤ X ├──────────■──────┤ RY(θ[22]) ├────┤ X ├────»
«     └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───┴───┴───┐»
«q_2: ──────■──────┤ RY(θ[16]) ├────┤ X ├──────────■──────┤ RY(θ[23]) ├»
«         ┌─┴─┐    └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘»
«q_3: ────┤ X ├──────────■──────┤ RY(θ[17]) ├────┤ X ├──────────■──────»
«     ┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───┴───┴───┐    ┌─┴─┐    »
«q_4: ┤ RY(θ[11]) ├────┤ X ├──────────■──────┤ RY(θ[18]) ├────┤ X ├────»
«     └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───┴───┴───┐»
«q_5: ──────■──────┤ RY(θ[12]) ├────┤ X ├──────────■──────┤ RY(θ[19]) ├»
«         ┌─┴─┐    ├───────────┤    └───┘        ┌─┴─┐    ├───────────┤»
«q_6: ────┤ X ├────┤ RY(θ[13]) ├─────────────────┤ X ├────┤ RY(θ[20]) ├»
«         └───┘    └───────────┘                 └───┘    └───────────┘»
«     ┌───────────┐                                                    »
«q_0: ┤ RY(θ[28]) ├────────────────────────────────────────────────────»
«     └───────────┘┌───────────┐                                       »
«q_1: ──────■──────┤ RY(θ[29]) ├───────────────────────────────────────»
«         ┌─┴─┐    └───────────┘┌───────────┐                          »
«q_2: ────┤ X ├──────────■──────┤ RY(θ[30]) ├──────────────────────────»
«     ┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───────────┐             »
«q_3: ┤ RY(θ[24]) ├────┤ X ├──────────■──────┤ RY(θ[31]) ├─────────────»
«     └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───────────┐»
«q_4: ──────■──────┤ RY(θ[25]) ├────┤ X ├──────────■──────┤ RY(θ[32]) ├»
«         ┌─┴─┐    └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘»
«q_5: ────┤ X ├──────────■──────┤ RY(θ[26]) ├────┤ X ├──────────■──────»
«         └───┘        ┌─┴─┐    ├───────────┤    └───┘        ┌─┴─┐    »
«q_6: ─────────────────┤ X ├────┤ RY(θ[27]) ├─────────────────┤ X ├────»
«                      └───┘    └───────────┘                 └───┘    »
«                  
«q_0: ─────────────
«                  
«q_1: ─────────────
«                  
«q_2: ─────────────
«                  
«q_3: ─────────────
«                  
«q_4: ─────────────
«     ┌───────────┐
«q_5: ┤ RY(θ[33]) ├
«     ├───────────┤
«q_6: ┤ RY(θ[34]) ├
«     └───────────┘
-- var_form_params: [ParameterVectorElement(θ[0]), ParameterVectorElement(θ[10]), ParameterVectorElement(θ[11]), ParameterVectorElement(θ[12]), ParameterVectorElement(θ[13]), ParameterVectorElement(θ[14]), ParameterVectorElement(θ[15]), ParameterVectorElement(θ[16]), ParameterVectorElement(θ[17]), ParameterVectorElement(θ[18]), ParameterVectorElement(θ[19]), ParameterVectorElement(θ[1]), ParameterVectorElement(θ[20]), ParameterVectorElement(θ[21]), ParameterVectorElement(θ[22]), ParameterVectorElement(θ[23]), ParameterVectorElement(θ[24]), ParameterVectorElement(θ[25]), ParameterVectorElement(θ[26]), ParameterVectorElement(θ[27]), ParameterVectorElement(θ[28]), ParameterVectorElement(θ[29]), ParameterVectorElement(θ[2]), ParameterVectorElement(θ[30]), ParameterVectorElement(θ[31]), ParameterVectorElement(θ[32]), ParameterVectorElement(θ[33]), ParameterVectorElement(θ[34]), ParameterVectorElement(θ[3]), ParameterVectorElement(θ[4]), ParameterVectorElement(θ[5]), ParameterVectorElement(θ[6]), ParameterVectorElement(θ[7]), ParameterVectorElement(θ[8]), ParameterVectorElement(θ[9])]
-- parameterized_circuits: None
-- ret: None
-- eval_time: None
-- callback: None
-- aux_op_nones: [False, False, False, False, False, False]
-- aux_operators: [SummedOp([PauliOp(Pauli('IIIIIII'), coeff=5.999999999999994), PauliOp(Pauli('ZIIIZZI'), coeff=-0.4999999999999996), PauliOp(Pauli('ZZIZZZZ'), coeff=-0.4999999999999996), PauliOp(Pauli('IIZZIII'), coeff=-0.9999999999999992), PauliOp(Pauli('IZZIIII'), coeff=-0.9999999999999992), PauliOp(Pauli('IIIIIZZ'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIIIZI'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIIZII'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIZZII'), coeff=-0.4999999999999996), PauliOp(Pauli('ZZIIIII'), coeff=-0.4999999999999996), PauliOp(Pauli('ZIIIIII'), coeff=-0.4999999999999996)], coeff=1.0, abelian=False), SummedOp([PauliOp(Pauli('IIIIIII'), coeff=1.4999999999999987), PauliOp(Pauli('IZIZIIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIZIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIIIZI'), coeff=-0.7499999999999992), PauliOp(Pauli('ZIIZIZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IZIIZZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIZZI'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIIIXZI'), coeff=0.1249999999999999), PauliOp(Pauli('IZIZXIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIZXZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IZIIXIZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIXII'), coeff=-0.1249999999999999), PauliOp(Pauli('ZZIZXZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZXII'), coeff=0.1249999999999999), PauliOp(Pauli('ZZIIXZZ'), coeff=0.1249999999999999), PauliOp(Pauli('IYXXXIY'), coeff=-0.1249999999999999), PauliOp(Pauli('IYXXYZX'), coeff=-0.1249999999999999), PauliOp(Pauli('ZXXXYIY'), coeff=0.1249999999999999), PauliOp(Pauli('ZXXXXZX'), coeff=-0.1249999999999999), PauliOp(Pauli('ZYXXXZY'), coeff=0.1249999999999999), PauliOp(Pauli('ZYXXYIX'), coeff=0.1249999999999999), PauliOp(Pauli('IXXXYZY'), coeff=-0.1249999999999999), PauliOp(Pauli('IXXXXIX'), coeff=0.1249999999999999), PauliOp(Pauli('YXXXXYX'), coeff=-0.2499999999999998), PauliOp(Pauli('YXXXYXX'), coeff=-0.2499999999999998), PauliOp(Pauli('XXXXYYX'), coeff=0.2499999999999998), PauliOp(Pauli('XXXXXXX'), coeff=-0.2499999999999998), PauliOp(Pauli('ZZIZZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZZIZZIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZZIZIZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZZIIIZZ'), coeff=-0.7499999999999992), PauliOp(Pauli('IIIZZZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IZIZZZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZYXXIZY'), coeff=-0.2499999999999998), PauliOp(Pauli('ZYXYZIX'), coeff=-0.2499999999999998), PauliOp(Pauli('IXXYZZY'), coeff=0.2499999999999998), PauliOp(Pauli('IXXXIIX'), coeff=-0.2499999999999998), PauliOp(Pauli('XXXXIXX'), coeff=0.1249999999999999), PauliOp(Pauli('XXXYZYX'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXYZXX'), coeff=0.1249999999999999), PauliOp(Pauli('YXXXIYX'), coeff=0.1249999999999999), PauliOp(Pauli('YYXXIYY'), coeff=-0.1249999999999999), PauliOp(Pauli('YYXYZXY'), coeff=-0.1249999999999999), PauliOp(Pauli('XYXYZYY'), coeff=0.1249999999999999), PauliOp(Pauli('XYXXIXY'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIIIZ'), coeff=0.1249999999999999), PauliOp(Pauli('IIIIZZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIIIIZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('YZIIIYZ'), coeff=-0.1249999999999999), PauliOp(Pauli('XIIIIXZ'), coeff=0.1249999999999999), PauliOp(Pauli('YIIIIYZ'), coeff=0.1249999999999999), PauliOp(Pauli('XZIIIXZ'), coeff=-0.1249999999999999), PauliOp(Pauli('XIIIIXI'), coeff=-0.1249999999999999), PauliOp(Pauli('YZIIIYI'), coeff=0.1249999999999999), PauliOp(Pauli('XZIIIXI'), coeff=0.1249999999999999), PauliOp(Pauli('YIIIIYI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZZZI'), coeff=-0.1249999999999999), PauliOp(Pauli('ZZIIIZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZIII'), coeff=0.1249999999999999), PauliOp(Pauli('ZZIIZII'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIZZII'), coeff=0.1249999999999999), PauliOp(Pauli('IZIIIII'), coeff=0.1249999999999999)], coeff=1.0, abelian=False), SummedOp([PauliOp(Pauli('ZIIIZZI'), coeff=-0.2499999999999998), PauliOp(Pauli('ZZIZZZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIIZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIIZI'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIZII'), coeff=0.2499999999999998), PauliOp(Pauli('IIIZZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZZIIIII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIIIII'), coeff=0.2499999999999998)], coeff=1.0, abelian=False), PauliOp(Pauli('IIIIIII'), coeff=0.0), PauliOp(Pauli('IIIIIII'), coeff=0.0), PauliOp(Pauli('IIIIIII'), coeff=0.0)]
-- eval_count: 0
===============================================================
NLocal: EfficientSU2
-- base_name: nlocal
-- data: [(<qiskit.circuit.library.standard_gates.x.XGate object at 0x7fd508115250>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd500992e90>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd500992510>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd500992f50>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5484468d0>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548446890>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548446bd0>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548446b50>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd500992850>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd548446e10>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd548446c10>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd548446d50>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd548446910>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd548446dd0>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd500992750>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd500992f90>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd500992590>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548446a90>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548446850>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548446990>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548446b90>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd57bb457d0>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd548446690>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd57cb58d10>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a122410>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a122190>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd528297e90>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd500992ed0>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd57bb45390>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd57bb45790>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd57bb45050>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd57bb450d0>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd528297a50>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd528297750>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd54839edd0>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd528297590>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd528297890>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd528297d50>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd528297cd0>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd528297710>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548446f50>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548446cd0>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd528297990>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5282978d0>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd528297dd0>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd528297410>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd528297190>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5009928d0>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd548446950>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd548384850>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd548384250>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd548384b10>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd548384cd0>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5009929d0>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd500992450>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd54839ea50>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548384890>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548384f90>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548384810>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548384550>, [Qubit(QuantumRegister(7, 'q'), 6)], [])]
-- qregs: [QuantumRegister(7, 'q')]
-- qubits: [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)]
-- qubit_set: {Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 6)}
-- parameter_table: ParameterTable({ParameterVectorElement(θ[0]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd500992e90>, 0)], ParameterVectorElement(θ[1]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd500992510>, 0)], ParameterVectorElement(θ[2]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd500992f50>, 0)], ParameterVectorElement(θ[3]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5484468d0>, 0)], ParameterVectorElement(θ[4]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548446890>, 0)], ParameterVectorElement(θ[5]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548446bd0>, 0)], ParameterVectorElement(θ[6]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548446b50>, 0)], ParameterVectorElement(θ[7]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd500992750>, 0)], ParameterVectorElement(θ[8]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd500992f90>, 0)], ParameterVectorElement(θ[9]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd500992590>, 0)], ParameterVectorElement(θ[10]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548446a90>, 0)], ParameterVectorElement(θ[11]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548446850>, 0)], ParameterVectorElement(θ[12]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548446990>, 0)], ParameterVectorElement(θ[13]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548446b90>, 0)], ParameterVectorElement(θ[14]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd500992ed0>, 0)], ParameterVectorElement(θ[15]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd57bb45390>, 0)], ParameterVectorElement(θ[16]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd57bb45790>, 0)], ParameterVectorElement(θ[17]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd57bb45050>, 0)], ParameterVectorElement(θ[18]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd57bb450d0>, 0)], ParameterVectorElement(θ[19]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd528297a50>, 0)], ParameterVectorElement(θ[20]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd528297750>, 0)], ParameterVectorElement(θ[21]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548446f50>, 0)], ParameterVectorElement(θ[22]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548446cd0>, 0)], ParameterVectorElement(θ[23]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd528297990>, 0)], ParameterVectorElement(θ[24]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5282978d0>, 0)], ParameterVectorElement(θ[25]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd528297dd0>, 0)], ParameterVectorElement(θ[26]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd528297410>, 0)], ParameterVectorElement(θ[27]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd528297190>, 0)], ParameterVectorElement(θ[28]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5009929d0>, 0)], ParameterVectorElement(θ[29]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd500992450>, 0)], ParameterVectorElement(θ[30]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd54839ea50>, 0)], ParameterVectorElement(θ[31]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548384890>, 0)], ParameterVectorElement(θ[32]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548384f90>, 0)], ParameterVectorElement(θ[33]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548384810>, 0)], ParameterVectorElement(θ[34]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548384550>, 0)]})
-- clbits: []
-- clbit_set: set()
-- ancillas: []
-- calibrations: defaultdict(<class 'dict'>, {})
-- parameters: [ParameterVectorElement(θ[0]), ParameterVectorElement(θ[1]), ParameterVectorElement(θ[2]), ParameterVectorElement(θ[3]), ParameterVectorElement(θ[4]), ParameterVectorElement(θ[5]), ParameterVectorElement(θ[6]), ParameterVectorElement(θ[7]), ParameterVectorElement(θ[8]), ParameterVectorElement(θ[9]), ParameterVectorElement(θ[10]), ParameterVectorElement(θ[11]), ParameterVectorElement(θ[12]), ParameterVectorElement(θ[13]), ParameterVectorElement(θ[14]), ParameterVectorElement(θ[15]), ParameterVectorElement(θ[16]), ParameterVectorElement(θ[17]), ParameterVectorElement(θ[18]), ParameterVectorElement(θ[19]), ParameterVectorElement(θ[20]), ParameterVectorElement(θ[21]), ParameterVectorElement(θ[22]), ParameterVectorElement(θ[23]), ParameterVectorElement(θ[24]), ParameterVectorElement(θ[25]), ParameterVectorElement(θ[26]), ParameterVectorElement(θ[27]), ParameterVectorElement(θ[28]), ParameterVectorElement(θ[29]), ParameterVectorElement(θ[30]), ParameterVectorElement(θ[31]), ParameterVectorElement(θ[32]), ParameterVectorElement(θ[33]), ParameterVectorElement(θ[34])]
-- layout: None
-- global_phase: 0
-- metadata: None
-- cregs: []
-- num_qubits: 7
-- insert_barriers: False
-- reps: 4
-- entanglement_blocks: [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7fd54839e650>]
-- rotation_blocks: [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7fd54839e5d0>]
-- prepended_blocks: []
-- prepended_entanglement: []
-- appended_blocks: []
-- appended_entanglement: []
-- entanglement: linear
-- entangler_maps: None
-- ordered_parameters: θ, ['θ[0]', 'θ[1]', 'θ[2]', 'θ[3]', 'θ[4]', 'θ[5]', 'θ[6]', 'θ[7]', 'θ[8]', 'θ[9]', 'θ[10]', 'θ[11]', 'θ[12]', 'θ[13]', 'θ[14]', 'θ[15]', 'θ[16]', 'θ[17]', 'θ[18]', 'θ[19]', 'θ[20]', 'θ[21]', 'θ[22]', 'θ[23]', 'θ[24]', 'θ[25]', 'θ[26]', 'θ[27]', 'θ[28]', 'θ[29]', 'θ[30]', 'θ[31]', 'θ[32]', 'θ[33]', 'θ[34]']
-- overwrite_block_parameters: True
-- skip_final_rotation_layer: False
-- skip_unentangled_qubits: False
-- initial_state: <qiskit.chemistry.components.initial_states.hartree_fock.HartreeFock object at 0x7fd57bef70d0>
-- initial_state_circuit:           
q_0: ─────
          
q_1: ─────
     ┌───┐
q_2: ┤ X ├
     └───┘
q_3: ─────
          
q_4: ─────
          
q_5: ─────
          
q_6: ─────
          
-- bounds: None
===============================================================
Optimizer: COBYLA
-- gradient_support_level: 1
-- bounds_support_level: 1
-- initial_point_support_level: 3
-- options: {'maxiter': 0, 'disp': False, 'rhobeg': 1.0}
-- max_evals_grouped: 1
-- tol: None
===============================================================

2022-04-19 15:27:56,986:qiskit.aqua.quantum_instance:INFO: statevector backend only works with shot=1, changing shots from 1024 to 1.
2022-04-19 15:27:56,986:qiskit.aqua.quantum_instance:INFO: 
Qiskit Terra version: 0.17.0
Backend: 'statevector_simulator (AerProvider)', with following setting:
{'basis_gates': ['ccx', 'cp', 'cswap', 'csx', 'cu1', 'cu2', 'cu3', 'cx', 'cy', 'cz', 'delay', 'diagonal', 'h', 'id', 'initialize', 'mcp', 'mcr', 'mcrx', 'mcry', 'mcrz', 'mcswap', 'mcsx', 'mcu1', 'mcu2', 'mcu3', 'mcx', 'mcy', 'mcz', 'multiplexer', 'p', 'pauli', 'r', 'rx', 'rxx', 'ry', 'ryy', 'rz', 'rzx', 'rzz', 's', 'sdg', 'swap', 'sx', 't', 'tdg', 'u', 'u1', 'u2', 'u3', 'unitary', 'x', 'y', 'z', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector'], 'coupling_map': None}
{'initial_layout': None, 'seed_transpiler': None, 'optimization_level': None}
RunConfig(max_credits=10, shots=1)
{'timeout': None}
{}
{}
Measurement mitigation: None
2022-04-19 15:27:56,987:qiskit.aqua.algorithms.vq_algorithm:INFO: Starting optimizer.
bounds=[(-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793)]
initial point=[-1.35336355e+00  7.64173394e-02 -3.81780006e-02  1.54066015e-01
  1.97427470e-04  1.04886421e+00 -3.31525788e-03  1.56138182e+00
 -3.38239051e-01  1.57032059e+00 -1.49441687e-02  1.35641650e-01
  7.00380128e-03 -2.67358676e-01 -9.39827836e-03  3.05191780e-02
 -4.17160258e-03  2.92147992e-02 -1.62681314e+00 -5.17737808e-01
  1.16542820e+00  6.38046067e-03 -3.61797388e-01  6.72777593e-01
  1.44075449e+00  6.85135369e-03  1.17874152e-02 -1.05258422e+00
 -1.21570906e+00  8.95724491e-01  1.61672416e+00  1.57085394e+00
 -2.53872460e-02 -2.50920702e-01  4.99983609e-01]
2022-04-19 15:27:57,221:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: Energy evaluation returned [-4.85331277] - 17.44795 (ms), eval count: 1
2022-04-19 15:27:57,221:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: Optimization complete in 0.23406600952148438 seconds.
Found opt_params [-1.35336355e+00  7.64173394e-02 -3.81780006e-02  1.54066015e-01
  1.97427470e-04  1.04886421e+00 -3.31525788e-03  1.56138182e+00
 -3.38239051e-01  1.57032059e+00 -1.49441687e-02  1.35641650e-01
  7.00380128e-03 -2.67358676e-01 -9.39827836e-03  3.05191780e-02
 -4.17160258e-03  2.92147992e-02 -1.62681314e+00 -5.17737808e-01
  1.16542820e+00  6.38046067e-03 -3.61797388e-01  6.72777593e-01
  1.44075449e+00  6.85135369e-03  1.17874152e-02 -1.05258422e+00
 -1.21570906e+00  8.95724491e-01  1.61672416e+00  1.57085394e+00
 -2.53872460e-02 -2.50920702e-01  4.99983609e-01] in 1 evals
ancilla op commutes?  True
ancilla op commutes?  True
ancilla op commutes?  True
ancilla op commutes?  False
ancilla op commutes?  False
ancilla op commutes?  False
#INFO: **** input file is /Users/mario/Documents/GitHub/VATech/quantum_database/second_quantization/circuits/hardware_efficient/gather_beh2_results_ry_linear.py ****
from qiskit                                        import *
from qiskit.chemistry.drivers                      import UnitsType,HFMethodType
from qiskit.chemistry.core                         import Hamiltonian,TransformationType,QubitMappingType
from qiskit.chemistry.components.initial_states    import HartreeFock
from qiskit.chemistry.components.variational_forms import UCCSD
from qiskit.aqua.components.optimizers             import L_BFGS_B,COBYLA,CG
from qiskit.aqua.algorithms                        import VQE
from qiskit.aqua                                   import QuantumInstance,aqua_globals
from qiskit.circuit.library                        import EfficientSU2

import logging
from   qiskit.chemistry import set_qiskit_chemistry_logging
from   qiskit.aqua      import set_qiskit_aqua_logging
set_qiskit_chemistry_logging(logging.INFO)
set_qiskit_aqua_logging(logging.INFO)

import sys
import numpy as np
sys.path.append('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/subroutines')
sys.path.append('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/subroutines/pyscfd')
from pyscfdriver import *
from utils       import *

def print_circuit(fname,circuit):
    outf = open(fname,'w')
    for gate in circuit:
        gate_name = gate[0].name
        qubits = [q.index for q in gate[1]]
        outf.write(str(gate_name)+' | '+' '.join([str(x) for x in qubits])+' | '+' '.join([str(x._symbol_expr) for x in gate[0].params])+'\n')
    outf.close()

def print_results(fname,res_vqe,res_ee,dN=0):
    outf = open(fname,'w')
    outf.write('%.12f %.12f \n' % (res_vqe[0],np.real(res_ee[0])))
    outf.write('%.12f %.12f \n' % (res_vqe[1]+dN,np.real(res_ee[1]+dN)))
    outf.write('%.12f %.12f \n' % (res_vqe[2],np.real(res_ee[2])))
    outf.write('%.12f %.12f \n' % (res_vqe[3],np.real(res_ee[3])))
    outf.close()

dist_list = [0.7] #2.1,2.3,2.5,2.7,2.9,3.1,3.3,3.5] #[0.7,0.9,1.1,1.3,1.5,1.7,1.9,2.1,2.3,2.5,2.7,2.9,3.1,3.3,3.5,3.7,3.9,4.1,4.3,4.5]
depth_list = [1,2,3,4,5,6,7,8]

for depth in depth_list:
  for dist in dist_list:

    outfile = open('pes.txt','w')
    
    outfile.write("Bond distance: {}\n".format(dist))
    rho = np.load('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/SCF_FCI/beh2/res_fourth_pass.npy',allow_pickle=True).item()
    rho = rho[str(dist)]['rho_scf']
    driver    = PySCFDriver(atom="Be 0.0000 0.0000 0.0000; H 0.0000 0.0000 -{0}; H 0.0000 0.0000 {0}".format(dist),
                            unit=UnitsType.ANGSTROM,charge=0,spin=0,basis='sto-6g',hf_method=HFMethodType.RHF,symgroup='dooh',
                            outfile=outfile,irrep_nelec={'A1g':4,'A1u':2},rho=rho)
    molecule  = driver.run()
    outfile.write("\nHartree-Fock energy %f \n" % (molecule.hf_energy))
    
    core      = Hamiltonian(transformation=TransformationType.FULL,qubit_mapping=QubitMappingType.PARITY,two_qubit_reduction=True,freeze_core=False,orbital_reduction=[0])
    H_op,A_op = core.run(molecule)
    
    z2syms,sqlist           = None,None
    H_op,A_op,z2syms,sqlist = taper(molecule,core,H_op,A_op,outfile)
    
    init_state = HartreeFock(num_orbitals=core._molecule_info['num_orbitals'],qubit_mapping=core._qubit_mapping,two_qubit_reduction=core._two_qubit_reduction,num_particles=core._molecule_info['num_particles'],sq_list=sqlist)
    init_state.construct_circuit()
    x_hf = init_state._bitstr
 
    outfile.write("\nHartree-Fock energy %f \n" % (molecule.hf_energy))
    outfile.write("\nHartree-Fock circuit\n")
    outfile.write(str(init_state.construct_circuit().draw())+"\n")

    par = np.loadtxt('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/Ry_linear_DEPTH_%d/beh2/R_%s/output_parameters.txt' % (depth,str(dist)))
    var_form  = EfficientSU2(num_qubits=H_op.num_qubits,reps=depth,entanglement='linear',su2_gates=['ry'],initial_state=init_state)
    circuit = var_form.bind_parameters(par)

    optimizer = COBYLA(maxiter=0)
    algo      = VQE(H_op,var_form,optimizer,aux_operators=A_op,include_custom=True,initial_point=par)
    backend          = Aer.get_backend('statevector_simulator')
    quantum_instance = QuantumInstance(backend=backend)
    algo_result      = algo.run(quantum_instance)
    
    # -----------------------------------------------------------------------------------------------------------------------
    
    p1 = algo._ret['opt_params']
    res_vqe,res_ee = get_results(H_op,A_op,molecule,core,algo_result,outfile)
    print_results('ry_linear_%d/beh2_%s_results.txt' % (depth,str(dist)),res_vqe,res_ee,dN=2)

    circuit = var_form.bind_parameters(p1)
    print_circuit('ry_linear_%d/beh2_%s_circuit.txt' % (depth,str(dist)),circuit)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Tue Apr 19 15:27:57 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 3
[INPUT] num. electrons = 6
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry Dooh subgroup None
[INPUT] Mole.unit = Angstrom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000  -0.700000000000 AA    0.000000000000   0.000000000000  -1.322808287196 Bohr
[INPUT]  3 H      0.000000000000   0.000000000000   0.700000000000 AA    0.000000000000   0.000000000000   1.322808287196 Bohr

nuclear repulsion = 6.42572327545714
point group symmetry = Dooh
num. orbitals of irrep A1g = 3
num. orbitals of irrep A1u = 2
num. orbitals of irrep E1uy = 1
num. orbitals of irrep E1ux = 1
number of shells = 5
number of NR pGTOs = 42
number of NR cGTOs = 7
basis = sto-6g
ecp = {}
CPU time:        47.76

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 6 electrons in irreps ['A1g', 'A1u']
    0 free electrons in irreps E1uy E1ux




******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpap9s71lt
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpap9s71lt
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (A1g) = -0.533375259176049  LUMO (E1ux) = 0.15912932089226
Initial guess E= -15.0164889300848  |g|= 1.08145e-12
macro= 0  E= -15.0164889300848  delta_E= -1.06581e-14  |g|= 1.08145e-12  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-15.0164889300848  |g|= 1.08145e-12  total 2 KF 4 JK
converged SCF energy = -15.0164889300848
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/chemistry_operator.py:170: DeprecationWarning: The qiskit.chemistry.chemistry_operator.MolecularChemistryResult object is deprecated as of 0.8.0 and will be removed no sooner than 3 months after the release. You should use qiskit.chemistry.algorithms.ground_state_solvers.FermionicGroundStateResult instead.
  super().__init__(a_dict)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:381: DeprecationWarning: The qiskit.chemistry.chemistry_operator.MolecularGroundStateResult object is deprecated as of 0.8.0 and will be removed no sooner than 3 months after the release. You should use qiskit.chemistry.algorithms.ground_state_solvers.FermionicGroundStateResult instead.
  mgsr = MolecularGroundStateResult()
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:91: DeprecationWarning: The ChemistryOperator is deprecated as of Qiskit Aqua 0.8.0 and will be removed no earlier than 3 months after the release date. Instead, the FermionicTransformation can be used to transform QMolecules and construct ground state result objects.
  super().__init__()
2022-04-19 15:27:57,709:qiskit.chemistry.core.hamiltonian:INFO: Configured orbital reduction list: [0]
2022-04-19 15:27:57,709:qiskit.chemistry.core.hamiltonian:INFO: Combined orbital reduction list: [0]
2022-04-19 15:27:57,709:qiskit.chemistry.core.hamiltonian:INFO:   converting to spin orbital reduction list: [0 7]
2022-04-19 15:27:57,709:qiskit.chemistry.core.hamiltonian:INFO:     => freezing spin orbitals: [0 7]
2022-04-19 15:27:57,710:qiskit.chemistry.core.hamiltonian:INFO:     => removing spin orbitals: [] (indexes accounting for freeze [])
2022-04-19 15:27:57,768:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital energy shift: -16.617170358057287
2022-04-19 15:28:00,219:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital x dipole shift: 0.0
2022-04-19 15:28:00,279:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital y dipole shift: 0.0
2022-04-19 15:28:00,341:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital z dipole shift: 0.0
2022-04-19 15:28:00,419:qiskit.chemistry.core.hamiltonian:INFO: Molecule num electrons: [3, 3], remaining for processing: [2, 2]
2022-04-19 15:28:00,420:qiskit.chemistry.core.hamiltonian:INFO: Molecule num spin orbitals: 14, remaining for processing: 12
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:417: DeprecationWarning: Processing a dictionary result is deprecated, pass a (minimum) eigensolver result now.
  ' pass a (minimum) eigensolver result now.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:134: DeprecationWarning: energy deprecated, use eigenvalues property.
  warnings.warn('energy deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:134: DeprecationWarning: energy deprecated, use eigenvalues property.
  warnings.warn('energy deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:149: DeprecationWarning: aux_ops deprecated, use aux_operator_eigenvalues property.
  DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:138: DeprecationWarning: energies deprecated, use eigenvalues property.
  warnings.warn('energies deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:138: DeprecationWarning: energies deprecated, use eigenvalues property.
  warnings.warn('energies deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:149: DeprecationWarning: aux_ops deprecated, use aux_operator_eigenvalues property.
  DeprecationWarning)
2022-04-19 15:28:05,694:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: 
==================== Setting of VQE ============================
Algorithm: VQE
-- max_evals_grouped: 1
-- circuit_sampler: None
-- expectation: None
-- user_valid_expectation: False
-- include_custom: True
-- expect_op: None
-- operator: SummedOp([
  -0.6192771499994366 * IIIIIII,
  -0.22730651630951085 * ZIIIZZI,
  -0.03321163049383873 * IIIIIXX,
  0.03321163049383873 * ZIIIZXX,
  -0.2253147080776801 * ZZIZZZZ,
  0.05679163446780257 * ZIIIZIX,
  -0.05679163446780257 * IZIZIIX,
  -0.7258623265715671 * IIZZIII,
  -0.7258623265715669 * IZZIIII,
  -0.6030929064553017 * IIIIIZZ,
  -1.157696674452874 * IIIIIZI,
  -0.22730651630951093 * IIIIZII,
  -0.033211630493838705 * XXXXXII,
  -0.033211630493838705 * YXXXYII,
  -0.22531470807768003 * IIIZZII,
  0.0567916344678026 * ZXXXZII,
  0.0567916344678026 * IYXYIII,
  -0.6030929064553021 * ZZIIIII,
  -1.1576966744528747 * ZIIIIII,
  0.08334297239187934 * IZIZIIZ,
  0.0005769335647369502 * IIIIIZX,
  -0.0005769335647369502 * ZZIZZZX,
  0.20146330378884153 * ZIZZZZI,
  0.20146330378884153 * ZZZIZZI,
  0.09225589239004754 * ZIIIZIZ,
  0.2070609674991095 * ZIIIZII,
  -0.005836451951820793 * ZZIZZYY,
  0.005836451951820793 * IZIZIYY,
  -0.01871300096477631 * IZIZIXI,
  0.01950649403086242 * IZIZIXZ,
  -0.0007934930660861022 * ZIIIZXI,
  -0.0007934930660861022 * ZZIZZXI,
  0.01950649403086242 * IIIIIXZ,
  -0.01871300096477631 * IIIIIXI,
  0.016414969451734544 * IIZZIXX,
  -0.016414969451734544 * ZIZZZXX,
  0.016414969451734544 * IZZIIXX,
  -0.016414969451734544 * ZZZIZXX,
  0.004059418345102082 * IIIIIYY,
  -0.004059418345102082 * ZIIIZYY,
  0.2574950295951019 * ZIIIIZI,
  -0.005096331270005864 * IIIIZXX,
  0.005096331270005864 * ZIIIIXX,
  -0.039900548641951715 * IZIZXIZ,
  0.039900548641951715 * IZIIXIZ,
  0.039900548641951715 * IIIIXII,
  -0.039900548641951715 * IIIZXII,
  0.02761983228392986 * IIIIXZX,
  -0.02761983228392986 * IIIZXZX,
  0.02761983228392986 * ZIIIYZY,
  -0.02761983228392986 * ZIIZYZY,
  0.005144111872843905 * IZZYYIZ,
  0.005144111872843905 * IZIXXIZ,
  0.005144111872843905 * ZZIXXZZ,
  0.005144111872843905 * ZZZYYZZ,
  0.005144111872843905 * IIYXYIZ,
  0.005144111872843905 * IZXXXIZ,
  0.005144111872843905 * ZZXXXZZ,
  0.005144111872843905 * ZIYXYZZ,
  -0.02761983228392986 * IXXYYIZ,
  0.02761983228392986 * ZYXYXIZ,
  0.02761983228392986 * IYXXYII,
  0.02761983228392986 * ZXXXXII,
  0.024829363427025124 * IYXXYZX,
  0.024829363427025124 * ZXXXXZX,
  -0.024829363427025124 * ZYXXXZY,
  0.024829363427025124 * IXXXYZY,
  0.005096331270005864 * XXXXXZI,
  0.005096331270005864 * YXXXYZI,
  0.040309126010204054 * YXXXYXX,
  0.040309126010204054 * XXXXXXX,
  0.12324352103383106 * ZIIZIZI,
  0.020172309693380137 * IIIZZXX,
  -0.020172309693380137 * ZIIZIXX,
  -0.02704289871919291 * ZYXYZZI,
  -0.02704289871919291 * IXXXIZI,
  -0.0176251544088086 * IYXYIXX,
  -0.0176251544088086 * ZXXXZXX,
  0.0176251544088086 * ZYXYZXX,
  0.0176251544088086 * IXXXIXX,
  0.014335857741559347 * YYXXIIZ,
  -0.014335857741559347 * XYXYZIZ,
  -0.014335857741559347 * YXXYIII,
  -0.014335857741559347 * XXXXZII,
  -0.016831661342722494 * YXXYIZX,
  -0.016831661342722494 * XXXXZZX,
  0.016831661342722494 * XXXYZZY,
  -0.016831661342722494 * YXXXIZY,
  -0.0026771586587551912 * YYXIIIZ,
  0.0026771586587551912 * XYYZIIZ,
  0.0026771586587551912 * XYYZZZZ,
  -0.0026771586587551912 * YYXIZZZ,
  -0.0026771586587551912 * YYIIIIZ,
  -0.0026771586587551912 * XXZIIIZ,
  -0.0026771586587551912 * XXZIZZZ,
  -0.0026771586587551912 * YYIIZZZ,
  0.11708525581707264 * IZIIZZI,
  0.025353540310681544 * ZZIIIXX,
  -0.025353540310681544 * IZIIZXX,
  0.03633815537358491 * XZIZIIZ,
  -0.03633815537358491 * XIIZIIZ,
  -0.03633815537358491 * XIIIIII,
  0.03633815537358491 * XZIIIII,
  -0.029412958655783628 * XIIIIZX,
  0.029412958655783628 * XZIIIZX,
  -0.029412958655783628 * YIIIZZY,
  0.029412958655783628 * YZIIZZY,
  0.24737009350931358 * IIIIZZI,
  0.1972129542494357 * ZZZIZZZ,
  0.1972129542494357 * ZIZZZZZ,
  0.1890750782620393 * ZZIZZII,
  0.10213539151593913 * ZZIZZIZ,
  -0.02146329537529415 * ZIZZZIX,
  0.02146329537529415 * IZZIIIX,
  -0.02146329537529415 * ZZZIZIX,
  0.02146329537529415 * IIZZIIX,
  -0.00989812276346958 * ZIIIZZX,
  0.00989812276346958 * IZIZIZX,
  0.12324352103383106 * ZZIZIZZ,
  -0.027042898719192913 * ZIIIIIX,
  0.027042898719192913 * IZIZZIX,
  0.014335857741559347 * ZIIIYYX,
  -0.014335857741559347 * ZIIZYYX,
  -0.014335857741559347 * IZIZXYY,
  0.014335857741559347 * IZIIXYY,
  -0.01683166134272249 * ZYXXXYX,
  0.01683166134272249 * IXXXYYX,
  -0.01683166134272249 * IXXYYYY,
  0.01683166134272249 * ZYXYXYY,
  0.020172309693380137 * XYXYXZZ,
  0.020172309693380137 * YYXYYZZ,
  0.0176251544088086 * XXXXXIX,
  0.0176251544088086 * YXXXYIX,
  -0.0176251544088086 * YYXYYIX,
  -0.0176251544088086 * XYXYXIX,
  0.2330296305961526 * ZZIIIZZ,
  0.001671692012152396 * ZIIZIIX,
  -0.001671692012152396 * IZIIZIX,
  -0.016279945780510962 * ZZZXZZZ,
  0.016279945780510962 * ZZIXIZZ,
  0.016279945780510962 * IIIXIII,
  -0.016279945780510962 * IIZXZII,
  0.016279945780510962 * ZIYYZZZ,
  0.016279945780510962 * ZZXXIZZ,
  0.016279945780510962 * IIXXIII,
  0.016279945780510962 * IZYYZII,
  -0.001671692012152396 * ZXXXZZZ,
  -0.001671692012152396 * IYXYIZZ,
  0.035730306195109925 * ZYXYZIX,
  0.035730306195109925 * IXXXIIX,
  0.013761477078992203 * XXXYZYX,
  -0.013761477078992203 * YXXXIYX,
  0.013761477078992203 * YYXXIYY,
  -0.013761477078992203 * XYXYZYY,
  -0.010270084289159999 * ZXXIZZZ,
  -0.010270084289159999 * IYYZZZZ,
  -0.010270084289159999 * IYYIIII,
  -0.010270084289159999 * ZXXZIII,
  -0.010270084289159999 * ZXIIZZZ,
  0.010270084289159999 * IXZIZZZ,
  0.010270084289159999 * IXZZIII,
  -0.010270084289159999 * ZXIZIII,
  0.22480538445714923 * IIIZZZZ,
  -0.01886307133245532 * YIIIZYX,
  0.01886307133245532 * YZIIZYX,
  0.01886307133245532 * XZIZIYY,
  -0.01886307133245532 * XIIZIYY,
  0.11589686859493135 * IZIZZZZ,
  -0.0287611940959249 * IIIIZIX,
  0.0287611940959249 * ZZIZIIX,
  0.38947179486833605 * IZIZIII,
  0.18647570075538616 * IIZZIZZ,
  0.1883020217766596 * IIZZIZI,
  0.20146330378884153 * IIZZZII,
  -0.0026771586587551912 * IZIXYXY,
  0.0026771586587551912 * IZZYXXY,
  -0.0026771586587551912 * IZZYYYY,
  -0.0026771586587551912 * IZIXXYY,
  -0.016414969451734544 * YXYYYII,
  -0.016414969451734544 * XXYYXII,
  0.1972129542494357 * IIZIZII,
  0.010270084289159999 * IZIYIZY,
  -0.010270084289159999 * IZZYZZY,
  0.010270084289159999 * IZZXIIX,
  -0.010270084289159999 * IZIXZIX,
  -0.02146329537529415 * IYYXIII,
  0.02146329537529415 * ZXYYZII,
  -0.012128953755816447 * IZXZIII,
  0.012128953755816447 * IIXIIII,
  0.009509761069347353 * IXYZIZY,
  -0.009509761069347353 * ZYXIIZY,
  0.009509761069347353 * IXXIIIX,
  0.009509761069347353 * ZYYZIIX,
  -0.0025708476077440662 * YYYZIXY,
  -0.0025708476077440662 * XYXIIXY,
  0.0025708476077440662 * YYXIIYY,
  -0.0025708476077440662 * XYYZIYY,
  0.18647570075538616 * ZZZZIII,
  0.1883020217766596 * ZIZZIII,
  0.18647570075538616 * IZZIIZZ,
  0.1883020217766596 * IZZIIZI,
  0.20146330378884153 * IZZIZII,
  -0.0026771586587551912 * IZXXYXY,
  0.0026771586587551912 * IIYXXXY,
  -0.0026771586587551912 * IIYXYYY,
  -0.0026771586587551912 * IZXXXYY,
  -0.016414969451734544 * YYYXYII,
  -0.016414969451734544 * XYYXXII,
  0.1972129542494357 * IZZZZII,
  0.010270084289159999 * IZXYIZY,
  -0.010270084289159999 * IIYXZZY,
  -0.010270084289159999 * IIYYIIX,
  -0.010270084289159999 * IZXXZIX,
  -0.02146329537529415 * IXYYIII,
  0.02146329537529415 * ZYYXZII,
  0.009509761069347353 * IYZIIZY,
  -0.009509761069347353 * ZYIIIZY,
  0.009509761069347353 * IXIIIIX,
  -0.009509761069347353 * ZXZIIIX,
  0.0025708476077440662 * YXZIIXY,
  -0.0025708476077440662 * XYIIIXY,
  0.0025708476077440662 * YYIIIYY,
  0.0025708476077440662 * XXZIIYY,
  0.18647570075538616 * ZIZIIII,
  0.1883020217766596 * ZZZIIII,
  0.07688554243850795 * IIIIIIZ,
  0.11708525581707264 * IIIIZZZ,
  0.03633815537358492 * IIIIXXZ,
  -0.03633815537358492 * IIIZXXZ,
  -0.03633815537358492 * IIIIXXI,
  0.03633815537358492 * IIIZXXI,
  0.02941295865578362 * IYXXYXZ,
  0.02941295865578362 * ZXXXXXZ,
  -0.02941295865578362 * IYXXYXI,
  -0.02941295865578362 * ZXXXXXI,
  0.025353540310681544 * YXXXYZZ,
  0.025353540310681544 * XXXXXZZ,
  -0.018863071332455322 * YXXYIXZ,
  -0.018863071332455322 * XXXXZXZ,
  0.018863071332455322 * YXXYIXI,
  0.018863071332455322 * XXXXZXI,
  -0.04011876971168971 * XIIIIXZ,
  0.04011876971168971 * XZIIIXZ,
  0.04011876971168971 * XIIIIXI,
  -0.04011876971168971 * XZIIIXI,
  0.11700431215019767 * ZIIIIZZ,
  0.11589686859493135 * IIIZZZI,
  -0.0287611940959249 * IYXYIZI,
  -0.0287611940959249 * ZXXXZZI,
  0.11700431215019767 * ZZIIIZI,
  0.08334297239187934 * IIIZIII,
  0.0005769335647369502 * ZXXXIII,
  0.0005769335647369502 * IYXYZII,
  0.09225589239004754 * ZZIIZII,
  -0.005836451951820793 * XXXYYII,
  0.005836451951820793 * YXXYXII,
  -0.01871300096477631 * XZIZXII,
  0.01950649403086242 * XIIZXII,
  0.0007934930660861022 * YIIIYII,
  0.0007934930660861022 * YZIZYII,
  0.01950649403086242 * XZIIXII,
  -0.01871300096477631 * XIIIXII,
  0.004059418345102082 * YYXXXII,
  -0.004059418345102082 * XYXXYII,
  0.10213539151593913 * ZIIZZII,
  -0.00989812276346958 * IXXXZII,
  -0.00989812276346958 * ZYXYIII,
  0.07688554243850795 * IZIIIII
])
-- quantum_instance: None
-- optimizer: <qiskit.aqua.components.optimizers.cobyla.COBYLA object at 0x7fd57ca16410>
-- gradient: None
-- cost_fn: <bound method VQE._energy_evaluation of <qiskit.aqua.algorithms.minimum_eigen_solvers.vqe.VQE object at 0x7fd57ca16050>>
-- initial_point: [ 5.28801423e-03  1.23077539e+00  1.54592838e+00 -1.95572742e+00
 -2.46409240e-02 -6.46412379e-03  9.19440620e-03  2.21466386e+00
  2.88927089e-01 -3.54187353e-02  1.13837562e-01 -5.91600430e-04
  1.50745710e-03  1.61733798e-02  1.17804942e-02 -1.08413529e+00
 -2.18981338e-01 -8.70204937e-02  3.13353340e-03  1.76644940e-02
  8.46031641e-02  2.25415396e-02  5.82411268e-02  1.31066603e+00
 -1.24871858e+00  1.58300332e+00  1.64699118e+00 -3.64793870e+00
  1.01356125e-01 -1.19677191e-02  7.37823145e-01 -5.55247105e-02
  6.51448756e-03 -3.10209306e+00  3.85112589e-02  2.07622384e+00
  1.29538977e-02  3.81700088e-01  1.59716179e+00 -1.73065439e-01
 -1.77459265e-02  1.12958076e-01]
-- var_form:      ┌──────────┐            ┌──────────┐                        ┌───────────┐»
q_0: ┤ RY(θ[0]) ├─────■──────┤ RY(θ[7]) ├─────────────────■──────┤ RY(θ[14]) ├»
     ├──────────┤   ┌─┴─┐    └──────────┘┌──────────┐   ┌─┴─┐    └───────────┘»
q_1: ┤ RY(θ[1]) ├───┤ X ├─────────■──────┤ RY(θ[8]) ├───┤ X ├──────────■──────»
     └──┬───┬───┘┌──┴───┴───┐   ┌─┴─┐    └──────────┘┌──┴───┴───┐    ┌─┴─┐    »
q_2: ───┤ X ├────┤ RY(θ[2]) ├───┤ X ├─────────■──────┤ RY(θ[9]) ├────┤ X ├────»
     ┌──┴───┴───┐└──────────┘   └───┘       ┌─┴─┐    └──────────┘┌───┴───┴───┐»
q_3: ┤ RY(θ[3]) ├───────────────────────────┤ X ├─────────■──────┤ RY(θ[10]) ├»
     ├──────────┤                           └───┘       ┌─┴─┐    └───────────┘»
q_4: ┤ RY(θ[4]) ├───────────────────────────────────────┤ X ├──────────■──────»
     ├──────────┤                                       └───┘        ┌─┴─┐    »
q_5: ┤ RY(θ[5]) ├────────────────────────────────────────────────────┤ X ├────»
     ├──────────┤                                                    └───┘    »
q_6: ┤ RY(θ[6]) ├─────────────────────────────────────────────────────────────»
     └──────────┘                                                             »
«                               ┌───────────┐                          »
«q_0: ───────────────────■──────┤ RY(θ[21]) ├───────────────────■──────»
«     ┌───────────┐    ┌─┴─┐    └───────────┘┌───────────┐    ┌─┴─┐    »
«q_1: ┤ RY(θ[15]) ├────┤ X ├──────────■──────┤ RY(θ[22]) ├────┤ X ├────»
«     └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───┴───┴───┐»
«q_2: ──────■──────┤ RY(θ[16]) ├────┤ X ├──────────■──────┤ RY(θ[23]) ├»
«         ┌─┴─┐    └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘»
«q_3: ────┤ X ├──────────■──────┤ RY(θ[17]) ├────┤ X ├──────────■──────»
«     ┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───┴───┴───┐    ┌─┴─┐    »
«q_4: ┤ RY(θ[11]) ├────┤ X ├──────────■──────┤ RY(θ[18]) ├────┤ X ├────»
«     └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───┴───┴───┐»
«q_5: ──────■──────┤ RY(θ[12]) ├────┤ X ├──────────■──────┤ RY(θ[19]) ├»
«         ┌─┴─┐    ├───────────┤    └───┘        ┌─┴─┐    ├───────────┤»
«q_6: ────┤ X ├────┤ RY(θ[13]) ├─────────────────┤ X ├────┤ RY(θ[20]) ├»
«         └───┘    └───────────┘                 └───┘    └───────────┘»
«     ┌───────────┐                          ┌───────────┐             »
«q_0: ┤ RY(θ[28]) ├───────────────────■──────┤ RY(θ[35]) ├─────────────»
«     └───────────┘┌───────────┐    ┌─┴─┐    └───────────┘┌───────────┐»
«q_1: ──────■──────┤ RY(θ[29]) ├────┤ X ├──────────■──────┤ RY(θ[36]) ├»
«         ┌─┴─┐    └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘»
«q_2: ────┤ X ├──────────■──────┤ RY(θ[30]) ├────┤ X ├──────────■──────»
«     ┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───┴───┴───┐    ┌─┴─┐    »
«q_3: ┤ RY(θ[24]) ├────┤ X ├──────────■──────┤ RY(θ[31]) ├────┤ X ├────»
«     └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───┴───┴───┐»
«q_4: ──────■──────┤ RY(θ[25]) ├────┤ X ├──────────■──────┤ RY(θ[32]) ├»
«         ┌─┴─┐    └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘»
«q_5: ────┤ X ├──────────■──────┤ RY(θ[26]) ├────┤ X ├──────────■──────»
«         └───┘        ┌─┴─┐    ├───────────┤    └───┘        ┌─┴─┐    »
«q_6: ─────────────────┤ X ├────┤ RY(θ[27]) ├─────────────────┤ X ├────»
«                      └───┘    └───────────┘                 └───┘    »
«                                                         
«q_0: ────────────────────────────────────────────────────
«                                                         
«q_1: ────────────────────────────────────────────────────
«     ┌───────────┐                                       
«q_2: ┤ RY(θ[37]) ├───────────────────────────────────────
«     └───────────┘┌───────────┐                          
«q_3: ──────■──────┤ RY(θ[38]) ├──────────────────────────
«         ┌─┴─┐    └───────────┘┌───────────┐             
«q_4: ────┤ X ├──────────■──────┤ RY(θ[39]) ├─────────────
«     ┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───────────┐
«q_5: ┤ RY(θ[33]) ├────┤ X ├──────────■──────┤ RY(θ[40]) ├
«     ├───────────┤    └───┘        ┌─┴─┐    ├───────────┤
«q_6: ┤ RY(θ[34]) ├─────────────────┤ X ├────┤ RY(θ[41]) ├
«     └───────────┘                 └───┘    └───────────┘
-- var_form_params: [ParameterVectorElement(θ[0]), ParameterVectorElement(θ[10]), ParameterVectorElement(θ[11]), ParameterVectorElement(θ[12]), ParameterVectorElement(θ[13]), ParameterVectorElement(θ[14]), ParameterVectorElement(θ[15]), ParameterVectorElement(θ[16]), ParameterVectorElement(θ[17]), ParameterVectorElement(θ[18]), ParameterVectorElement(θ[19]), ParameterVectorElement(θ[1]), ParameterVectorElement(θ[20]), ParameterVectorElement(θ[21]), ParameterVectorElement(θ[22]), ParameterVectorElement(θ[23]), ParameterVectorElement(θ[24]), ParameterVectorElement(θ[25]), ParameterVectorElement(θ[26]), ParameterVectorElement(θ[27]), ParameterVectorElement(θ[28]), ParameterVectorElement(θ[29]), ParameterVectorElement(θ[2]), ParameterVectorElement(θ[30]), ParameterVectorElement(θ[31]), ParameterVectorElement(θ[32]), ParameterVectorElement(θ[33]), ParameterVectorElement(θ[34]), ParameterVectorElement(θ[35]), ParameterVectorElement(θ[36]), ParameterVectorElement(θ[37]), ParameterVectorElement(θ[38]), ParameterVectorElement(θ[39]), ParameterVectorElement(θ[3]), ParameterVectorElement(θ[40]), ParameterVectorElement(θ[41]), ParameterVectorElement(θ[4]), ParameterVectorElement(θ[5]), ParameterVectorElement(θ[6]), ParameterVectorElement(θ[7]), ParameterVectorElement(θ[8]), ParameterVectorElement(θ[9])]
-- parameterized_circuits: None
-- ret: None
-- eval_time: None
-- callback: None
-- aux_op_nones: [False, False, False, False, False, False]
-- aux_operators: [SummedOp([PauliOp(Pauli('IIIIIII'), coeff=5.999999999999994), PauliOp(Pauli('ZIIIZZI'), coeff=-0.4999999999999996), PauliOp(Pauli('ZZIZZZZ'), coeff=-0.4999999999999996), PauliOp(Pauli('IIZZIII'), coeff=-0.9999999999999992), PauliOp(Pauli('IZZIIII'), coeff=-0.9999999999999992), PauliOp(Pauli('IIIIIZZ'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIIIZI'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIIZII'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIZZII'), coeff=-0.4999999999999996), PauliOp(Pauli('ZZIIIII'), coeff=-0.4999999999999996), PauliOp(Pauli('ZIIIIII'), coeff=-0.4999999999999996)], coeff=1.0, abelian=False), SummedOp([PauliOp(Pauli('IIIIIII'), coeff=1.4999999999999987), PauliOp(Pauli('IZIZIIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIZIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIIIZI'), coeff=-0.7499999999999992), PauliOp(Pauli('ZIIZIZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IZIIZZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIZZI'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIIIXZI'), coeff=0.1249999999999999), PauliOp(Pauli('IZIZXIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIZXZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IZIIXIZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIXII'), coeff=-0.1249999999999999), PauliOp(Pauli('ZZIZXZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZXII'), coeff=0.1249999999999999), PauliOp(Pauli('ZZIIXZZ'), coeff=0.1249999999999999), PauliOp(Pauli('IYXXXIY'), coeff=-0.1249999999999999), PauliOp(Pauli('IYXXYZX'), coeff=-0.1249999999999999), PauliOp(Pauli('ZXXXYIY'), coeff=0.1249999999999999), PauliOp(Pauli('ZXXXXZX'), coeff=-0.1249999999999999), PauliOp(Pauli('ZYXXXZY'), coeff=0.1249999999999999), PauliOp(Pauli('ZYXXYIX'), coeff=0.1249999999999999), PauliOp(Pauli('IXXXYZY'), coeff=-0.1249999999999999), PauliOp(Pauli('IXXXXIX'), coeff=0.1249999999999999), PauliOp(Pauli('YXXXXYX'), coeff=-0.2499999999999998), PauliOp(Pauli('YXXXYXX'), coeff=-0.2499999999999998), PauliOp(Pauli('XXXXYYX'), coeff=0.2499999999999998), PauliOp(Pauli('XXXXXXX'), coeff=-0.2499999999999998), PauliOp(Pauli('ZZIZZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZZIZZIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZZIZIZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZZIIIZZ'), coeff=-0.7499999999999992), PauliOp(Pauli('IIIZZZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IZIZZZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZYXXIZY'), coeff=-0.2499999999999998), PauliOp(Pauli('ZYXYZIX'), coeff=-0.2499999999999998), PauliOp(Pauli('IXXYZZY'), coeff=0.2499999999999998), PauliOp(Pauli('IXXXIIX'), coeff=-0.2499999999999998), PauliOp(Pauli('XXXXIXX'), coeff=0.1249999999999999), PauliOp(Pauli('XXXYZYX'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXYZXX'), coeff=0.1249999999999999), PauliOp(Pauli('YXXXIYX'), coeff=0.1249999999999999), PauliOp(Pauli('YYXXIYY'), coeff=-0.1249999999999999), PauliOp(Pauli('YYXYZXY'), coeff=-0.1249999999999999), PauliOp(Pauli('XYXYZYY'), coeff=0.1249999999999999), PauliOp(Pauli('XYXXIXY'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIIIZ'), coeff=0.1249999999999999), PauliOp(Pauli('IIIIZZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIIIIZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('YZIIIYZ'), coeff=-0.1249999999999999), PauliOp(Pauli('XIIIIXZ'), coeff=0.1249999999999999), PauliOp(Pauli('YIIIIYZ'), coeff=0.1249999999999999), PauliOp(Pauli('XZIIIXZ'), coeff=-0.1249999999999999), PauliOp(Pauli('XIIIIXI'), coeff=-0.1249999999999999), PauliOp(Pauli('YZIIIYI'), coeff=0.1249999999999999), PauliOp(Pauli('XZIIIXI'), coeff=0.1249999999999999), PauliOp(Pauli('YIIIIYI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZZZI'), coeff=-0.1249999999999999), PauliOp(Pauli('ZZIIIZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZIII'), coeff=0.1249999999999999), PauliOp(Pauli('ZZIIZII'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIZZII'), coeff=0.1249999999999999), PauliOp(Pauli('IZIIIII'), coeff=0.1249999999999999)], coeff=1.0, abelian=False), SummedOp([PauliOp(Pauli('ZIIIZZI'), coeff=-0.2499999999999998), PauliOp(Pauli('ZZIZZZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIIZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIIZI'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIZII'), coeff=0.2499999999999998), PauliOp(Pauli('IIIZZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZZIIIII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIIIII'), coeff=0.2499999999999998)], coeff=1.0, abelian=False), PauliOp(Pauli('IIIIIII'), coeff=0.0), PauliOp(Pauli('IIIIIII'), coeff=0.0), PauliOp(Pauli('IIIIIII'), coeff=0.0)]
-- eval_count: 0
===============================================================
NLocal: EfficientSU2
-- base_name: nlocal
-- data: [(<qiskit.circuit.library.standard_gates.x.XGate object at 0x7fd56a119710>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569fae950>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569fae0d0>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569faef50>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569fae050>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569faeb10>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569fae710>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569fae750>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd569faea10>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd569fae9d0>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd569fae550>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd569faec10>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd569fae290>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd569faeb90>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569fae2d0>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569fae150>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569fae390>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569faed90>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569fae850>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5001360d0>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd500136610>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5483b4650>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd569fae6d0>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd569fae250>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd50045cfd0>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd50045cf10>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a321d10>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a0ea8d0>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483b40d0>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483b4410>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483b4c50>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483b4b90>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a321190>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a321310>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd57a283490>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a321390>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a321810>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a321cd0>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a321fd0>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a321b50>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569fae350>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569fae8d0>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a321e90>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a321050>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a3211d0>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a321150>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a3210d0>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd569fae4d0>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a321c50>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a321c90>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a321e50>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a321750>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a321ad0>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd500136910>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a321f10>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a3212d0>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a321f50>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a321490>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a3215d0>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a321450>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd500647dd0>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a321590>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a321710>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a321b90>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a321610>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5585b0ad0>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569fae310>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a321290>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a3217d0>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a321410>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a321210>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5585b0950>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5585b0cd0>, [Qubit(QuantumRegister(7, 'q'), 6)], [])]
-- qregs: [QuantumRegister(7, 'q')]
-- qubits: [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)]
-- qubit_set: {Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 6)}
-- parameter_table: ParameterTable({ParameterVectorElement(θ[0]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569fae950>, 0)], ParameterVectorElement(θ[1]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569fae0d0>, 0)], ParameterVectorElement(θ[2]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569faef50>, 0)], ParameterVectorElement(θ[3]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569fae050>, 0)], ParameterVectorElement(θ[4]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569faeb10>, 0)], ParameterVectorElement(θ[5]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569fae710>, 0)], ParameterVectorElement(θ[6]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569fae750>, 0)], ParameterVectorElement(θ[7]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569fae2d0>, 0)], ParameterVectorElement(θ[8]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569fae150>, 0)], ParameterVectorElement(θ[9]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569fae390>, 0)], ParameterVectorElement(θ[10]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569faed90>, 0)], ParameterVectorElement(θ[11]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569fae850>, 0)], ParameterVectorElement(θ[12]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5001360d0>, 0)], ParameterVectorElement(θ[13]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd500136610>, 0)], ParameterVectorElement(θ[14]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a0ea8d0>, 0)], ParameterVectorElement(θ[15]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483b40d0>, 0)], ParameterVectorElement(θ[16]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483b4410>, 0)], ParameterVectorElement(θ[17]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483b4c50>, 0)], ParameterVectorElement(θ[18]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483b4b90>, 0)], ParameterVectorElement(θ[19]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a321190>, 0)], ParameterVectorElement(θ[20]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a321310>, 0)], ParameterVectorElement(θ[21]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569fae350>, 0)], ParameterVectorElement(θ[22]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569fae8d0>, 0)], ParameterVectorElement(θ[23]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a321e90>, 0)], ParameterVectorElement(θ[24]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a321050>, 0)], ParameterVectorElement(θ[25]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a3211d0>, 0)], ParameterVectorElement(θ[26]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a321150>, 0)], ParameterVectorElement(θ[27]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a3210d0>, 0)], ParameterVectorElement(θ[28]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd500136910>, 0)], ParameterVectorElement(θ[29]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a321f10>, 0)], ParameterVectorElement(θ[30]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a3212d0>, 0)], ParameterVectorElement(θ[31]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a321f50>, 0)], ParameterVectorElement(θ[32]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a321490>, 0)], ParameterVectorElement(θ[33]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a3215d0>, 0)], ParameterVectorElement(θ[34]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a321450>, 0)], ParameterVectorElement(θ[35]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569fae310>, 0)], ParameterVectorElement(θ[36]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a321290>, 0)], ParameterVectorElement(θ[37]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a3217d0>, 0)], ParameterVectorElement(θ[38]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a321410>, 0)], ParameterVectorElement(θ[39]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a321210>, 0)], ParameterVectorElement(θ[40]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5585b0950>, 0)], ParameterVectorElement(θ[41]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5585b0cd0>, 0)]})
-- clbits: []
-- clbit_set: set()
-- ancillas: []
-- calibrations: defaultdict(<class 'dict'>, {})
-- parameters: [ParameterVectorElement(θ[0]), ParameterVectorElement(θ[1]), ParameterVectorElement(θ[2]), ParameterVectorElement(θ[3]), ParameterVectorElement(θ[4]), ParameterVectorElement(θ[5]), ParameterVectorElement(θ[6]), ParameterVectorElement(θ[7]), ParameterVectorElement(θ[8]), ParameterVectorElement(θ[9]), ParameterVectorElement(θ[10]), ParameterVectorElement(θ[11]), ParameterVectorElement(θ[12]), ParameterVectorElement(θ[13]), ParameterVectorElement(θ[14]), ParameterVectorElement(θ[15]), ParameterVectorElement(θ[16]), ParameterVectorElement(θ[17]), ParameterVectorElement(θ[18]), ParameterVectorElement(θ[19]), ParameterVectorElement(θ[20]), ParameterVectorElement(θ[21]), ParameterVectorElement(θ[22]), ParameterVectorElement(θ[23]), ParameterVectorElement(θ[24]), ParameterVectorElement(θ[25]), ParameterVectorElement(θ[26]), ParameterVectorElement(θ[27]), ParameterVectorElement(θ[28]), ParameterVectorElement(θ[29]), ParameterVectorElement(θ[30]), ParameterVectorElement(θ[31]), ParameterVectorElement(θ[32]), ParameterVectorElement(θ[33]), ParameterVectorElement(θ[34]), ParameterVectorElement(θ[35]), ParameterVectorElement(θ[36]), ParameterVectorElement(θ[37]), ParameterVectorElement(θ[38]), ParameterVectorElement(θ[39]), ParameterVectorElement(θ[40]), ParameterVectorElement(θ[41])]
-- layout: None
-- global_phase: 0
-- metadata: None
-- cregs: []
-- num_qubits: 7
-- insert_barriers: False
-- reps: 5
-- entanglement_blocks: [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7fd5483b4990>]
-- rotation_blocks: [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7fd5483b4090>]
-- prepended_blocks: []
-- prepended_entanglement: []
-- appended_blocks: []
-- appended_entanglement: []
-- entanglement: linear
-- entangler_maps: None
-- ordered_parameters: θ, ['θ[0]', 'θ[1]', 'θ[2]', 'θ[3]', 'θ[4]', 'θ[5]', 'θ[6]', 'θ[7]', 'θ[8]', 'θ[9]', 'θ[10]', 'θ[11]', 'θ[12]', 'θ[13]', 'θ[14]', 'θ[15]', 'θ[16]', 'θ[17]', 'θ[18]', 'θ[19]', 'θ[20]', 'θ[21]', 'θ[22]', 'θ[23]', 'θ[24]', 'θ[25]', 'θ[26]', 'θ[27]', 'θ[28]', 'θ[29]', 'θ[30]', 'θ[31]', 'θ[32]', 'θ[33]', 'θ[34]', 'θ[35]', 'θ[36]', 'θ[37]', 'θ[38]', 'θ[39]', 'θ[40]', 'θ[41]']
-- overwrite_block_parameters: True
-- skip_final_rotation_layer: False
-- skip_unentangled_qubits: False
-- initial_state: <qiskit.chemistry.components.initial_states.hartree_fock.HartreeFock object at 0x7fd5585d7c90>
-- initial_state_circuit:           
q_0: ─────
          
q_1: ─────
     ┌───┐
q_2: ┤ X ├
     └───┘
q_3: ─────
          
q_4: ─────
          
q_5: ─────
          
q_6: ─────
          
-- bounds: None
===============================================================
Optimizer: COBYLA
-- gradient_support_level: 1
-- bounds_support_level: 1
-- initial_point_support_level: 3
-- options: {'maxiter': 0, 'disp': False, 'rhobeg': 1.0}
-- max_evals_grouped: 1
-- tol: None
===============================================================

2022-04-19 15:28:05,695:qiskit.aqua.quantum_instance:INFO: statevector backend only works with shot=1, changing shots from 1024 to 1.
2022-04-19 15:28:05,695:qiskit.aqua.quantum_instance:INFO: 
Qiskit Terra version: 0.17.0
Backend: 'statevector_simulator (AerProvider)', with following setting:
{'basis_gates': ['ccx', 'cp', 'cswap', 'csx', 'cu1', 'cu2', 'cu3', 'cx', 'cy', 'cz', 'delay', 'diagonal', 'h', 'id', 'initialize', 'mcp', 'mcr', 'mcrx', 'mcry', 'mcrz', 'mcswap', 'mcsx', 'mcu1', 'mcu2', 'mcu3', 'mcx', 'mcy', 'mcz', 'multiplexer', 'p', 'pauli', 'r', 'rx', 'rxx', 'ry', 'ryy', 'rz', 'rzx', 'rzz', 's', 'sdg', 'swap', 'sx', 't', 'tdg', 'u', 'u1', 'u2', 'u3', 'unitary', 'x', 'y', 'z', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector'], 'coupling_map': None}
{'initial_layout': None, 'seed_transpiler': None, 'optimization_level': None}
RunConfig(max_credits=10, shots=1)
{'timeout': None}
{}
{}
Measurement mitigation: None
2022-04-19 15:28:05,695:qiskit.aqua.algorithms.vq_algorithm:INFO: Starting optimizer.
bounds=[(-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793)]
initial point=[ 5.28801423e-03  1.23077539e+00  1.54592838e+00 -1.95572742e+00
 -2.46409240e-02 -6.46412379e-03  9.19440620e-03  2.21466386e+00
  2.88927089e-01 -3.54187353e-02  1.13837562e-01 -5.91600430e-04
  1.50745710e-03  1.61733798e-02  1.17804942e-02 -1.08413529e+00
 -2.18981338e-01 -8.70204937e-02  3.13353340e-03  1.76644940e-02
  8.46031641e-02  2.25415396e-02  5.82411268e-02  1.31066603e+00
 -1.24871858e+00  1.58300332e+00  1.64699118e+00 -3.64793870e+00
  1.01356125e-01 -1.19677191e-02  7.37823145e-01 -5.55247105e-02
  6.51448756e-03 -3.10209306e+00  3.85112589e-02  2.07622384e+00
  1.29538977e-02  3.81700088e-01  1.59716179e+00 -1.73065439e-01
 -1.77459265e-02  1.12958076e-01]
2022-04-19 15:28:05,954:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: Energy evaluation returned [-4.85376516] - 18.99600 (ms), eval count: 1
2022-04-19 15:28:05,954:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: Optimization complete in 0.25884008407592773 seconds.
Found opt_params [ 5.28801423e-03  1.23077539e+00  1.54592838e+00 -1.95572742e+00
 -2.46409240e-02 -6.46412379e-03  9.19440620e-03  2.21466386e+00
  2.88927089e-01 -3.54187353e-02  1.13837562e-01 -5.91600430e-04
  1.50745710e-03  1.61733798e-02  1.17804942e-02 -1.08413529e+00
 -2.18981338e-01 -8.70204937e-02  3.13353340e-03  1.76644940e-02
  8.46031641e-02  2.25415396e-02  5.82411268e-02  1.31066603e+00
 -1.24871858e+00  1.58300332e+00  1.64699118e+00 -3.64793870e+00
  1.01356125e-01 -1.19677191e-02  7.37823145e-01 -5.55247105e-02
  6.51448756e-03 -3.10209306e+00  3.85112589e-02  2.07622384e+00
  1.29538977e-02  3.81700088e-01  1.59716179e+00 -1.73065439e-01
 -1.77459265e-02  1.12958076e-01] in 1 evals
ancilla op commutes?  True
ancilla op commutes?  True
ancilla op commutes?  True
ancilla op commutes?  False
ancilla op commutes?  False
ancilla op commutes?  False
#INFO: **** input file is /Users/mario/Documents/GitHub/VATech/quantum_database/second_quantization/circuits/hardware_efficient/gather_beh2_results_ry_linear.py ****
from qiskit                                        import *
from qiskit.chemistry.drivers                      import UnitsType,HFMethodType
from qiskit.chemistry.core                         import Hamiltonian,TransformationType,QubitMappingType
from qiskit.chemistry.components.initial_states    import HartreeFock
from qiskit.chemistry.components.variational_forms import UCCSD
from qiskit.aqua.components.optimizers             import L_BFGS_B,COBYLA,CG
from qiskit.aqua.algorithms                        import VQE
from qiskit.aqua                                   import QuantumInstance,aqua_globals
from qiskit.circuit.library                        import EfficientSU2

import logging
from   qiskit.chemistry import set_qiskit_chemistry_logging
from   qiskit.aqua      import set_qiskit_aqua_logging
set_qiskit_chemistry_logging(logging.INFO)
set_qiskit_aqua_logging(logging.INFO)

import sys
import numpy as np
sys.path.append('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/subroutines')
sys.path.append('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/subroutines/pyscfd')
from pyscfdriver import *
from utils       import *

def print_circuit(fname,circuit):
    outf = open(fname,'w')
    for gate in circuit:
        gate_name = gate[0].name
        qubits = [q.index for q in gate[1]]
        outf.write(str(gate_name)+' | '+' '.join([str(x) for x in qubits])+' | '+' '.join([str(x._symbol_expr) for x in gate[0].params])+'\n')
    outf.close()

def print_results(fname,res_vqe,res_ee,dN=0):
    outf = open(fname,'w')
    outf.write('%.12f %.12f \n' % (res_vqe[0],np.real(res_ee[0])))
    outf.write('%.12f %.12f \n' % (res_vqe[1]+dN,np.real(res_ee[1]+dN)))
    outf.write('%.12f %.12f \n' % (res_vqe[2],np.real(res_ee[2])))
    outf.write('%.12f %.12f \n' % (res_vqe[3],np.real(res_ee[3])))
    outf.close()

dist_list = [0.7] #2.1,2.3,2.5,2.7,2.9,3.1,3.3,3.5] #[0.7,0.9,1.1,1.3,1.5,1.7,1.9,2.1,2.3,2.5,2.7,2.9,3.1,3.3,3.5,3.7,3.9,4.1,4.3,4.5]
depth_list = [1,2,3,4,5,6,7,8]

for depth in depth_list:
  for dist in dist_list:

    outfile = open('pes.txt','w')
    
    outfile.write("Bond distance: {}\n".format(dist))
    rho = np.load('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/SCF_FCI/beh2/res_fourth_pass.npy',allow_pickle=True).item()
    rho = rho[str(dist)]['rho_scf']
    driver    = PySCFDriver(atom="Be 0.0000 0.0000 0.0000; H 0.0000 0.0000 -{0}; H 0.0000 0.0000 {0}".format(dist),
                            unit=UnitsType.ANGSTROM,charge=0,spin=0,basis='sto-6g',hf_method=HFMethodType.RHF,symgroup='dooh',
                            outfile=outfile,irrep_nelec={'A1g':4,'A1u':2},rho=rho)
    molecule  = driver.run()
    outfile.write("\nHartree-Fock energy %f \n" % (molecule.hf_energy))
    
    core      = Hamiltonian(transformation=TransformationType.FULL,qubit_mapping=QubitMappingType.PARITY,two_qubit_reduction=True,freeze_core=False,orbital_reduction=[0])
    H_op,A_op = core.run(molecule)
    
    z2syms,sqlist           = None,None
    H_op,A_op,z2syms,sqlist = taper(molecule,core,H_op,A_op,outfile)
    
    init_state = HartreeFock(num_orbitals=core._molecule_info['num_orbitals'],qubit_mapping=core._qubit_mapping,two_qubit_reduction=core._two_qubit_reduction,num_particles=core._molecule_info['num_particles'],sq_list=sqlist)
    init_state.construct_circuit()
    x_hf = init_state._bitstr
 
    outfile.write("\nHartree-Fock energy %f \n" % (molecule.hf_energy))
    outfile.write("\nHartree-Fock circuit\n")
    outfile.write(str(init_state.construct_circuit().draw())+"\n")

    par = np.loadtxt('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/Ry_linear_DEPTH_%d/beh2/R_%s/output_parameters.txt' % (depth,str(dist)))
    var_form  = EfficientSU2(num_qubits=H_op.num_qubits,reps=depth,entanglement='linear',su2_gates=['ry'],initial_state=init_state)
    circuit = var_form.bind_parameters(par)

    optimizer = COBYLA(maxiter=0)
    algo      = VQE(H_op,var_form,optimizer,aux_operators=A_op,include_custom=True,initial_point=par)
    backend          = Aer.get_backend('statevector_simulator')
    quantum_instance = QuantumInstance(backend=backend)
    algo_result      = algo.run(quantum_instance)
    
    # -----------------------------------------------------------------------------------------------------------------------
    
    p1 = algo._ret['opt_params']
    res_vqe,res_ee = get_results(H_op,A_op,molecule,core,algo_result,outfile)
    print_results('ry_linear_%d/beh2_%s_results.txt' % (depth,str(dist)),res_vqe,res_ee,dN=2)

    circuit = var_form.bind_parameters(p1)
    print_circuit('ry_linear_%d/beh2_%s_circuit.txt' % (depth,str(dist)),circuit)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Tue Apr 19 15:28:06 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 3
[INPUT] num. electrons = 6
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry Dooh subgroup None
[INPUT] Mole.unit = Angstrom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000  -0.700000000000 AA    0.000000000000   0.000000000000  -1.322808287196 Bohr
[INPUT]  3 H      0.000000000000   0.000000000000   0.700000000000 AA    0.000000000000   0.000000000000   1.322808287196 Bohr

nuclear repulsion = 6.42572327545714
point group symmetry = Dooh
num. orbitals of irrep A1g = 3
num. orbitals of irrep A1u = 2
num. orbitals of irrep E1uy = 1
num. orbitals of irrep E1ux = 1
number of shells = 5
number of NR pGTOs = 42
number of NR cGTOs = 7
basis = sto-6g
ecp = {}
CPU time:        58.79

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 6 electrons in irreps ['A1g', 'A1u']
    0 free electrons in irreps E1uy E1ux




******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpu2hfjpke
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpu2hfjpke
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (A1g) = -0.533375259176049  LUMO (E1ux) = 0.15912932089226
Initial guess E= -15.0164889300848  |g|= 1.08145e-12
macro= 0  E= -15.0164889300848  delta_E= -1.06581e-14  |g|= 1.08145e-12  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-15.0164889300848  |g|= 1.08145e-12  total 2 KF 4 JK
converged SCF energy = -15.0164889300848
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/chemistry_operator.py:170: DeprecationWarning: The qiskit.chemistry.chemistry_operator.MolecularChemistryResult object is deprecated as of 0.8.0 and will be removed no sooner than 3 months after the release. You should use qiskit.chemistry.algorithms.ground_state_solvers.FermionicGroundStateResult instead.
  super().__init__(a_dict)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:381: DeprecationWarning: The qiskit.chemistry.chemistry_operator.MolecularGroundStateResult object is deprecated as of 0.8.0 and will be removed no sooner than 3 months after the release. You should use qiskit.chemistry.algorithms.ground_state_solvers.FermionicGroundStateResult instead.
  mgsr = MolecularGroundStateResult()
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:91: DeprecationWarning: The ChemistryOperator is deprecated as of Qiskit Aqua 0.8.0 and will be removed no earlier than 3 months after the release date. Instead, the FermionicTransformation can be used to transform QMolecules and construct ground state result objects.
  super().__init__()
2022-04-19 15:28:06,479:qiskit.chemistry.core.hamiltonian:INFO: Configured orbital reduction list: [0]
2022-04-19 15:28:06,479:qiskit.chemistry.core.hamiltonian:INFO: Combined orbital reduction list: [0]
2022-04-19 15:28:06,479:qiskit.chemistry.core.hamiltonian:INFO:   converting to spin orbital reduction list: [0 7]
2022-04-19 15:28:06,479:qiskit.chemistry.core.hamiltonian:INFO:     => freezing spin orbitals: [0 7]
2022-04-19 15:28:06,480:qiskit.chemistry.core.hamiltonian:INFO:     => removing spin orbitals: [] (indexes accounting for freeze [])
2022-04-19 15:28:06,544:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital energy shift: -16.617170358057287
2022-04-19 15:28:09,204:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital x dipole shift: 0.0
2022-04-19 15:28:09,267:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital y dipole shift: 0.0
2022-04-19 15:28:09,330:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital z dipole shift: 0.0
2022-04-19 15:28:09,416:qiskit.chemistry.core.hamiltonian:INFO: Molecule num electrons: [3, 3], remaining for processing: [2, 2]
2022-04-19 15:28:09,417:qiskit.chemistry.core.hamiltonian:INFO: Molecule num spin orbitals: 14, remaining for processing: 12
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:417: DeprecationWarning: Processing a dictionary result is deprecated, pass a (minimum) eigensolver result now.
  ' pass a (minimum) eigensolver result now.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:134: DeprecationWarning: energy deprecated, use eigenvalues property.
  warnings.warn('energy deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:134: DeprecationWarning: energy deprecated, use eigenvalues property.
  warnings.warn('energy deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:149: DeprecationWarning: aux_ops deprecated, use aux_operator_eigenvalues property.
  DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:138: DeprecationWarning: energies deprecated, use eigenvalues property.
  warnings.warn('energies deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:138: DeprecationWarning: energies deprecated, use eigenvalues property.
  warnings.warn('energies deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:149: DeprecationWarning: aux_ops deprecated, use aux_operator_eigenvalues property.
  DeprecationWarning)
2022-04-19 15:28:14,814:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: 
==================== Setting of VQE ============================
Algorithm: VQE
-- max_evals_grouped: 1
-- circuit_sampler: None
-- expectation: None
-- user_valid_expectation: False
-- include_custom: True
-- expect_op: None
-- operator: SummedOp([
  -0.6192771499994366 * IIIIIII,
  -0.22730651630951085 * ZIIIZZI,
  -0.03321163049383873 * IIIIIXX,
  0.03321163049383873 * ZIIIZXX,
  -0.2253147080776801 * ZZIZZZZ,
  0.05679163446780257 * ZIIIZIX,
  -0.05679163446780257 * IZIZIIX,
  -0.7258623265715671 * IIZZIII,
  -0.7258623265715669 * IZZIIII,
  -0.6030929064553017 * IIIIIZZ,
  -1.157696674452874 * IIIIIZI,
  -0.22730651630951093 * IIIIZII,
  -0.033211630493838705 * XXXXXII,
  -0.033211630493838705 * YXXXYII,
  -0.22531470807768003 * IIIZZII,
  0.0567916344678026 * ZXXXZII,
  0.0567916344678026 * IYXYIII,
  -0.6030929064553021 * ZZIIIII,
  -1.1576966744528747 * ZIIIIII,
  0.08334297239187934 * IZIZIIZ,
  0.0005769335647369502 * IIIIIZX,
  -0.0005769335647369502 * ZZIZZZX,
  0.20146330378884153 * ZIZZZZI,
  0.20146330378884153 * ZZZIZZI,
  0.09225589239004754 * ZIIIZIZ,
  0.2070609674991095 * ZIIIZII,
  -0.005836451951820793 * ZZIZZYY,
  0.005836451951820793 * IZIZIYY,
  -0.01871300096477631 * IZIZIXI,
  0.01950649403086242 * IZIZIXZ,
  -0.0007934930660861022 * ZIIIZXI,
  -0.0007934930660861022 * ZZIZZXI,
  0.01950649403086242 * IIIIIXZ,
  -0.01871300096477631 * IIIIIXI,
  0.016414969451734544 * IIZZIXX,
  -0.016414969451734544 * ZIZZZXX,
  0.016414969451734544 * IZZIIXX,
  -0.016414969451734544 * ZZZIZXX,
  0.004059418345102082 * IIIIIYY,
  -0.004059418345102082 * ZIIIZYY,
  0.2574950295951019 * ZIIIIZI,
  -0.005096331270005864 * IIIIZXX,
  0.005096331270005864 * ZIIIIXX,
  -0.039900548641951715 * IZIZXIZ,
  0.039900548641951715 * IZIIXIZ,
  0.039900548641951715 * IIIIXII,
  -0.039900548641951715 * IIIZXII,
  0.02761983228392986 * IIIIXZX,
  -0.02761983228392986 * IIIZXZX,
  0.02761983228392986 * ZIIIYZY,
  -0.02761983228392986 * ZIIZYZY,
  0.005144111872843905 * IZZYYIZ,
  0.005144111872843905 * IZIXXIZ,
  0.005144111872843905 * ZZIXXZZ,
  0.005144111872843905 * ZZZYYZZ,
  0.005144111872843905 * IIYXYIZ,
  0.005144111872843905 * IZXXXIZ,
  0.005144111872843905 * ZZXXXZZ,
  0.005144111872843905 * ZIYXYZZ,
  -0.02761983228392986 * IXXYYIZ,
  0.02761983228392986 * ZYXYXIZ,
  0.02761983228392986 * IYXXYII,
  0.02761983228392986 * ZXXXXII,
  0.024829363427025124 * IYXXYZX,
  0.024829363427025124 * ZXXXXZX,
  -0.024829363427025124 * ZYXXXZY,
  0.024829363427025124 * IXXXYZY,
  0.005096331270005864 * XXXXXZI,
  0.005096331270005864 * YXXXYZI,
  0.040309126010204054 * YXXXYXX,
  0.040309126010204054 * XXXXXXX,
  0.12324352103383106 * ZIIZIZI,
  0.020172309693380137 * IIIZZXX,
  -0.020172309693380137 * ZIIZIXX,
  -0.02704289871919291 * ZYXYZZI,
  -0.02704289871919291 * IXXXIZI,
  -0.0176251544088086 * IYXYIXX,
  -0.0176251544088086 * ZXXXZXX,
  0.0176251544088086 * ZYXYZXX,
  0.0176251544088086 * IXXXIXX,
  0.014335857741559347 * YYXXIIZ,
  -0.014335857741559347 * XYXYZIZ,
  -0.014335857741559347 * YXXYIII,
  -0.014335857741559347 * XXXXZII,
  -0.016831661342722494 * YXXYIZX,
  -0.016831661342722494 * XXXXZZX,
  0.016831661342722494 * XXXYZZY,
  -0.016831661342722494 * YXXXIZY,
  -0.0026771586587551912 * YYXIIIZ,
  0.0026771586587551912 * XYYZIIZ,
  0.0026771586587551912 * XYYZZZZ,
  -0.0026771586587551912 * YYXIZZZ,
  -0.0026771586587551912 * YYIIIIZ,
  -0.0026771586587551912 * XXZIIIZ,
  -0.0026771586587551912 * XXZIZZZ,
  -0.0026771586587551912 * YYIIZZZ,
  0.11708525581707264 * IZIIZZI,
  0.025353540310681544 * ZZIIIXX,
  -0.025353540310681544 * IZIIZXX,
  0.03633815537358491 * XZIZIIZ,
  -0.03633815537358491 * XIIZIIZ,
  -0.03633815537358491 * XIIIIII,
  0.03633815537358491 * XZIIIII,
  -0.029412958655783628 * XIIIIZX,
  0.029412958655783628 * XZIIIZX,
  -0.029412958655783628 * YIIIZZY,
  0.029412958655783628 * YZIIZZY,
  0.24737009350931358 * IIIIZZI,
  0.1972129542494357 * ZZZIZZZ,
  0.1972129542494357 * ZIZZZZZ,
  0.1890750782620393 * ZZIZZII,
  0.10213539151593913 * ZZIZZIZ,
  -0.02146329537529415 * ZIZZZIX,
  0.02146329537529415 * IZZIIIX,
  -0.02146329537529415 * ZZZIZIX,
  0.02146329537529415 * IIZZIIX,
  -0.00989812276346958 * ZIIIZZX,
  0.00989812276346958 * IZIZIZX,
  0.12324352103383106 * ZZIZIZZ,
  -0.027042898719192913 * ZIIIIIX,
  0.027042898719192913 * IZIZZIX,
  0.014335857741559347 * ZIIIYYX,
  -0.014335857741559347 * ZIIZYYX,
  -0.014335857741559347 * IZIZXYY,
  0.014335857741559347 * IZIIXYY,
  -0.01683166134272249 * ZYXXXYX,
  0.01683166134272249 * IXXXYYX,
  -0.01683166134272249 * IXXYYYY,
  0.01683166134272249 * ZYXYXYY,
  0.020172309693380137 * XYXYXZZ,
  0.020172309693380137 * YYXYYZZ,
  0.0176251544088086 * XXXXXIX,
  0.0176251544088086 * YXXXYIX,
  -0.0176251544088086 * YYXYYIX,
  -0.0176251544088086 * XYXYXIX,
  0.2330296305961526 * ZZIIIZZ,
  0.001671692012152396 * ZIIZIIX,
  -0.001671692012152396 * IZIIZIX,
  -0.016279945780510962 * ZZZXZZZ,
  0.016279945780510962 * ZZIXIZZ,
  0.016279945780510962 * IIIXIII,
  -0.016279945780510962 * IIZXZII,
  0.016279945780510962 * ZIYYZZZ,
  0.016279945780510962 * ZZXXIZZ,
  0.016279945780510962 * IIXXIII,
  0.016279945780510962 * IZYYZII,
  -0.001671692012152396 * ZXXXZZZ,
  -0.001671692012152396 * IYXYIZZ,
  0.035730306195109925 * ZYXYZIX,
  0.035730306195109925 * IXXXIIX,
  0.013761477078992203 * XXXYZYX,
  -0.013761477078992203 * YXXXIYX,
  0.013761477078992203 * YYXXIYY,
  -0.013761477078992203 * XYXYZYY,
  -0.010270084289159999 * ZXXIZZZ,
  -0.010270084289159999 * IYYZZZZ,
  -0.010270084289159999 * IYYIIII,
  -0.010270084289159999 * ZXXZIII,
  -0.010270084289159999 * ZXIIZZZ,
  0.010270084289159999 * IXZIZZZ,
  0.010270084289159999 * IXZZIII,
  -0.010270084289159999 * ZXIZIII,
  0.22480538445714923 * IIIZZZZ,
  -0.01886307133245532 * YIIIZYX,
  0.01886307133245532 * YZIIZYX,
  0.01886307133245532 * XZIZIYY,
  -0.01886307133245532 * XIIZIYY,
  0.11589686859493135 * IZIZZZZ,
  -0.0287611940959249 * IIIIZIX,
  0.0287611940959249 * ZZIZIIX,
  0.38947179486833605 * IZIZIII,
  0.18647570075538616 * IIZZIZZ,
  0.1883020217766596 * IIZZIZI,
  0.20146330378884153 * IIZZZII,
  -0.0026771586587551912 * IZIXYXY,
  0.0026771586587551912 * IZZYXXY,
  -0.0026771586587551912 * IZZYYYY,
  -0.0026771586587551912 * IZIXXYY,
  -0.016414969451734544 * YXYYYII,
  -0.016414969451734544 * XXYYXII,
  0.1972129542494357 * IIZIZII,
  0.010270084289159999 * IZIYIZY,
  -0.010270084289159999 * IZZYZZY,
  0.010270084289159999 * IZZXIIX,
  -0.010270084289159999 * IZIXZIX,
  -0.02146329537529415 * IYYXIII,
  0.02146329537529415 * ZXYYZII,
  -0.012128953755816447 * IZXZIII,
  0.012128953755816447 * IIXIIII,
  0.009509761069347353 * IXYZIZY,
  -0.009509761069347353 * ZYXIIZY,
  0.009509761069347353 * IXXIIIX,
  0.009509761069347353 * ZYYZIIX,
  -0.0025708476077440662 * YYYZIXY,
  -0.0025708476077440662 * XYXIIXY,
  0.0025708476077440662 * YYXIIYY,
  -0.0025708476077440662 * XYYZIYY,
  0.18647570075538616 * ZZZZIII,
  0.1883020217766596 * ZIZZIII,
  0.18647570075538616 * IZZIIZZ,
  0.1883020217766596 * IZZIIZI,
  0.20146330378884153 * IZZIZII,
  -0.0026771586587551912 * IZXXYXY,
  0.0026771586587551912 * IIYXXXY,
  -0.0026771586587551912 * IIYXYYY,
  -0.0026771586587551912 * IZXXXYY,
  -0.016414969451734544 * YYYXYII,
  -0.016414969451734544 * XYYXXII,
  0.1972129542494357 * IZZZZII,
  0.010270084289159999 * IZXYIZY,
  -0.010270084289159999 * IIYXZZY,
  -0.010270084289159999 * IIYYIIX,
  -0.010270084289159999 * IZXXZIX,
  -0.02146329537529415 * IXYYIII,
  0.02146329537529415 * ZYYXZII,
  0.009509761069347353 * IYZIIZY,
  -0.009509761069347353 * ZYIIIZY,
  0.009509761069347353 * IXIIIIX,
  -0.009509761069347353 * ZXZIIIX,
  0.0025708476077440662 * YXZIIXY,
  -0.0025708476077440662 * XYIIIXY,
  0.0025708476077440662 * YYIIIYY,
  0.0025708476077440662 * XXZIIYY,
  0.18647570075538616 * ZIZIIII,
  0.1883020217766596 * ZZZIIII,
  0.07688554243850795 * IIIIIIZ,
  0.11708525581707264 * IIIIZZZ,
  0.03633815537358492 * IIIIXXZ,
  -0.03633815537358492 * IIIZXXZ,
  -0.03633815537358492 * IIIIXXI,
  0.03633815537358492 * IIIZXXI,
  0.02941295865578362 * IYXXYXZ,
  0.02941295865578362 * ZXXXXXZ,
  -0.02941295865578362 * IYXXYXI,
  -0.02941295865578362 * ZXXXXXI,
  0.025353540310681544 * YXXXYZZ,
  0.025353540310681544 * XXXXXZZ,
  -0.018863071332455322 * YXXYIXZ,
  -0.018863071332455322 * XXXXZXZ,
  0.018863071332455322 * YXXYIXI,
  0.018863071332455322 * XXXXZXI,
  -0.04011876971168971 * XIIIIXZ,
  0.04011876971168971 * XZIIIXZ,
  0.04011876971168971 * XIIIIXI,
  -0.04011876971168971 * XZIIIXI,
  0.11700431215019767 * ZIIIIZZ,
  0.11589686859493135 * IIIZZZI,
  -0.0287611940959249 * IYXYIZI,
  -0.0287611940959249 * ZXXXZZI,
  0.11700431215019767 * ZZIIIZI,
  0.08334297239187934 * IIIZIII,
  0.0005769335647369502 * ZXXXIII,
  0.0005769335647369502 * IYXYZII,
  0.09225589239004754 * ZZIIZII,
  -0.005836451951820793 * XXXYYII,
  0.005836451951820793 * YXXYXII,
  -0.01871300096477631 * XZIZXII,
  0.01950649403086242 * XIIZXII,
  0.0007934930660861022 * YIIIYII,
  0.0007934930660861022 * YZIZYII,
  0.01950649403086242 * XZIIXII,
  -0.01871300096477631 * XIIIXII,
  0.004059418345102082 * YYXXXII,
  -0.004059418345102082 * XYXXYII,
  0.10213539151593913 * ZIIZZII,
  -0.00989812276346958 * IXXXZII,
  -0.00989812276346958 * ZYXYIII,
  0.07688554243850795 * IZIIIII
])
-- quantum_instance: None
-- optimizer: <qiskit.aqua.components.optimizers.cobyla.COBYLA object at 0x7fd57ac60f90>
-- gradient: None
-- cost_fn: <bound method VQE._energy_evaluation of <qiskit.aqua.algorithms.minimum_eigen_solvers.vqe.VQE object at 0x7fd57b597610>>
-- initial_point: [ 1.08366377e-02  7.12058597e-02  7.25789252e-02  2.39406089e-01
  2.45604136e-02 -9.34880474e-02 -8.44137689e-03  1.57997258e-01
 -1.38539240e+00 -1.56763569e+00 -1.44049414e+00 -5.61860404e-05
  1.18179988e-02 -7.44607573e-02 -3.57482351e-04 -7.06070648e-02
 -1.45485622e+00 -6.35746051e-02  7.93474764e-02 -1.79197837e-04
  1.13772491e-01 -8.35539956e-03 -1.31363257e-02 -1.36407417e-02
  1.65247428e+00 -9.50754976e-02 -9.32235271e-03 -6.57137045e-03
  6.64286572e-02 -1.23185869e-03 -8.18392384e-03 -1.55039385e+00
 -1.53964410e+00 -1.23861839e-02 -1.49478001e+00 -5.06160083e-01
  2.86260379e-02 -2.93280606e-03 -2.25079844e-01 -1.88393618e-02
 -2.59496550e-03  1.40580501e-02  2.07640428e+00  2.51294897e-02
 -3.53605351e-01 -1.53359079e+00  3.08027660e-03 -3.81119670e-04
  2.11978665e-03]
-- var_form:      ┌──────────┐            ┌──────────┐                        ┌───────────┐»
q_0: ┤ RY(θ[0]) ├─────■──────┤ RY(θ[7]) ├─────────────────■──────┤ RY(θ[14]) ├»
     ├──────────┤   ┌─┴─┐    └──────────┘┌──────────┐   ┌─┴─┐    └───────────┘»
q_1: ┤ RY(θ[1]) ├───┤ X ├─────────■──────┤ RY(θ[8]) ├───┤ X ├──────────■──────»
     └──┬───┬───┘┌──┴───┴───┐   ┌─┴─┐    └──────────┘┌──┴───┴───┐    ┌─┴─┐    »
q_2: ───┤ X ├────┤ RY(θ[2]) ├───┤ X ├─────────■──────┤ RY(θ[9]) ├────┤ X ├────»
     ┌──┴───┴───┐└──────────┘   └───┘       ┌─┴─┐    └──────────┘┌───┴───┴───┐»
q_3: ┤ RY(θ[3]) ├───────────────────────────┤ X ├─────────■──────┤ RY(θ[10]) ├»
     ├──────────┤                           └───┘       ┌─┴─┐    └───────────┘»
q_4: ┤ RY(θ[4]) ├───────────────────────────────────────┤ X ├──────────■──────»
     ├──────────┤                                       └───┘        ┌─┴─┐    »
q_5: ┤ RY(θ[5]) ├────────────────────────────────────────────────────┤ X ├────»
     ├──────────┤                                                    └───┘    »
q_6: ┤ RY(θ[6]) ├─────────────────────────────────────────────────────────────»
     └──────────┘                                                             »
«                               ┌───────────┐                          »
«q_0: ───────────────────■──────┤ RY(θ[21]) ├───────────────────■──────»
«     ┌───────────┐    ┌─┴─┐    └───────────┘┌───────────┐    ┌─┴─┐    »
«q_1: ┤ RY(θ[15]) ├────┤ X ├──────────■──────┤ RY(θ[22]) ├────┤ X ├────»
«     └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───┴───┴───┐»
«q_2: ──────■──────┤ RY(θ[16]) ├────┤ X ├──────────■──────┤ RY(θ[23]) ├»
«         ┌─┴─┐    └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘»
«q_3: ────┤ X ├──────────■──────┤ RY(θ[17]) ├────┤ X ├──────────■──────»
«     ┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───┴───┴───┐    ┌─┴─┐    »
«q_4: ┤ RY(θ[11]) ├────┤ X ├──────────■──────┤ RY(θ[18]) ├────┤ X ├────»
«     └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───┴───┴───┐»
«q_5: ──────■──────┤ RY(θ[12]) ├────┤ X ├──────────■──────┤ RY(θ[19]) ├»
«         ┌─┴─┐    ├───────────┤    └───┘        ┌─┴─┐    ├───────────┤»
«q_6: ────┤ X ├────┤ RY(θ[13]) ├─────────────────┤ X ├────┤ RY(θ[20]) ├»
«         └───┘    └───────────┘                 └───┘    └───────────┘»
«     ┌───────────┐                          ┌───────────┐             »
«q_0: ┤ RY(θ[28]) ├───────────────────■──────┤ RY(θ[35]) ├─────────────»
«     └───────────┘┌───────────┐    ┌─┴─┐    └───────────┘┌───────────┐»
«q_1: ──────■──────┤ RY(θ[29]) ├────┤ X ├──────────■──────┤ RY(θ[36]) ├»
«         ┌─┴─┐    └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘»
«q_2: ────┤ X ├──────────■──────┤ RY(θ[30]) ├────┤ X ├──────────■──────»
«     ┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───┴───┴───┐    ┌─┴─┐    »
«q_3: ┤ RY(θ[24]) ├────┤ X ├──────────■──────┤ RY(θ[31]) ├────┤ X ├────»
«     └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───┴───┴───┐»
«q_4: ──────■──────┤ RY(θ[25]) ├────┤ X ├──────────■──────┤ RY(θ[32]) ├»
«         ┌─┴─┐    └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘»
«q_5: ────┤ X ├──────────■──────┤ RY(θ[26]) ├────┤ X ├──────────■──────»
«         └───┘        ┌─┴─┐    ├───────────┤    └───┘        ┌─┴─┐    »
«q_6: ─────────────────┤ X ├────┤ RY(θ[27]) ├─────────────────┤ X ├────»
«                      └───┘    └───────────┘                 └───┘    »
«                  ┌───────────┐                                       »
«q_0: ──────■──────┤ RY(θ[42]) ├───────────────────────────────────────»
«         ┌─┴─┐    └───────────┘┌───────────┐                          »
«q_1: ────┤ X ├──────────■──────┤ RY(θ[43]) ├──────────────────────────»
«     ┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───────────┐             »
«q_2: ┤ RY(θ[37]) ├────┤ X ├──────────■──────┤ RY(θ[44]) ├─────────────»
«     └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───────────┐»
«q_3: ──────■──────┤ RY(θ[38]) ├────┤ X ├──────────■──────┤ RY(θ[45]) ├»
«         ┌─┴─┐    └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘»
«q_4: ────┤ X ├──────────■──────┤ RY(θ[39]) ├────┤ X ├──────────■──────»
«     ┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───┴───┴───┐    ┌─┴─┐    »
«q_5: ┤ RY(θ[33]) ├────┤ X ├──────────■──────┤ RY(θ[40]) ├────┤ X ├────»
«     ├───────────┤    └───┘        ┌─┴─┐    ├───────────┤    └───┘    »
«q_6: ┤ RY(θ[34]) ├─────────────────┤ X ├────┤ RY(θ[41]) ├─────────────»
«     └───────────┘                 └───┘    └───────────┘             »
«                               
«q_0: ──────────────────────────
«                               
«q_1: ──────────────────────────
«                               
«q_2: ──────────────────────────
«                               
«q_3: ──────────────────────────
«     ┌───────────┐             
«q_4: ┤ RY(θ[46]) ├─────────────
«     └───────────┘┌───────────┐
«q_5: ──────■──────┤ RY(θ[47]) ├
«         ┌─┴─┐    ├───────────┤
«q_6: ────┤ X ├────┤ RY(θ[48]) ├
«         └───┘    └───────────┘
-- var_form_params: [ParameterVectorElement(θ[0]), ParameterVectorElement(θ[10]), ParameterVectorElement(θ[11]), ParameterVectorElement(θ[12]), ParameterVectorElement(θ[13]), ParameterVectorElement(θ[14]), ParameterVectorElement(θ[15]), ParameterVectorElement(θ[16]), ParameterVectorElement(θ[17]), ParameterVectorElement(θ[18]), ParameterVectorElement(θ[19]), ParameterVectorElement(θ[1]), ParameterVectorElement(θ[20]), ParameterVectorElement(θ[21]), ParameterVectorElement(θ[22]), ParameterVectorElement(θ[23]), ParameterVectorElement(θ[24]), ParameterVectorElement(θ[25]), ParameterVectorElement(θ[26]), ParameterVectorElement(θ[27]), ParameterVectorElement(θ[28]), ParameterVectorElement(θ[29]), ParameterVectorElement(θ[2]), ParameterVectorElement(θ[30]), ParameterVectorElement(θ[31]), ParameterVectorElement(θ[32]), ParameterVectorElement(θ[33]), ParameterVectorElement(θ[34]), ParameterVectorElement(θ[35]), ParameterVectorElement(θ[36]), ParameterVectorElement(θ[37]), ParameterVectorElement(θ[38]), ParameterVectorElement(θ[39]), ParameterVectorElement(θ[3]), ParameterVectorElement(θ[40]), ParameterVectorElement(θ[41]), ParameterVectorElement(θ[42]), ParameterVectorElement(θ[43]), ParameterVectorElement(θ[44]), ParameterVectorElement(θ[45]), ParameterVectorElement(θ[46]), ParameterVectorElement(θ[47]), ParameterVectorElement(θ[48]), ParameterVectorElement(θ[4]), ParameterVectorElement(θ[5]), ParameterVectorElement(θ[6]), ParameterVectorElement(θ[7]), ParameterVectorElement(θ[8]), ParameterVectorElement(θ[9])]
-- parameterized_circuits: None
-- ret: None
-- eval_time: None
-- callback: None
-- aux_op_nones: [False, False, False, False, False, False]
-- aux_operators: [SummedOp([PauliOp(Pauli('IIIIIII'), coeff=5.999999999999994), PauliOp(Pauli('ZIIIZZI'), coeff=-0.4999999999999996), PauliOp(Pauli('ZZIZZZZ'), coeff=-0.4999999999999996), PauliOp(Pauli('IIZZIII'), coeff=-0.9999999999999992), PauliOp(Pauli('IZZIIII'), coeff=-0.9999999999999992), PauliOp(Pauli('IIIIIZZ'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIIIZI'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIIZII'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIZZII'), coeff=-0.4999999999999996), PauliOp(Pauli('ZZIIIII'), coeff=-0.4999999999999996), PauliOp(Pauli('ZIIIIII'), coeff=-0.4999999999999996)], coeff=1.0, abelian=False), SummedOp([PauliOp(Pauli('IIIIIII'), coeff=1.4999999999999987), PauliOp(Pauli('IZIZIIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIZIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIIIZI'), coeff=-0.7499999999999992), PauliOp(Pauli('ZIIZIZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IZIIZZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIZZI'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIIIXZI'), coeff=0.1249999999999999), PauliOp(Pauli('IZIZXIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIZXZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IZIIXIZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIXII'), coeff=-0.1249999999999999), PauliOp(Pauli('ZZIZXZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZXII'), coeff=0.1249999999999999), PauliOp(Pauli('ZZIIXZZ'), coeff=0.1249999999999999), PauliOp(Pauli('IYXXXIY'), coeff=-0.1249999999999999), PauliOp(Pauli('IYXXYZX'), coeff=-0.1249999999999999), PauliOp(Pauli('ZXXXYIY'), coeff=0.1249999999999999), PauliOp(Pauli('ZXXXXZX'), coeff=-0.1249999999999999), PauliOp(Pauli('ZYXXXZY'), coeff=0.1249999999999999), PauliOp(Pauli('ZYXXYIX'), coeff=0.1249999999999999), PauliOp(Pauli('IXXXYZY'), coeff=-0.1249999999999999), PauliOp(Pauli('IXXXXIX'), coeff=0.1249999999999999), PauliOp(Pauli('YXXXXYX'), coeff=-0.2499999999999998), PauliOp(Pauli('YXXXYXX'), coeff=-0.2499999999999998), PauliOp(Pauli('XXXXYYX'), coeff=0.2499999999999998), PauliOp(Pauli('XXXXXXX'), coeff=-0.2499999999999998), PauliOp(Pauli('ZZIZZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZZIZZIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZZIZIZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZZIIIZZ'), coeff=-0.7499999999999992), PauliOp(Pauli('IIIZZZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IZIZZZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZYXXIZY'), coeff=-0.2499999999999998), PauliOp(Pauli('ZYXYZIX'), coeff=-0.2499999999999998), PauliOp(Pauli('IXXYZZY'), coeff=0.2499999999999998), PauliOp(Pauli('IXXXIIX'), coeff=-0.2499999999999998), PauliOp(Pauli('XXXXIXX'), coeff=0.1249999999999999), PauliOp(Pauli('XXXYZYX'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXYZXX'), coeff=0.1249999999999999), PauliOp(Pauli('YXXXIYX'), coeff=0.1249999999999999), PauliOp(Pauli('YYXXIYY'), coeff=-0.1249999999999999), PauliOp(Pauli('YYXYZXY'), coeff=-0.1249999999999999), PauliOp(Pauli('XYXYZYY'), coeff=0.1249999999999999), PauliOp(Pauli('XYXXIXY'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIIIZ'), coeff=0.1249999999999999), PauliOp(Pauli('IIIIZZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIIIIZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('YZIIIYZ'), coeff=-0.1249999999999999), PauliOp(Pauli('XIIIIXZ'), coeff=0.1249999999999999), PauliOp(Pauli('YIIIIYZ'), coeff=0.1249999999999999), PauliOp(Pauli('XZIIIXZ'), coeff=-0.1249999999999999), PauliOp(Pauli('XIIIIXI'), coeff=-0.1249999999999999), PauliOp(Pauli('YZIIIYI'), coeff=0.1249999999999999), PauliOp(Pauli('XZIIIXI'), coeff=0.1249999999999999), PauliOp(Pauli('YIIIIYI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZZZI'), coeff=-0.1249999999999999), PauliOp(Pauli('ZZIIIZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZIII'), coeff=0.1249999999999999), PauliOp(Pauli('ZZIIZII'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIZZII'), coeff=0.1249999999999999), PauliOp(Pauli('IZIIIII'), coeff=0.1249999999999999)], coeff=1.0, abelian=False), SummedOp([PauliOp(Pauli('ZIIIZZI'), coeff=-0.2499999999999998), PauliOp(Pauli('ZZIZZZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIIZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIIZI'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIZII'), coeff=0.2499999999999998), PauliOp(Pauli('IIIZZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZZIIIII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIIIII'), coeff=0.2499999999999998)], coeff=1.0, abelian=False), PauliOp(Pauli('IIIIIII'), coeff=0.0), PauliOp(Pauli('IIIIIII'), coeff=0.0), PauliOp(Pauli('IIIIIII'), coeff=0.0)]
-- eval_count: 0
===============================================================
NLocal: EfficientSU2
-- base_name: nlocal
-- data: [(<qiskit.circuit.library.standard_gates.x.XGate object at 0x7fd548351410>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548382790>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569facb90>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569fac790>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569fac490>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4cbf90>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4cbcd0>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4cb690>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5483829d0>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a4cbb90>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a4cba10>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a4cba50>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a4cb510>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a4cb6d0>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548382c90>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4cbc90>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4cbfd0>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4cb190>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4cbbd0>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4cb450>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4cb090>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd548382410>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a4cb210>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a4cb590>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a4cb0d0>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a4cbd10>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a4cb890>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548382490>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4cb3d0>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4cb610>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4cb350>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4cb710>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4cb810>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4cba90>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a4cbe10>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a4cbad0>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a4cb9d0>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a4cb750>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5482b9410>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5482b9550>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548382fd0>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483822d0>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548382e50>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483826d0>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483823d0>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482b9fd0>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482b9cd0>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd500647590>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5482b9a50>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5482b90d0>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5482b91d0>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5482b9b50>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5482b9f90>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4cbb10>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482b9350>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482b9690>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482b9450>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482b9810>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482b9e50>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482b9190>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd548382950>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd548382a90>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a0101d0>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a010750>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a010150>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a0109d0>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a010710>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548382990>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548382f90>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482b94d0>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482b9210>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002e5350>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002e5410>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd548382e10>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5002e55d0>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5002e5cd0>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5002e5d90>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5002e5610>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5002e5850>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4cbe50>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002e5650>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002e5990>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002e5310>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002e50d0>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002e5390>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002e5750>, [Qubit(QuantumRegister(7, 'q'), 6)], [])]
-- qregs: [QuantumRegister(7, 'q')]
-- qubits: [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)]
-- qubit_set: {Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 6)}
-- parameter_table: ParameterTable({ParameterVectorElement(θ[0]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548382790>, 0)], ParameterVectorElement(θ[1]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569facb90>, 0)], ParameterVectorElement(θ[2]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569fac790>, 0)], ParameterVectorElement(θ[3]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569fac490>, 0)], ParameterVectorElement(θ[4]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4cbf90>, 0)], ParameterVectorElement(θ[5]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4cbcd0>, 0)], ParameterVectorElement(θ[6]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4cb690>, 0)], ParameterVectorElement(θ[7]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548382c90>, 0)], ParameterVectorElement(θ[8]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4cbc90>, 0)], ParameterVectorElement(θ[9]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4cbfd0>, 0)], ParameterVectorElement(θ[10]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4cb190>, 0)], ParameterVectorElement(θ[11]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4cbbd0>, 0)], ParameterVectorElement(θ[12]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4cb450>, 0)], ParameterVectorElement(θ[13]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4cb090>, 0)], ParameterVectorElement(θ[14]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548382490>, 0)], ParameterVectorElement(θ[15]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4cb3d0>, 0)], ParameterVectorElement(θ[16]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4cb610>, 0)], ParameterVectorElement(θ[17]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4cb350>, 0)], ParameterVectorElement(θ[18]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4cb710>, 0)], ParameterVectorElement(θ[19]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4cb810>, 0)], ParameterVectorElement(θ[20]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4cba90>, 0)], ParameterVectorElement(θ[21]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548382fd0>, 0)], ParameterVectorElement(θ[22]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483822d0>, 0)], ParameterVectorElement(θ[23]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548382e50>, 0)], ParameterVectorElement(θ[24]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483826d0>, 0)], ParameterVectorElement(θ[25]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5483823d0>, 0)], ParameterVectorElement(θ[26]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482b9fd0>, 0)], ParameterVectorElement(θ[27]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482b9cd0>, 0)], ParameterVectorElement(θ[28]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4cbb10>, 0)], ParameterVectorElement(θ[29]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482b9350>, 0)], ParameterVectorElement(θ[30]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482b9690>, 0)], ParameterVectorElement(θ[31]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482b9450>, 0)], ParameterVectorElement(θ[32]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482b9810>, 0)], ParameterVectorElement(θ[33]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482b9e50>, 0)], ParameterVectorElement(θ[34]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482b9190>, 0)], ParameterVectorElement(θ[35]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a010710>, 0)], ParameterVectorElement(θ[36]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548382990>, 0)], ParameterVectorElement(θ[37]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd548382f90>, 0)], ParameterVectorElement(θ[38]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482b94d0>, 0)], ParameterVectorElement(θ[39]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482b9210>, 0)], ParameterVectorElement(θ[40]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002e5350>, 0)], ParameterVectorElement(θ[41]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002e5410>, 0)], ParameterVectorElement(θ[42]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4cbe50>, 0)], ParameterVectorElement(θ[43]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002e5650>, 0)], ParameterVectorElement(θ[44]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002e5990>, 0)], ParameterVectorElement(θ[45]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002e5310>, 0)], ParameterVectorElement(θ[46]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002e50d0>, 0)], ParameterVectorElement(θ[47]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002e5390>, 0)], ParameterVectorElement(θ[48]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002e5750>, 0)]})
-- clbits: []
-- clbit_set: set()
-- ancillas: []
-- calibrations: defaultdict(<class 'dict'>, {})
-- parameters: [ParameterVectorElement(θ[0]), ParameterVectorElement(θ[1]), ParameterVectorElement(θ[2]), ParameterVectorElement(θ[3]), ParameterVectorElement(θ[4]), ParameterVectorElement(θ[5]), ParameterVectorElement(θ[6]), ParameterVectorElement(θ[7]), ParameterVectorElement(θ[8]), ParameterVectorElement(θ[9]), ParameterVectorElement(θ[10]), ParameterVectorElement(θ[11]), ParameterVectorElement(θ[12]), ParameterVectorElement(θ[13]), ParameterVectorElement(θ[14]), ParameterVectorElement(θ[15]), ParameterVectorElement(θ[16]), ParameterVectorElement(θ[17]), ParameterVectorElement(θ[18]), ParameterVectorElement(θ[19]), ParameterVectorElement(θ[20]), ParameterVectorElement(θ[21]), ParameterVectorElement(θ[22]), ParameterVectorElement(θ[23]), ParameterVectorElement(θ[24]), ParameterVectorElement(θ[25]), ParameterVectorElement(θ[26]), ParameterVectorElement(θ[27]), ParameterVectorElement(θ[28]), ParameterVectorElement(θ[29]), ParameterVectorElement(θ[30]), ParameterVectorElement(θ[31]), ParameterVectorElement(θ[32]), ParameterVectorElement(θ[33]), ParameterVectorElement(θ[34]), ParameterVectorElement(θ[35]), ParameterVectorElement(θ[36]), ParameterVectorElement(θ[37]), ParameterVectorElement(θ[38]), ParameterVectorElement(θ[39]), ParameterVectorElement(θ[40]), ParameterVectorElement(θ[41]), ParameterVectorElement(θ[42]), ParameterVectorElement(θ[43]), ParameterVectorElement(θ[44]), ParameterVectorElement(θ[45]), ParameterVectorElement(θ[46]), ParameterVectorElement(θ[47]), ParameterVectorElement(θ[48])]
-- layout: None
-- global_phase: 0
-- metadata: None
-- cregs: []
-- num_qubits: 7
-- insert_barriers: False
-- reps: 6
-- entanglement_blocks: [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7fd548351490>]
-- rotation_blocks: [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7fd5483518d0>]
-- prepended_blocks: []
-- prepended_entanglement: []
-- appended_blocks: []
-- appended_entanglement: []
-- entanglement: linear
-- entangler_maps: None
-- ordered_parameters: θ, ['θ[0]', 'θ[1]', 'θ[2]', 'θ[3]', 'θ[4]', 'θ[5]', 'θ[6]', 'θ[7]', 'θ[8]', 'θ[9]', 'θ[10]', 'θ[11]', 'θ[12]', 'θ[13]', 'θ[14]', 'θ[15]', 'θ[16]', 'θ[17]', 'θ[18]', 'θ[19]', 'θ[20]', 'θ[21]', 'θ[22]', 'θ[23]', 'θ[24]', 'θ[25]', 'θ[26]', 'θ[27]', 'θ[28]', 'θ[29]', 'θ[30]', 'θ[31]', 'θ[32]', 'θ[33]', 'θ[34]', 'θ[35]', 'θ[36]', 'θ[37]', 'θ[38]', 'θ[39]', 'θ[40]', 'θ[41]', 'θ[42]', 'θ[43]', 'θ[44]', 'θ[45]', 'θ[46]', 'θ[47]', 'θ[48]']
-- overwrite_block_parameters: True
-- skip_final_rotation_layer: False
-- skip_unentangled_qubits: False
-- initial_state: <qiskit.chemistry.components.initial_states.hartree_fock.HartreeFock object at 0x7fd5482b5650>
-- initial_state_circuit:           
q_0: ─────
          
q_1: ─────
     ┌───┐
q_2: ┤ X ├
     └───┘
q_3: ─────
          
q_4: ─────
          
q_5: ─────
          
q_6: ─────
          
-- bounds: None
===============================================================
Optimizer: COBYLA
-- gradient_support_level: 1
-- bounds_support_level: 1
-- initial_point_support_level: 3
-- options: {'maxiter': 0, 'disp': False, 'rhobeg': 1.0}
-- max_evals_grouped: 1
-- tol: None
===============================================================

2022-04-19 15:28:14,815:qiskit.aqua.quantum_instance:INFO: statevector backend only works with shot=1, changing shots from 1024 to 1.
2022-04-19 15:28:14,815:qiskit.aqua.quantum_instance:INFO: 
Qiskit Terra version: 0.17.0
Backend: 'statevector_simulator (AerProvider)', with following setting:
{'basis_gates': ['ccx', 'cp', 'cswap', 'csx', 'cu1', 'cu2', 'cu3', 'cx', 'cy', 'cz', 'delay', 'diagonal', 'h', 'id', 'initialize', 'mcp', 'mcr', 'mcrx', 'mcry', 'mcrz', 'mcswap', 'mcsx', 'mcu1', 'mcu2', 'mcu3', 'mcx', 'mcy', 'mcz', 'multiplexer', 'p', 'pauli', 'r', 'rx', 'rxx', 'ry', 'ryy', 'rz', 'rzx', 'rzz', 's', 'sdg', 'swap', 'sx', 't', 'tdg', 'u', 'u1', 'u2', 'u3', 'unitary', 'x', 'y', 'z', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector'], 'coupling_map': None}
{'initial_layout': None, 'seed_transpiler': None, 'optimization_level': None}
RunConfig(max_credits=10, shots=1)
{'timeout': None}
{}
{}
Measurement mitigation: None
2022-04-19 15:28:14,815:qiskit.aqua.algorithms.vq_algorithm:INFO: Starting optimizer.
bounds=[(-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793)]
initial point=[ 1.08366377e-02  7.12058597e-02  7.25789252e-02  2.39406089e-01
  2.45604136e-02 -9.34880474e-02 -8.44137689e-03  1.57997258e-01
 -1.38539240e+00 -1.56763569e+00 -1.44049414e+00 -5.61860404e-05
  1.18179988e-02 -7.44607573e-02 -3.57482351e-04 -7.06070648e-02
 -1.45485622e+00 -6.35746051e-02  7.93474764e-02 -1.79197837e-04
  1.13772491e-01 -8.35539956e-03 -1.31363257e-02 -1.36407417e-02
  1.65247428e+00 -9.50754976e-02 -9.32235271e-03 -6.57137045e-03
  6.64286572e-02 -1.23185869e-03 -8.18392384e-03 -1.55039385e+00
 -1.53964410e+00 -1.23861839e-02 -1.49478001e+00 -5.06160083e-01
  2.86260379e-02 -2.93280606e-03 -2.25079844e-01 -1.88393618e-02
 -2.59496550e-03  1.40580501e-02  2.07640428e+00  2.51294897e-02
 -3.53605351e-01 -1.53359079e+00  3.08027660e-03 -3.81119670e-04
  2.11978665e-03]
2022-04-19 15:28:15,094:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: Energy evaluation returned [-4.8539717] - 21.48080 (ms), eval count: 1
2022-04-19 15:28:15,095:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: Optimization complete in 0.2792541980743408 seconds.
Found opt_params [ 1.08366377e-02  7.12058597e-02  7.25789252e-02  2.39406089e-01
  2.45604136e-02 -9.34880474e-02 -8.44137689e-03  1.57997258e-01
 -1.38539240e+00 -1.56763569e+00 -1.44049414e+00 -5.61860404e-05
  1.18179988e-02 -7.44607573e-02 -3.57482351e-04 -7.06070648e-02
 -1.45485622e+00 -6.35746051e-02  7.93474764e-02 -1.79197837e-04
  1.13772491e-01 -8.35539956e-03 -1.31363257e-02 -1.36407417e-02
  1.65247428e+00 -9.50754976e-02 -9.32235271e-03 -6.57137045e-03
  6.64286572e-02 -1.23185869e-03 -8.18392384e-03 -1.55039385e+00
 -1.53964410e+00 -1.23861839e-02 -1.49478001e+00 -5.06160083e-01
  2.86260379e-02 -2.93280606e-03 -2.25079844e-01 -1.88393618e-02
 -2.59496550e-03  1.40580501e-02  2.07640428e+00  2.51294897e-02
 -3.53605351e-01 -1.53359079e+00  3.08027660e-03 -3.81119670e-04
  2.11978665e-03] in 1 evals
ancilla op commutes?  True
ancilla op commutes?  True
ancilla op commutes?  True
ancilla op commutes?  False
ancilla op commutes?  False
ancilla op commutes?  False
#INFO: **** input file is /Users/mario/Documents/GitHub/VATech/quantum_database/second_quantization/circuits/hardware_efficient/gather_beh2_results_ry_linear.py ****
from qiskit                                        import *
from qiskit.chemistry.drivers                      import UnitsType,HFMethodType
from qiskit.chemistry.core                         import Hamiltonian,TransformationType,QubitMappingType
from qiskit.chemistry.components.initial_states    import HartreeFock
from qiskit.chemistry.components.variational_forms import UCCSD
from qiskit.aqua.components.optimizers             import L_BFGS_B,COBYLA,CG
from qiskit.aqua.algorithms                        import VQE
from qiskit.aqua                                   import QuantumInstance,aqua_globals
from qiskit.circuit.library                        import EfficientSU2

import logging
from   qiskit.chemistry import set_qiskit_chemistry_logging
from   qiskit.aqua      import set_qiskit_aqua_logging
set_qiskit_chemistry_logging(logging.INFO)
set_qiskit_aqua_logging(logging.INFO)

import sys
import numpy as np
sys.path.append('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/subroutines')
sys.path.append('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/subroutines/pyscfd')
from pyscfdriver import *
from utils       import *

def print_circuit(fname,circuit):
    outf = open(fname,'w')
    for gate in circuit:
        gate_name = gate[0].name
        qubits = [q.index for q in gate[1]]
        outf.write(str(gate_name)+' | '+' '.join([str(x) for x in qubits])+' | '+' '.join([str(x._symbol_expr) for x in gate[0].params])+'\n')
    outf.close()

def print_results(fname,res_vqe,res_ee,dN=0):
    outf = open(fname,'w')
    outf.write('%.12f %.12f \n' % (res_vqe[0],np.real(res_ee[0])))
    outf.write('%.12f %.12f \n' % (res_vqe[1]+dN,np.real(res_ee[1]+dN)))
    outf.write('%.12f %.12f \n' % (res_vqe[2],np.real(res_ee[2])))
    outf.write('%.12f %.12f \n' % (res_vqe[3],np.real(res_ee[3])))
    outf.close()

dist_list = [0.7] #2.1,2.3,2.5,2.7,2.9,3.1,3.3,3.5] #[0.7,0.9,1.1,1.3,1.5,1.7,1.9,2.1,2.3,2.5,2.7,2.9,3.1,3.3,3.5,3.7,3.9,4.1,4.3,4.5]
depth_list = [1,2,3,4,5,6,7,8]

for depth in depth_list:
  for dist in dist_list:

    outfile = open('pes.txt','w')
    
    outfile.write("Bond distance: {}\n".format(dist))
    rho = np.load('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/SCF_FCI/beh2/res_fourth_pass.npy',allow_pickle=True).item()
    rho = rho[str(dist)]['rho_scf']
    driver    = PySCFDriver(atom="Be 0.0000 0.0000 0.0000; H 0.0000 0.0000 -{0}; H 0.0000 0.0000 {0}".format(dist),
                            unit=UnitsType.ANGSTROM,charge=0,spin=0,basis='sto-6g',hf_method=HFMethodType.RHF,symgroup='dooh',
                            outfile=outfile,irrep_nelec={'A1g':4,'A1u':2},rho=rho)
    molecule  = driver.run()
    outfile.write("\nHartree-Fock energy %f \n" % (molecule.hf_energy))
    
    core      = Hamiltonian(transformation=TransformationType.FULL,qubit_mapping=QubitMappingType.PARITY,two_qubit_reduction=True,freeze_core=False,orbital_reduction=[0])
    H_op,A_op = core.run(molecule)
    
    z2syms,sqlist           = None,None
    H_op,A_op,z2syms,sqlist = taper(molecule,core,H_op,A_op,outfile)
    
    init_state = HartreeFock(num_orbitals=core._molecule_info['num_orbitals'],qubit_mapping=core._qubit_mapping,two_qubit_reduction=core._two_qubit_reduction,num_particles=core._molecule_info['num_particles'],sq_list=sqlist)
    init_state.construct_circuit()
    x_hf = init_state._bitstr
 
    outfile.write("\nHartree-Fock energy %f \n" % (molecule.hf_energy))
    outfile.write("\nHartree-Fock circuit\n")
    outfile.write(str(init_state.construct_circuit().draw())+"\n")

    par = np.loadtxt('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/Ry_linear_DEPTH_%d/beh2/R_%s/output_parameters.txt' % (depth,str(dist)))
    var_form  = EfficientSU2(num_qubits=H_op.num_qubits,reps=depth,entanglement='linear',su2_gates=['ry'],initial_state=init_state)
    circuit = var_form.bind_parameters(par)

    optimizer = COBYLA(maxiter=0)
    algo      = VQE(H_op,var_form,optimizer,aux_operators=A_op,include_custom=True,initial_point=par)
    backend          = Aer.get_backend('statevector_simulator')
    quantum_instance = QuantumInstance(backend=backend)
    algo_result      = algo.run(quantum_instance)
    
    # -----------------------------------------------------------------------------------------------------------------------
    
    p1 = algo._ret['opt_params']
    res_vqe,res_ee = get_results(H_op,A_op,molecule,core,algo_result,outfile)
    print_results('ry_linear_%d/beh2_%s_results.txt' % (depth,str(dist)),res_vqe,res_ee,dN=2)

    circuit = var_form.bind_parameters(p1)
    print_circuit('ry_linear_%d/beh2_%s_circuit.txt' % (depth,str(dist)),circuit)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Tue Apr 19 15:28:15 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 3
[INPUT] num. electrons = 6
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry Dooh subgroup None
[INPUT] Mole.unit = Angstrom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000  -0.700000000000 AA    0.000000000000   0.000000000000  -1.322808287196 Bohr
[INPUT]  3 H      0.000000000000   0.000000000000   0.700000000000 AA    0.000000000000   0.000000000000   1.322808287196 Bohr

nuclear repulsion = 6.42572327545714
point group symmetry = Dooh
num. orbitals of irrep A1g = 3
num. orbitals of irrep A1u = 2
num. orbitals of irrep E1uy = 1
num. orbitals of irrep E1ux = 1
number of shells = 5
number of NR pGTOs = 42
number of NR cGTOs = 7
basis = sto-6g
ecp = {}
CPU time:        70.03

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 6 electrons in irreps ['A1g', 'A1u']
    0 free electrons in irreps E1uy E1ux




******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp_lqoljrc
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp_lqoljrc
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (A1g) = -0.533375259176049  LUMO (E1ux) = 0.15912932089226
Initial guess E= -15.0164889300848  |g|= 1.08145e-12
macro= 0  E= -15.0164889300848  delta_E= -1.06581e-14  |g|= 1.08145e-12  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-15.0164889300848  |g|= 1.08145e-12  total 2 KF 4 JK
converged SCF energy = -15.0164889300848
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/chemistry_operator.py:170: DeprecationWarning: The qiskit.chemistry.chemistry_operator.MolecularChemistryResult object is deprecated as of 0.8.0 and will be removed no sooner than 3 months after the release. You should use qiskit.chemistry.algorithms.ground_state_solvers.FermionicGroundStateResult instead.
  super().__init__(a_dict)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:381: DeprecationWarning: The qiskit.chemistry.chemistry_operator.MolecularGroundStateResult object is deprecated as of 0.8.0 and will be removed no sooner than 3 months after the release. You should use qiskit.chemistry.algorithms.ground_state_solvers.FermionicGroundStateResult instead.
  mgsr = MolecularGroundStateResult()
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:91: DeprecationWarning: The ChemistryOperator is deprecated as of Qiskit Aqua 0.8.0 and will be removed no earlier than 3 months after the release date. Instead, the FermionicTransformation can be used to transform QMolecules and construct ground state result objects.
  super().__init__()
2022-04-19 15:28:15,589:qiskit.chemistry.core.hamiltonian:INFO: Configured orbital reduction list: [0]
2022-04-19 15:28:15,589:qiskit.chemistry.core.hamiltonian:INFO: Combined orbital reduction list: [0]
2022-04-19 15:28:15,589:qiskit.chemistry.core.hamiltonian:INFO:   converting to spin orbital reduction list: [0 7]
2022-04-19 15:28:15,589:qiskit.chemistry.core.hamiltonian:INFO:     => freezing spin orbitals: [0 7]
2022-04-19 15:28:15,589:qiskit.chemistry.core.hamiltonian:INFO:     => removing spin orbitals: [] (indexes accounting for freeze [])
2022-04-19 15:28:15,652:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital energy shift: -16.617170358057287
2022-04-19 15:28:18,259:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital x dipole shift: 0.0
2022-04-19 15:28:18,322:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital y dipole shift: 0.0
2022-04-19 15:28:18,387:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital z dipole shift: 0.0
2022-04-19 15:28:18,470:qiskit.chemistry.core.hamiltonian:INFO: Molecule num electrons: [3, 3], remaining for processing: [2, 2]
2022-04-19 15:28:18,471:qiskit.chemistry.core.hamiltonian:INFO: Molecule num spin orbitals: 14, remaining for processing: 12
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:417: DeprecationWarning: Processing a dictionary result is deprecated, pass a (minimum) eigensolver result now.
  ' pass a (minimum) eigensolver result now.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:134: DeprecationWarning: energy deprecated, use eigenvalues property.
  warnings.warn('energy deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:134: DeprecationWarning: energy deprecated, use eigenvalues property.
  warnings.warn('energy deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:149: DeprecationWarning: aux_ops deprecated, use aux_operator_eigenvalues property.
  DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:138: DeprecationWarning: energies deprecated, use eigenvalues property.
  warnings.warn('energies deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:138: DeprecationWarning: energies deprecated, use eigenvalues property.
  warnings.warn('energies deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:149: DeprecationWarning: aux_ops deprecated, use aux_operator_eigenvalues property.
  DeprecationWarning)
2022-04-19 15:28:23,596:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: 
==================== Setting of VQE ============================
Algorithm: VQE
-- max_evals_grouped: 1
-- circuit_sampler: None
-- expectation: None
-- user_valid_expectation: False
-- include_custom: True
-- expect_op: None
-- operator: SummedOp([
  -0.6192771499994366 * IIIIIII,
  -0.22730651630951085 * ZIIIZZI,
  -0.03321163049383873 * IIIIIXX,
  0.03321163049383873 * ZIIIZXX,
  -0.2253147080776801 * ZZIZZZZ,
  0.05679163446780257 * ZIIIZIX,
  -0.05679163446780257 * IZIZIIX,
  -0.7258623265715671 * IIZZIII,
  -0.7258623265715669 * IZZIIII,
  -0.6030929064553017 * IIIIIZZ,
  -1.157696674452874 * IIIIIZI,
  -0.22730651630951093 * IIIIZII,
  -0.033211630493838705 * XXXXXII,
  -0.033211630493838705 * YXXXYII,
  -0.22531470807768003 * IIIZZII,
  0.0567916344678026 * ZXXXZII,
  0.0567916344678026 * IYXYIII,
  -0.6030929064553021 * ZZIIIII,
  -1.1576966744528747 * ZIIIIII,
  0.08334297239187934 * IZIZIIZ,
  0.0005769335647369502 * IIIIIZX,
  -0.0005769335647369502 * ZZIZZZX,
  0.20146330378884153 * ZIZZZZI,
  0.20146330378884153 * ZZZIZZI,
  0.09225589239004754 * ZIIIZIZ,
  0.2070609674991095 * ZIIIZII,
  -0.005836451951820793 * ZZIZZYY,
  0.005836451951820793 * IZIZIYY,
  -0.01871300096477631 * IZIZIXI,
  0.01950649403086242 * IZIZIXZ,
  -0.0007934930660861022 * ZIIIZXI,
  -0.0007934930660861022 * ZZIZZXI,
  0.01950649403086242 * IIIIIXZ,
  -0.01871300096477631 * IIIIIXI,
  0.016414969451734544 * IIZZIXX,
  -0.016414969451734544 * ZIZZZXX,
  0.016414969451734544 * IZZIIXX,
  -0.016414969451734544 * ZZZIZXX,
  0.004059418345102082 * IIIIIYY,
  -0.004059418345102082 * ZIIIZYY,
  0.2574950295951019 * ZIIIIZI,
  -0.005096331270005864 * IIIIZXX,
  0.005096331270005864 * ZIIIIXX,
  -0.039900548641951715 * IZIZXIZ,
  0.039900548641951715 * IZIIXIZ,
  0.039900548641951715 * IIIIXII,
  -0.039900548641951715 * IIIZXII,
  0.02761983228392986 * IIIIXZX,
  -0.02761983228392986 * IIIZXZX,
  0.02761983228392986 * ZIIIYZY,
  -0.02761983228392986 * ZIIZYZY,
  0.005144111872843905 * IZZYYIZ,
  0.005144111872843905 * IZIXXIZ,
  0.005144111872843905 * ZZIXXZZ,
  0.005144111872843905 * ZZZYYZZ,
  0.005144111872843905 * IIYXYIZ,
  0.005144111872843905 * IZXXXIZ,
  0.005144111872843905 * ZZXXXZZ,
  0.005144111872843905 * ZIYXYZZ,
  -0.02761983228392986 * IXXYYIZ,
  0.02761983228392986 * ZYXYXIZ,
  0.02761983228392986 * IYXXYII,
  0.02761983228392986 * ZXXXXII,
  0.024829363427025124 * IYXXYZX,
  0.024829363427025124 * ZXXXXZX,
  -0.024829363427025124 * ZYXXXZY,
  0.024829363427025124 * IXXXYZY,
  0.005096331270005864 * XXXXXZI,
  0.005096331270005864 * YXXXYZI,
  0.040309126010204054 * YXXXYXX,
  0.040309126010204054 * XXXXXXX,
  0.12324352103383106 * ZIIZIZI,
  0.020172309693380137 * IIIZZXX,
  -0.020172309693380137 * ZIIZIXX,
  -0.02704289871919291 * ZYXYZZI,
  -0.02704289871919291 * IXXXIZI,
  -0.0176251544088086 * IYXYIXX,
  -0.0176251544088086 * ZXXXZXX,
  0.0176251544088086 * ZYXYZXX,
  0.0176251544088086 * IXXXIXX,
  0.014335857741559347 * YYXXIIZ,
  -0.014335857741559347 * XYXYZIZ,
  -0.014335857741559347 * YXXYIII,
  -0.014335857741559347 * XXXXZII,
  -0.016831661342722494 * YXXYIZX,
  -0.016831661342722494 * XXXXZZX,
  0.016831661342722494 * XXXYZZY,
  -0.016831661342722494 * YXXXIZY,
  -0.0026771586587551912 * YYXIIIZ,
  0.0026771586587551912 * XYYZIIZ,
  0.0026771586587551912 * XYYZZZZ,
  -0.0026771586587551912 * YYXIZZZ,
  -0.0026771586587551912 * YYIIIIZ,
  -0.0026771586587551912 * XXZIIIZ,
  -0.0026771586587551912 * XXZIZZZ,
  -0.0026771586587551912 * YYIIZZZ,
  0.11708525581707264 * IZIIZZI,
  0.025353540310681544 * ZZIIIXX,
  -0.025353540310681544 * IZIIZXX,
  0.03633815537358491 * XZIZIIZ,
  -0.03633815537358491 * XIIZIIZ,
  -0.03633815537358491 * XIIIIII,
  0.03633815537358491 * XZIIIII,
  -0.029412958655783628 * XIIIIZX,
  0.029412958655783628 * XZIIIZX,
  -0.029412958655783628 * YIIIZZY,
  0.029412958655783628 * YZIIZZY,
  0.24737009350931358 * IIIIZZI,
  0.1972129542494357 * ZZZIZZZ,
  0.1972129542494357 * ZIZZZZZ,
  0.1890750782620393 * ZZIZZII,
  0.10213539151593913 * ZZIZZIZ,
  -0.02146329537529415 * ZIZZZIX,
  0.02146329537529415 * IZZIIIX,
  -0.02146329537529415 * ZZZIZIX,
  0.02146329537529415 * IIZZIIX,
  -0.00989812276346958 * ZIIIZZX,
  0.00989812276346958 * IZIZIZX,
  0.12324352103383106 * ZZIZIZZ,
  -0.027042898719192913 * ZIIIIIX,
  0.027042898719192913 * IZIZZIX,
  0.014335857741559347 * ZIIIYYX,
  -0.014335857741559347 * ZIIZYYX,
  -0.014335857741559347 * IZIZXYY,
  0.014335857741559347 * IZIIXYY,
  -0.01683166134272249 * ZYXXXYX,
  0.01683166134272249 * IXXXYYX,
  -0.01683166134272249 * IXXYYYY,
  0.01683166134272249 * ZYXYXYY,
  0.020172309693380137 * XYXYXZZ,
  0.020172309693380137 * YYXYYZZ,
  0.0176251544088086 * XXXXXIX,
  0.0176251544088086 * YXXXYIX,
  -0.0176251544088086 * YYXYYIX,
  -0.0176251544088086 * XYXYXIX,
  0.2330296305961526 * ZZIIIZZ,
  0.001671692012152396 * ZIIZIIX,
  -0.001671692012152396 * IZIIZIX,
  -0.016279945780510962 * ZZZXZZZ,
  0.016279945780510962 * ZZIXIZZ,
  0.016279945780510962 * IIIXIII,
  -0.016279945780510962 * IIZXZII,
  0.016279945780510962 * ZIYYZZZ,
  0.016279945780510962 * ZZXXIZZ,
  0.016279945780510962 * IIXXIII,
  0.016279945780510962 * IZYYZII,
  -0.001671692012152396 * ZXXXZZZ,
  -0.001671692012152396 * IYXYIZZ,
  0.035730306195109925 * ZYXYZIX,
  0.035730306195109925 * IXXXIIX,
  0.013761477078992203 * XXXYZYX,
  -0.013761477078992203 * YXXXIYX,
  0.013761477078992203 * YYXXIYY,
  -0.013761477078992203 * XYXYZYY,
  -0.010270084289159999 * ZXXIZZZ,
  -0.010270084289159999 * IYYZZZZ,
  -0.010270084289159999 * IYYIIII,
  -0.010270084289159999 * ZXXZIII,
  -0.010270084289159999 * ZXIIZZZ,
  0.010270084289159999 * IXZIZZZ,
  0.010270084289159999 * IXZZIII,
  -0.010270084289159999 * ZXIZIII,
  0.22480538445714923 * IIIZZZZ,
  -0.01886307133245532 * YIIIZYX,
  0.01886307133245532 * YZIIZYX,
  0.01886307133245532 * XZIZIYY,
  -0.01886307133245532 * XIIZIYY,
  0.11589686859493135 * IZIZZZZ,
  -0.0287611940959249 * IIIIZIX,
  0.0287611940959249 * ZZIZIIX,
  0.38947179486833605 * IZIZIII,
  0.18647570075538616 * IIZZIZZ,
  0.1883020217766596 * IIZZIZI,
  0.20146330378884153 * IIZZZII,
  -0.0026771586587551912 * IZIXYXY,
  0.0026771586587551912 * IZZYXXY,
  -0.0026771586587551912 * IZZYYYY,
  -0.0026771586587551912 * IZIXXYY,
  -0.016414969451734544 * YXYYYII,
  -0.016414969451734544 * XXYYXII,
  0.1972129542494357 * IIZIZII,
  0.010270084289159999 * IZIYIZY,
  -0.010270084289159999 * IZZYZZY,
  0.010270084289159999 * IZZXIIX,
  -0.010270084289159999 * IZIXZIX,
  -0.02146329537529415 * IYYXIII,
  0.02146329537529415 * ZXYYZII,
  -0.012128953755816447 * IZXZIII,
  0.012128953755816447 * IIXIIII,
  0.009509761069347353 * IXYZIZY,
  -0.009509761069347353 * ZYXIIZY,
  0.009509761069347353 * IXXIIIX,
  0.009509761069347353 * ZYYZIIX,
  -0.0025708476077440662 * YYYZIXY,
  -0.0025708476077440662 * XYXIIXY,
  0.0025708476077440662 * YYXIIYY,
  -0.0025708476077440662 * XYYZIYY,
  0.18647570075538616 * ZZZZIII,
  0.1883020217766596 * ZIZZIII,
  0.18647570075538616 * IZZIIZZ,
  0.1883020217766596 * IZZIIZI,
  0.20146330378884153 * IZZIZII,
  -0.0026771586587551912 * IZXXYXY,
  0.0026771586587551912 * IIYXXXY,
  -0.0026771586587551912 * IIYXYYY,
  -0.0026771586587551912 * IZXXXYY,
  -0.016414969451734544 * YYYXYII,
  -0.016414969451734544 * XYYXXII,
  0.1972129542494357 * IZZZZII,
  0.010270084289159999 * IZXYIZY,
  -0.010270084289159999 * IIYXZZY,
  -0.010270084289159999 * IIYYIIX,
  -0.010270084289159999 * IZXXZIX,
  -0.02146329537529415 * IXYYIII,
  0.02146329537529415 * ZYYXZII,
  0.009509761069347353 * IYZIIZY,
  -0.009509761069347353 * ZYIIIZY,
  0.009509761069347353 * IXIIIIX,
  -0.009509761069347353 * ZXZIIIX,
  0.0025708476077440662 * YXZIIXY,
  -0.0025708476077440662 * XYIIIXY,
  0.0025708476077440662 * YYIIIYY,
  0.0025708476077440662 * XXZIIYY,
  0.18647570075538616 * ZIZIIII,
  0.1883020217766596 * ZZZIIII,
  0.07688554243850795 * IIIIIIZ,
  0.11708525581707264 * IIIIZZZ,
  0.03633815537358492 * IIIIXXZ,
  -0.03633815537358492 * IIIZXXZ,
  -0.03633815537358492 * IIIIXXI,
  0.03633815537358492 * IIIZXXI,
  0.02941295865578362 * IYXXYXZ,
  0.02941295865578362 * ZXXXXXZ,
  -0.02941295865578362 * IYXXYXI,
  -0.02941295865578362 * ZXXXXXI,
  0.025353540310681544 * YXXXYZZ,
  0.025353540310681544 * XXXXXZZ,
  -0.018863071332455322 * YXXYIXZ,
  -0.018863071332455322 * XXXXZXZ,
  0.018863071332455322 * YXXYIXI,
  0.018863071332455322 * XXXXZXI,
  -0.04011876971168971 * XIIIIXZ,
  0.04011876971168971 * XZIIIXZ,
  0.04011876971168971 * XIIIIXI,
  -0.04011876971168971 * XZIIIXI,
  0.11700431215019767 * ZIIIIZZ,
  0.11589686859493135 * IIIZZZI,
  -0.0287611940959249 * IYXYIZI,
  -0.0287611940959249 * ZXXXZZI,
  0.11700431215019767 * ZZIIIZI,
  0.08334297239187934 * IIIZIII,
  0.0005769335647369502 * ZXXXIII,
  0.0005769335647369502 * IYXYZII,
  0.09225589239004754 * ZZIIZII,
  -0.005836451951820793 * XXXYYII,
  0.005836451951820793 * YXXYXII,
  -0.01871300096477631 * XZIZXII,
  0.01950649403086242 * XIIZXII,
  0.0007934930660861022 * YIIIYII,
  0.0007934930660861022 * YZIZYII,
  0.01950649403086242 * XZIIXII,
  -0.01871300096477631 * XIIIXII,
  0.004059418345102082 * YYXXXII,
  -0.004059418345102082 * XYXXYII,
  0.10213539151593913 * ZIIZZII,
  -0.00989812276346958 * IXXXZII,
  -0.00989812276346958 * ZYXYIII,
  0.07688554243850795 * IZIIIII
])
-- quantum_instance: None
-- optimizer: <qiskit.aqua.components.optimizers.cobyla.COBYLA object at 0x7fd548309150>
-- gradient: None
-- cost_fn: <bound method VQE._energy_evaluation of <qiskit.aqua.algorithms.minimum_eigen_solvers.vqe.VQE object at 0x7fd508133590>>
-- initial_point: [-8.79706846e-02  6.80861122e-02 -2.07187091e-02 -2.48294866e-02
  4.93617556e-03  1.43816292e-03 -4.24217689e-03 -6.24074932e-01
  1.79873961e+00 -2.77228432e-02  9.95043575e-02  6.75127628e-03
 -2.82036944e-03  2.74915126e-03  3.91965939e-03  8.32671503e-01
  1.45726997e+00 -8.53281718e-02 -1.36502087e-01  2.58001679e-02
  4.81321064e-03  4.11730407e-03 -1.74521515e-01 -1.80625001e-01
  4.40089901e-02  1.59990494e+00 -1.41621188e-01 -2.46708740e-03
 -3.89181019e-03  6.71044358e-05 -9.94278352e-03  3.44965743e-02
 -5.47531126e-02 -2.33476660e-02 -4.03973099e-02  2.45371780e-03
 -6.52767390e-03  4.82132162e-04  2.06035211e-01 -1.79718340e+00
  1.56632409e+00  5.52594918e-01 -5.11107518e-01 -2.62581169e-03
 -3.50236182e-02 -2.83903720e-03 -2.00659060e-01  1.50469805e+00
  1.43567209e-01 -2.98664503e-02 -1.08248746e+00 -6.77020882e-01
  1.57592295e+00 -1.58703371e-01  5.21983775e-04 -3.94944893e-02]
-- var_form:      ┌──────────┐            ┌──────────┐                        ┌───────────┐»
q_0: ┤ RY(θ[0]) ├─────■──────┤ RY(θ[7]) ├─────────────────■──────┤ RY(θ[14]) ├»
     ├──────────┤   ┌─┴─┐    └──────────┘┌──────────┐   ┌─┴─┐    └───────────┘»
q_1: ┤ RY(θ[1]) ├───┤ X ├─────────■──────┤ RY(θ[8]) ├───┤ X ├──────────■──────»
     └──┬───┬───┘┌──┴───┴───┐   ┌─┴─┐    └──────────┘┌──┴───┴───┐    ┌─┴─┐    »
q_2: ───┤ X ├────┤ RY(θ[2]) ├───┤ X ├─────────■──────┤ RY(θ[9]) ├────┤ X ├────»
     ┌──┴───┴───┐└──────────┘   └───┘       ┌─┴─┐    └──────────┘┌───┴───┴───┐»
q_3: ┤ RY(θ[3]) ├───────────────────────────┤ X ├─────────■──────┤ RY(θ[10]) ├»
     ├──────────┤                           └───┘       ┌─┴─┐    └───────────┘»
q_4: ┤ RY(θ[4]) ├───────────────────────────────────────┤ X ├──────────■──────»
     ├──────────┤                                       └───┘        ┌─┴─┐    »
q_5: ┤ RY(θ[5]) ├────────────────────────────────────────────────────┤ X ├────»
     ├──────────┤                                                    └───┘    »
q_6: ┤ RY(θ[6]) ├─────────────────────────────────────────────────────────────»
     └──────────┘                                                             »
«                               ┌───────────┐                          »
«q_0: ───────────────────■──────┤ RY(θ[21]) ├───────────────────■──────»
«     ┌───────────┐    ┌─┴─┐    └───────────┘┌───────────┐    ┌─┴─┐    »
«q_1: ┤ RY(θ[15]) ├────┤ X ├──────────■──────┤ RY(θ[22]) ├────┤ X ├────»
«     └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───┴───┴───┐»
«q_2: ──────■──────┤ RY(θ[16]) ├────┤ X ├──────────■──────┤ RY(θ[23]) ├»
«         ┌─┴─┐    └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘»
«q_3: ────┤ X ├──────────■──────┤ RY(θ[17]) ├────┤ X ├──────────■──────»
«     ┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───┴───┴───┐    ┌─┴─┐    »
«q_4: ┤ RY(θ[11]) ├────┤ X ├──────────■──────┤ RY(θ[18]) ├────┤ X ├────»
«     └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───┴───┴───┐»
«q_5: ──────■──────┤ RY(θ[12]) ├────┤ X ├──────────■──────┤ RY(θ[19]) ├»
«         ┌─┴─┐    ├───────────┤    └───┘        ┌─┴─┐    ├───────────┤»
«q_6: ────┤ X ├────┤ RY(θ[13]) ├─────────────────┤ X ├────┤ RY(θ[20]) ├»
«         └───┘    └───────────┘                 └───┘    └───────────┘»
«     ┌───────────┐                          ┌───────────┐             »
«q_0: ┤ RY(θ[28]) ├───────────────────■──────┤ RY(θ[35]) ├─────────────»
«     └───────────┘┌───────────┐    ┌─┴─┐    └───────────┘┌───────────┐»
«q_1: ──────■──────┤ RY(θ[29]) ├────┤ X ├──────────■──────┤ RY(θ[36]) ├»
«         ┌─┴─┐    └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘»
«q_2: ────┤ X ├──────────■──────┤ RY(θ[30]) ├────┤ X ├──────────■──────»
«     ┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───┴───┴───┐    ┌─┴─┐    »
«q_3: ┤ RY(θ[24]) ├────┤ X ├──────────■──────┤ RY(θ[31]) ├────┤ X ├────»
«     └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───┴───┴───┐»
«q_4: ──────■──────┤ RY(θ[25]) ├────┤ X ├──────────■──────┤ RY(θ[32]) ├»
«         ┌─┴─┐    └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘»
«q_5: ────┤ X ├──────────■──────┤ RY(θ[26]) ├────┤ X ├──────────■──────»
«         └───┘        ┌─┴─┐    ├───────────┤    └───┘        ┌─┴─┐    »
«q_6: ─────────────────┤ X ├────┤ RY(θ[27]) ├─────────────────┤ X ├────»
«                      └───┘    └───────────┘                 └───┘    »
«                  ┌───────────┐                          ┌───────────┐»
«q_0: ──────■──────┤ RY(θ[42]) ├───────────────────■──────┤ RY(θ[49]) ├»
«         ┌─┴─┐    └───────────┘┌───────────┐    ┌─┴─┐    └───────────┘»
«q_1: ────┤ X ├──────────■──────┤ RY(θ[43]) ├────┤ X ├──────────■──────»
«     ┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───┴───┴───┐    ┌─┴─┐    »
«q_2: ┤ RY(θ[37]) ├────┤ X ├──────────■──────┤ RY(θ[44]) ├────┤ X ├────»
«     └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───┴───┴───┐»
«q_3: ──────■──────┤ RY(θ[38]) ├────┤ X ├──────────■──────┤ RY(θ[45]) ├»
«         ┌─┴─┐    └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘»
«q_4: ────┤ X ├──────────■──────┤ RY(θ[39]) ├────┤ X ├──────────■──────»
«     ┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───┴───┴───┐    ┌─┴─┐    »
«q_5: ┤ RY(θ[33]) ├────┤ X ├──────────■──────┤ RY(θ[40]) ├────┤ X ├────»
«     ├───────────┤    └───┘        ┌─┴─┐    ├───────────┤    └───┘    »
«q_6: ┤ RY(θ[34]) ├─────────────────┤ X ├────┤ RY(θ[41]) ├─────────────»
«     └───────────┘                 └───┘    └───────────┘             »
«                                                                      
«q_0: ─────────────────────────────────────────────────────────────────
«     ┌───────────┐                                                    
«q_1: ┤ RY(θ[50]) ├────────────────────────────────────────────────────
«     └───────────┘┌───────────┐                                       
«q_2: ──────■──────┤ RY(θ[51]) ├───────────────────────────────────────
«         ┌─┴─┐    └───────────┘┌───────────┐                          
«q_3: ────┤ X ├──────────■──────┤ RY(θ[52]) ├──────────────────────────
«     ┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───────────┐             
«q_4: ┤ RY(θ[46]) ├────┤ X ├──────────■──────┤ RY(θ[53]) ├─────────────
«     └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───────────┐
«q_5: ──────■──────┤ RY(θ[47]) ├────┤ X ├──────────■──────┤ RY(θ[54]) ├
«         ┌─┴─┐    ├───────────┤    └───┘        ┌─┴─┐    ├───────────┤
«q_6: ────┤ X ├────┤ RY(θ[48]) ├─────────────────┤ X ├────┤ RY(θ[55]) ├
«         └───┘    └───────────┘                 └───┘    └───────────┘
-- var_form_params: [ParameterVectorElement(θ[0]), ParameterVectorElement(θ[10]), ParameterVectorElement(θ[11]), ParameterVectorElement(θ[12]), ParameterVectorElement(θ[13]), ParameterVectorElement(θ[14]), ParameterVectorElement(θ[15]), ParameterVectorElement(θ[16]), ParameterVectorElement(θ[17]), ParameterVectorElement(θ[18]), ParameterVectorElement(θ[19]), ParameterVectorElement(θ[1]), ParameterVectorElement(θ[20]), ParameterVectorElement(θ[21]), ParameterVectorElement(θ[22]), ParameterVectorElement(θ[23]), ParameterVectorElement(θ[24]), ParameterVectorElement(θ[25]), ParameterVectorElement(θ[26]), ParameterVectorElement(θ[27]), ParameterVectorElement(θ[28]), ParameterVectorElement(θ[29]), ParameterVectorElement(θ[2]), ParameterVectorElement(θ[30]), ParameterVectorElement(θ[31]), ParameterVectorElement(θ[32]), ParameterVectorElement(θ[33]), ParameterVectorElement(θ[34]), ParameterVectorElement(θ[35]), ParameterVectorElement(θ[36]), ParameterVectorElement(θ[37]), ParameterVectorElement(θ[38]), ParameterVectorElement(θ[39]), ParameterVectorElement(θ[3]), ParameterVectorElement(θ[40]), ParameterVectorElement(θ[41]), ParameterVectorElement(θ[42]), ParameterVectorElement(θ[43]), ParameterVectorElement(θ[44]), ParameterVectorElement(θ[45]), ParameterVectorElement(θ[46]), ParameterVectorElement(θ[47]), ParameterVectorElement(θ[48]), ParameterVectorElement(θ[49]), ParameterVectorElement(θ[4]), ParameterVectorElement(θ[50]), ParameterVectorElement(θ[51]), ParameterVectorElement(θ[52]), ParameterVectorElement(θ[53]), ParameterVectorElement(θ[54]), ParameterVectorElement(θ[55]), ParameterVectorElement(θ[5]), ParameterVectorElement(θ[6]), ParameterVectorElement(θ[7]), ParameterVectorElement(θ[8]), ParameterVectorElement(θ[9])]
-- parameterized_circuits: None
-- ret: None
-- eval_time: None
-- callback: None
-- aux_op_nones: [False, False, False, False, False, False]
-- aux_operators: [SummedOp([PauliOp(Pauli('IIIIIII'), coeff=5.999999999999994), PauliOp(Pauli('ZIIIZZI'), coeff=-0.4999999999999996), PauliOp(Pauli('ZZIZZZZ'), coeff=-0.4999999999999996), PauliOp(Pauli('IIZZIII'), coeff=-0.9999999999999992), PauliOp(Pauli('IZZIIII'), coeff=-0.9999999999999992), PauliOp(Pauli('IIIIIZZ'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIIIZI'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIIZII'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIZZII'), coeff=-0.4999999999999996), PauliOp(Pauli('ZZIIIII'), coeff=-0.4999999999999996), PauliOp(Pauli('ZIIIIII'), coeff=-0.4999999999999996)], coeff=1.0, abelian=False), SummedOp([PauliOp(Pauli('IIIIIII'), coeff=1.4999999999999987), PauliOp(Pauli('IZIZIIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIZIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIIIZI'), coeff=-0.7499999999999992), PauliOp(Pauli('ZIIZIZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IZIIZZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIZZI'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIIIXZI'), coeff=0.1249999999999999), PauliOp(Pauli('IZIZXIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIZXZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IZIIXIZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIXII'), coeff=-0.1249999999999999), PauliOp(Pauli('ZZIZXZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZXII'), coeff=0.1249999999999999), PauliOp(Pauli('ZZIIXZZ'), coeff=0.1249999999999999), PauliOp(Pauli('IYXXXIY'), coeff=-0.1249999999999999), PauliOp(Pauli('IYXXYZX'), coeff=-0.1249999999999999), PauliOp(Pauli('ZXXXYIY'), coeff=0.1249999999999999), PauliOp(Pauli('ZXXXXZX'), coeff=-0.1249999999999999), PauliOp(Pauli('ZYXXXZY'), coeff=0.1249999999999999), PauliOp(Pauli('ZYXXYIX'), coeff=0.1249999999999999), PauliOp(Pauli('IXXXYZY'), coeff=-0.1249999999999999), PauliOp(Pauli('IXXXXIX'), coeff=0.1249999999999999), PauliOp(Pauli('YXXXXYX'), coeff=-0.2499999999999998), PauliOp(Pauli('YXXXYXX'), coeff=-0.2499999999999998), PauliOp(Pauli('XXXXYYX'), coeff=0.2499999999999998), PauliOp(Pauli('XXXXXXX'), coeff=-0.2499999999999998), PauliOp(Pauli('ZZIZZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZZIZZIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZZIZIZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZZIIIZZ'), coeff=-0.7499999999999992), PauliOp(Pauli('IIIZZZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IZIZZZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZYXXIZY'), coeff=-0.2499999999999998), PauliOp(Pauli('ZYXYZIX'), coeff=-0.2499999999999998), PauliOp(Pauli('IXXYZZY'), coeff=0.2499999999999998), PauliOp(Pauli('IXXXIIX'), coeff=-0.2499999999999998), PauliOp(Pauli('XXXXIXX'), coeff=0.1249999999999999), PauliOp(Pauli('XXXYZYX'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXYZXX'), coeff=0.1249999999999999), PauliOp(Pauli('YXXXIYX'), coeff=0.1249999999999999), PauliOp(Pauli('YYXXIYY'), coeff=-0.1249999999999999), PauliOp(Pauli('YYXYZXY'), coeff=-0.1249999999999999), PauliOp(Pauli('XYXYZYY'), coeff=0.1249999999999999), PauliOp(Pauli('XYXXIXY'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIIIZ'), coeff=0.1249999999999999), PauliOp(Pauli('IIIIZZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIIIIZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('YZIIIYZ'), coeff=-0.1249999999999999), PauliOp(Pauli('XIIIIXZ'), coeff=0.1249999999999999), PauliOp(Pauli('YIIIIYZ'), coeff=0.1249999999999999), PauliOp(Pauli('XZIIIXZ'), coeff=-0.1249999999999999), PauliOp(Pauli('XIIIIXI'), coeff=-0.1249999999999999), PauliOp(Pauli('YZIIIYI'), coeff=0.1249999999999999), PauliOp(Pauli('XZIIIXI'), coeff=0.1249999999999999), PauliOp(Pauli('YIIIIYI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZZZI'), coeff=-0.1249999999999999), PauliOp(Pauli('ZZIIIZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZIII'), coeff=0.1249999999999999), PauliOp(Pauli('ZZIIZII'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIZZII'), coeff=0.1249999999999999), PauliOp(Pauli('IZIIIII'), coeff=0.1249999999999999)], coeff=1.0, abelian=False), SummedOp([PauliOp(Pauli('ZIIIZZI'), coeff=-0.2499999999999998), PauliOp(Pauli('ZZIZZZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIIZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIIZI'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIZII'), coeff=0.2499999999999998), PauliOp(Pauli('IIIZZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZZIIIII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIIIII'), coeff=0.2499999999999998)], coeff=1.0, abelian=False), PauliOp(Pauli('IIIIIII'), coeff=0.0), PauliOp(Pauli('IIIIIII'), coeff=0.0), PauliOp(Pauli('IIIIIII'), coeff=0.0)]
-- eval_count: 0
===============================================================
NLocal: EfficientSU2
-- base_name: nlocal
-- data: [(<qiskit.circuit.library.standard_gates.x.XGate object at 0x7fd500433b50>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd568e62310>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd500647dd0>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569721e10>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482bf8d0>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd57c902f10>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a3230d0>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a323190>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a31a610>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a323090>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a323810>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a323310>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a323210>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a323b90>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31a410>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31ab90>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31a990>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31abd0>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a323410>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a3234d0>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a3237d0>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a31a750>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a323950>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a323e10>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a323ed0>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a323890>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a323d10>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31ad90>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31a150>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a323350>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a323690>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a323dd0>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a323ad0>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a323250>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a323490>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a323d90>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5283022d0>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd528302b10>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a4df050>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a4dfbd0>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd57b21f5d0>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31a190>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31ae10>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31a950>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4dfa50>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4dfb10>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4df850>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a31ac50>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a4df7d0>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a4df2d0>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a4df310>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a4df490>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a4df710>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a323f90>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a323bd0>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4df650>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4dfe50>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4df810>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4dfc10>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4dfa90>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd57ae33d50>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a4df4d0>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a4dfed0>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a4df390>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a4df590>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a4df550>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd500433cd0>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4df090>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4dfe90>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4df6d0>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4df750>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4dfd90>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4dff90>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a4df510>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a31af50>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5006d6e90>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5006d6fd0>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5006d6450>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5282d4210>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd57b0e1b50>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31ab50>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31a710>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd57b21f310>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5283870d0>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd57becc7d0>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd57b05a410>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a4df450>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a323650>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd558744390>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd558744790>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd558744f10>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5587196d0>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd500630590>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31aed0>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4df290>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4dfad0>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4df410>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd558719710>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd558719b50>, [Qubit(QuantumRegister(7, 'q'), 6)], [])]
-- qregs: [QuantumRegister(7, 'q')]
-- qubits: [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)]
-- qubit_set: {Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 6)}
-- parameter_table: ParameterTable({ParameterVectorElement(θ[0]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd568e62310>, 0)], ParameterVectorElement(θ[1]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd500647dd0>, 0)], ParameterVectorElement(θ[2]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd569721e10>, 0)], ParameterVectorElement(θ[3]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482bf8d0>, 0)], ParameterVectorElement(θ[4]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd57c902f10>, 0)], ParameterVectorElement(θ[5]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a3230d0>, 0)], ParameterVectorElement(θ[6]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a323190>, 0)], ParameterVectorElement(θ[7]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31a410>, 0)], ParameterVectorElement(θ[8]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31ab90>, 0)], ParameterVectorElement(θ[9]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31a990>, 0)], ParameterVectorElement(θ[10]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31abd0>, 0)], ParameterVectorElement(θ[11]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a323410>, 0)], ParameterVectorElement(θ[12]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a3234d0>, 0)], ParameterVectorElement(θ[13]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a3237d0>, 0)], ParameterVectorElement(θ[14]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31ad90>, 0)], ParameterVectorElement(θ[15]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31a150>, 0)], ParameterVectorElement(θ[16]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a323350>, 0)], ParameterVectorElement(θ[17]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a323690>, 0)], ParameterVectorElement(θ[18]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a323dd0>, 0)], ParameterVectorElement(θ[19]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a323ad0>, 0)], ParameterVectorElement(θ[20]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a323250>, 0)], ParameterVectorElement(θ[21]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd57b21f5d0>, 0)], ParameterVectorElement(θ[22]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31a190>, 0)], ParameterVectorElement(θ[23]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31ae10>, 0)], ParameterVectorElement(θ[24]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31a950>, 0)], ParameterVectorElement(θ[25]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4dfa50>, 0)], ParameterVectorElement(θ[26]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4dfb10>, 0)], ParameterVectorElement(θ[27]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4df850>, 0)], ParameterVectorElement(θ[28]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a323f90>, 0)], ParameterVectorElement(θ[29]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a323bd0>, 0)], ParameterVectorElement(θ[30]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4df650>, 0)], ParameterVectorElement(θ[31]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4dfe50>, 0)], ParameterVectorElement(θ[32]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4df810>, 0)], ParameterVectorElement(θ[33]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4dfc10>, 0)], ParameterVectorElement(θ[34]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4dfa90>, 0)], ParameterVectorElement(θ[35]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd500433cd0>, 0)], ParameterVectorElement(θ[36]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4df090>, 0)], ParameterVectorElement(θ[37]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4dfe90>, 0)], ParameterVectorElement(θ[38]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4df6d0>, 0)], ParameterVectorElement(θ[39]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4df750>, 0)], ParameterVectorElement(θ[40]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4dfd90>, 0)], ParameterVectorElement(θ[41]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4dff90>, 0)], ParameterVectorElement(θ[42]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd57b0e1b50>, 0)], ParameterVectorElement(θ[43]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31ab50>, 0)], ParameterVectorElement(θ[44]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31a710>, 0)], ParameterVectorElement(θ[45]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd57b21f310>, 0)], ParameterVectorElement(θ[46]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5283870d0>, 0)], ParameterVectorElement(θ[47]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd57becc7d0>, 0)], ParameterVectorElement(θ[48]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd57b05a410>, 0)], ParameterVectorElement(θ[49]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd500630590>, 0)], ParameterVectorElement(θ[50]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a31aed0>, 0)], ParameterVectorElement(θ[51]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4df290>, 0)], ParameterVectorElement(θ[52]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4dfad0>, 0)], ParameterVectorElement(θ[53]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a4df410>, 0)], ParameterVectorElement(θ[54]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd558719710>, 0)], ParameterVectorElement(θ[55]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd558719b50>, 0)]})
-- clbits: []
-- clbit_set: set()
-- ancillas: []
-- calibrations: defaultdict(<class 'dict'>, {})
-- parameters: [ParameterVectorElement(θ[0]), ParameterVectorElement(θ[1]), ParameterVectorElement(θ[2]), ParameterVectorElement(θ[3]), ParameterVectorElement(θ[4]), ParameterVectorElement(θ[5]), ParameterVectorElement(θ[6]), ParameterVectorElement(θ[7]), ParameterVectorElement(θ[8]), ParameterVectorElement(θ[9]), ParameterVectorElement(θ[10]), ParameterVectorElement(θ[11]), ParameterVectorElement(θ[12]), ParameterVectorElement(θ[13]), ParameterVectorElement(θ[14]), ParameterVectorElement(θ[15]), ParameterVectorElement(θ[16]), ParameterVectorElement(θ[17]), ParameterVectorElement(θ[18]), ParameterVectorElement(θ[19]), ParameterVectorElement(θ[20]), ParameterVectorElement(θ[21]), ParameterVectorElement(θ[22]), ParameterVectorElement(θ[23]), ParameterVectorElement(θ[24]), ParameterVectorElement(θ[25]), ParameterVectorElement(θ[26]), ParameterVectorElement(θ[27]), ParameterVectorElement(θ[28]), ParameterVectorElement(θ[29]), ParameterVectorElement(θ[30]), ParameterVectorElement(θ[31]), ParameterVectorElement(θ[32]), ParameterVectorElement(θ[33]), ParameterVectorElement(θ[34]), ParameterVectorElement(θ[35]), ParameterVectorElement(θ[36]), ParameterVectorElement(θ[37]), ParameterVectorElement(θ[38]), ParameterVectorElement(θ[39]), ParameterVectorElement(θ[40]), ParameterVectorElement(θ[41]), ParameterVectorElement(θ[42]), ParameterVectorElement(θ[43]), ParameterVectorElement(θ[44]), ParameterVectorElement(θ[45]), ParameterVectorElement(θ[46]), ParameterVectorElement(θ[47]), ParameterVectorElement(θ[48]), ParameterVectorElement(θ[49]), ParameterVectorElement(θ[50]), ParameterVectorElement(θ[51]), ParameterVectorElement(θ[52]), ParameterVectorElement(θ[53]), ParameterVectorElement(θ[54]), ParameterVectorElement(θ[55])]
-- layout: None
-- global_phase: 0
-- metadata: None
-- cregs: []
-- num_qubits: 7
-- insert_barriers: False
-- reps: 7
-- entanglement_blocks: [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7fd500433c10>]
-- rotation_blocks: [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7fd56a31a690>]
-- prepended_blocks: []
-- prepended_entanglement: []
-- appended_blocks: []
-- appended_entanglement: []
-- entanglement: linear
-- entangler_maps: None
-- ordered_parameters: θ, ['θ[0]', 'θ[1]', 'θ[2]', 'θ[3]', 'θ[4]', 'θ[5]', 'θ[6]', 'θ[7]', 'θ[8]', 'θ[9]', 'θ[10]', 'θ[11]', 'θ[12]', 'θ[13]', 'θ[14]', 'θ[15]', 'θ[16]', 'θ[17]', 'θ[18]', 'θ[19]', 'θ[20]', 'θ[21]', 'θ[22]', 'θ[23]', 'θ[24]', 'θ[25]', 'θ[26]', 'θ[27]', 'θ[28]', 'θ[29]', 'θ[30]', 'θ[31]', 'θ[32]', 'θ[33]', 'θ[34]', 'θ[35]', 'θ[36]', 'θ[37]', 'θ[38]', 'θ[39]', 'θ[40]', 'θ[41]', 'θ[42]', 'θ[43]', 'θ[44]', 'θ[45]', 'θ[46]', 'θ[47]', 'θ[48]', 'θ[49]', 'θ[50]', 'θ[51]', 'θ[52]', 'θ[53]', 'θ[54]', 'θ[55]']
-- overwrite_block_parameters: True
-- skip_final_rotation_layer: False
-- skip_unentangled_qubits: False
-- initial_state: <qiskit.chemistry.components.initial_states.hartree_fock.HartreeFock object at 0x7fd5482ba110>
-- initial_state_circuit:           
q_0: ─────
          
q_1: ─────
     ┌───┐
q_2: ┤ X ├
     └───┘
q_3: ─────
          
q_4: ─────
          
q_5: ─────
          
q_6: ─────
          
-- bounds: None
===============================================================
Optimizer: COBYLA
-- gradient_support_level: 1
-- bounds_support_level: 1
-- initial_point_support_level: 3
-- options: {'maxiter': 0, 'disp': False, 'rhobeg': 1.0}
-- max_evals_grouped: 1
-- tol: None
===============================================================

2022-04-19 15:28:23,597:qiskit.aqua.quantum_instance:INFO: statevector backend only works with shot=1, changing shots from 1024 to 1.
2022-04-19 15:28:23,597:qiskit.aqua.quantum_instance:INFO: 
Qiskit Terra version: 0.17.0
Backend: 'statevector_simulator (AerProvider)', with following setting:
{'basis_gates': ['ccx', 'cp', 'cswap', 'csx', 'cu1', 'cu2', 'cu3', 'cx', 'cy', 'cz', 'delay', 'diagonal', 'h', 'id', 'initialize', 'mcp', 'mcr', 'mcrx', 'mcry', 'mcrz', 'mcswap', 'mcsx', 'mcu1', 'mcu2', 'mcu3', 'mcx', 'mcy', 'mcz', 'multiplexer', 'p', 'pauli', 'r', 'rx', 'rxx', 'ry', 'ryy', 'rz', 'rzx', 'rzz', 's', 'sdg', 'swap', 'sx', 't', 'tdg', 'u', 'u1', 'u2', 'u3', 'unitary', 'x', 'y', 'z', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector'], 'coupling_map': None}
{'initial_layout': None, 'seed_transpiler': None, 'optimization_level': None}
RunConfig(max_credits=10, shots=1)
{'timeout': None}
{}
{}
Measurement mitigation: None
2022-04-19 15:28:23,597:qiskit.aqua.algorithms.vq_algorithm:INFO: Starting optimizer.
bounds=[(-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793)]
initial point=[-8.79706846e-02  6.80861122e-02 -2.07187091e-02 -2.48294866e-02
  4.93617556e-03  1.43816292e-03 -4.24217689e-03 -6.24074932e-01
  1.79873961e+00 -2.77228432e-02  9.95043575e-02  6.75127628e-03
 -2.82036944e-03  2.74915126e-03  3.91965939e-03  8.32671503e-01
  1.45726997e+00 -8.53281718e-02 -1.36502087e-01  2.58001679e-02
  4.81321064e-03  4.11730407e-03 -1.74521515e-01 -1.80625001e-01
  4.40089901e-02  1.59990494e+00 -1.41621188e-01 -2.46708740e-03
 -3.89181019e-03  6.71044358e-05 -9.94278352e-03  3.44965743e-02
 -5.47531126e-02 -2.33476660e-02 -4.03973099e-02  2.45371780e-03
 -6.52767390e-03  4.82132162e-04  2.06035211e-01 -1.79718340e+00
  1.56632409e+00  5.52594918e-01 -5.11107518e-01 -2.62581169e-03
 -3.50236182e-02 -2.83903720e-03 -2.00659060e-01  1.50469805e+00
  1.43567209e-01 -2.98664503e-02 -1.08248746e+00 -6.77020882e-01
  1.57592295e+00 -1.58703371e-01  5.21983775e-04 -3.94944893e-02]
2022-04-19 15:28:23,843:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: Energy evaluation returned [-4.85389011] - 23.30184 (ms), eval count: 1
2022-04-19 15:28:23,844:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: Optimization complete in 0.2464141845703125 seconds.
Found opt_params [-8.79706846e-02  6.80861122e-02 -2.07187091e-02 -2.48294866e-02
  4.93617556e-03  1.43816292e-03 -4.24217689e-03 -6.24074932e-01
  1.79873961e+00 -2.77228432e-02  9.95043575e-02  6.75127628e-03
 -2.82036944e-03  2.74915126e-03  3.91965939e-03  8.32671503e-01
  1.45726997e+00 -8.53281718e-02 -1.36502087e-01  2.58001679e-02
  4.81321064e-03  4.11730407e-03 -1.74521515e-01 -1.80625001e-01
  4.40089901e-02  1.59990494e+00 -1.41621188e-01 -2.46708740e-03
 -3.89181019e-03  6.71044358e-05 -9.94278352e-03  3.44965743e-02
 -5.47531126e-02 -2.33476660e-02 -4.03973099e-02  2.45371780e-03
 -6.52767390e-03  4.82132162e-04  2.06035211e-01 -1.79718340e+00
  1.56632409e+00  5.52594918e-01 -5.11107518e-01 -2.62581169e-03
 -3.50236182e-02 -2.83903720e-03 -2.00659060e-01  1.50469805e+00
  1.43567209e-01 -2.98664503e-02 -1.08248746e+00 -6.77020882e-01
  1.57592295e+00 -1.58703371e-01  5.21983775e-04 -3.94944893e-02] in 1 evals
ancilla op commutes?  True
ancilla op commutes?  True
ancilla op commutes?  True
ancilla op commutes?  False
ancilla op commutes?  False
ancilla op commutes?  False
#INFO: **** input file is /Users/mario/Documents/GitHub/VATech/quantum_database/second_quantization/circuits/hardware_efficient/gather_beh2_results_ry_linear.py ****
from qiskit                                        import *
from qiskit.chemistry.drivers                      import UnitsType,HFMethodType
from qiskit.chemistry.core                         import Hamiltonian,TransformationType,QubitMappingType
from qiskit.chemistry.components.initial_states    import HartreeFock
from qiskit.chemistry.components.variational_forms import UCCSD
from qiskit.aqua.components.optimizers             import L_BFGS_B,COBYLA,CG
from qiskit.aqua.algorithms                        import VQE
from qiskit.aqua                                   import QuantumInstance,aqua_globals
from qiskit.circuit.library                        import EfficientSU2

import logging
from   qiskit.chemistry import set_qiskit_chemistry_logging
from   qiskit.aqua      import set_qiskit_aqua_logging
set_qiskit_chemistry_logging(logging.INFO)
set_qiskit_aqua_logging(logging.INFO)

import sys
import numpy as np
sys.path.append('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/subroutines')
sys.path.append('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/subroutines/pyscfd')
from pyscfdriver import *
from utils       import *

def print_circuit(fname,circuit):
    outf = open(fname,'w')
    for gate in circuit:
        gate_name = gate[0].name
        qubits = [q.index for q in gate[1]]
        outf.write(str(gate_name)+' | '+' '.join([str(x) for x in qubits])+' | '+' '.join([str(x._symbol_expr) for x in gate[0].params])+'\n')
    outf.close()

def print_results(fname,res_vqe,res_ee,dN=0):
    outf = open(fname,'w')
    outf.write('%.12f %.12f \n' % (res_vqe[0],np.real(res_ee[0])))
    outf.write('%.12f %.12f \n' % (res_vqe[1]+dN,np.real(res_ee[1]+dN)))
    outf.write('%.12f %.12f \n' % (res_vqe[2],np.real(res_ee[2])))
    outf.write('%.12f %.12f \n' % (res_vqe[3],np.real(res_ee[3])))
    outf.close()

dist_list = [0.7] #2.1,2.3,2.5,2.7,2.9,3.1,3.3,3.5] #[0.7,0.9,1.1,1.3,1.5,1.7,1.9,2.1,2.3,2.5,2.7,2.9,3.1,3.3,3.5,3.7,3.9,4.1,4.3,4.5]
depth_list = [1,2,3,4,5,6,7,8]

for depth in depth_list:
  for dist in dist_list:

    outfile = open('pes.txt','w')
    
    outfile.write("Bond distance: {}\n".format(dist))
    rho = np.load('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/SCF_FCI/beh2/res_fourth_pass.npy',allow_pickle=True).item()
    rho = rho[str(dist)]['rho_scf']
    driver    = PySCFDriver(atom="Be 0.0000 0.0000 0.0000; H 0.0000 0.0000 -{0}; H 0.0000 0.0000 {0}".format(dist),
                            unit=UnitsType.ANGSTROM,charge=0,spin=0,basis='sto-6g',hf_method=HFMethodType.RHF,symgroup='dooh',
                            outfile=outfile,irrep_nelec={'A1g':4,'A1u':2},rho=rho)
    molecule  = driver.run()
    outfile.write("\nHartree-Fock energy %f \n" % (molecule.hf_energy))
    
    core      = Hamiltonian(transformation=TransformationType.FULL,qubit_mapping=QubitMappingType.PARITY,two_qubit_reduction=True,freeze_core=False,orbital_reduction=[0])
    H_op,A_op = core.run(molecule)
    
    z2syms,sqlist           = None,None
    H_op,A_op,z2syms,sqlist = taper(molecule,core,H_op,A_op,outfile)
    
    init_state = HartreeFock(num_orbitals=core._molecule_info['num_orbitals'],qubit_mapping=core._qubit_mapping,two_qubit_reduction=core._two_qubit_reduction,num_particles=core._molecule_info['num_particles'],sq_list=sqlist)
    init_state.construct_circuit()
    x_hf = init_state._bitstr
 
    outfile.write("\nHartree-Fock energy %f \n" % (molecule.hf_energy))
    outfile.write("\nHartree-Fock circuit\n")
    outfile.write(str(init_state.construct_circuit().draw())+"\n")

    par = np.loadtxt('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/Ry_linear_DEPTH_%d/beh2/R_%s/output_parameters.txt' % (depth,str(dist)))
    var_form  = EfficientSU2(num_qubits=H_op.num_qubits,reps=depth,entanglement='linear',su2_gates=['ry'],initial_state=init_state)
    circuit = var_form.bind_parameters(par)

    optimizer = COBYLA(maxiter=0)
    algo      = VQE(H_op,var_form,optimizer,aux_operators=A_op,include_custom=True,initial_point=par)
    backend          = Aer.get_backend('statevector_simulator')
    quantum_instance = QuantumInstance(backend=backend)
    algo_result      = algo.run(quantum_instance)
    
    # -----------------------------------------------------------------------------------------------------------------------
    
    p1 = algo._ret['opt_params']
    res_vqe,res_ee = get_results(H_op,A_op,molecule,core,algo_result,outfile)
    print_results('ry_linear_%d/beh2_%s_results.txt' % (depth,str(dist)),res_vqe,res_ee,dN=2)

    circuit = var_form.bind_parameters(p1)
    print_circuit('ry_linear_%d/beh2_%s_circuit.txt' % (depth,str(dist)),circuit)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Tue Apr 19 15:28:24 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 3
[INPUT] num. electrons = 6
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry Dooh subgroup None
[INPUT] Mole.unit = Angstrom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000  -0.700000000000 AA    0.000000000000   0.000000000000  -1.322808287196 Bohr
[INPUT]  3 H      0.000000000000   0.000000000000   0.700000000000 AA    0.000000000000   0.000000000000   1.322808287196 Bohr

nuclear repulsion = 6.42572327545714
point group symmetry = Dooh
num. orbitals of irrep A1g = 3
num. orbitals of irrep A1u = 2
num. orbitals of irrep E1uy = 1
num. orbitals of irrep E1ux = 1
number of shells = 5
number of NR pGTOs = 42
number of NR cGTOs = 7
basis = sto-6g
ecp = {}
CPU time:        81.05

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 6 electrons in irreps ['A1g', 'A1u']
    0 free electrons in irreps E1uy E1ux




******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpkvoi0lcw
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpkvoi0lcw
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (A1g) = -0.533375259176049  LUMO (E1ux) = 0.15912932089226
Initial guess E= -15.0164889300848  |g|= 1.08145e-12
macro= 0  E= -15.0164889300848  delta_E= -1.06581e-14  |g|= 1.08145e-12  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-15.0164889300848  |g|= 1.08145e-12  total 2 KF 4 JK
converged SCF energy = -15.0164889300848
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/chemistry_operator.py:170: DeprecationWarning: The qiskit.chemistry.chemistry_operator.MolecularChemistryResult object is deprecated as of 0.8.0 and will be removed no sooner than 3 months after the release. You should use qiskit.chemistry.algorithms.ground_state_solvers.FermionicGroundStateResult instead.
  super().__init__(a_dict)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:381: DeprecationWarning: The qiskit.chemistry.chemistry_operator.MolecularGroundStateResult object is deprecated as of 0.8.0 and will be removed no sooner than 3 months after the release. You should use qiskit.chemistry.algorithms.ground_state_solvers.FermionicGroundStateResult instead.
  mgsr = MolecularGroundStateResult()
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:91: DeprecationWarning: The ChemistryOperator is deprecated as of Qiskit Aqua 0.8.0 and will be removed no earlier than 3 months after the release date. Instead, the FermionicTransformation can be used to transform QMolecules and construct ground state result objects.
  super().__init__()
2022-04-19 15:28:24,360:qiskit.chemistry.core.hamiltonian:INFO: Configured orbital reduction list: [0]
2022-04-19 15:28:24,360:qiskit.chemistry.core.hamiltonian:INFO: Combined orbital reduction list: [0]
2022-04-19 15:28:24,360:qiskit.chemistry.core.hamiltonian:INFO:   converting to spin orbital reduction list: [0 7]
2022-04-19 15:28:24,360:qiskit.chemistry.core.hamiltonian:INFO:     => freezing spin orbitals: [0 7]
2022-04-19 15:28:24,361:qiskit.chemistry.core.hamiltonian:INFO:     => removing spin orbitals: [] (indexes accounting for freeze [])
2022-04-19 15:28:24,421:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital energy shift: -16.617170358057287
2022-04-19 15:28:26,935:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital x dipole shift: 0.0
2022-04-19 15:28:27,002:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital y dipole shift: 0.0
2022-04-19 15:28:27,067:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital z dipole shift: 0.0
2022-04-19 15:28:27,162:qiskit.chemistry.core.hamiltonian:INFO: Molecule num electrons: [3, 3], remaining for processing: [2, 2]
2022-04-19 15:28:27,163:qiskit.chemistry.core.hamiltonian:INFO: Molecule num spin orbitals: 14, remaining for processing: 12
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:417: DeprecationWarning: Processing a dictionary result is deprecated, pass a (minimum) eigensolver result now.
  ' pass a (minimum) eigensolver result now.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:134: DeprecationWarning: energy deprecated, use eigenvalues property.
  warnings.warn('energy deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:134: DeprecationWarning: energy deprecated, use eigenvalues property.
  warnings.warn('energy deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:149: DeprecationWarning: aux_ops deprecated, use aux_operator_eigenvalues property.
  DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:138: DeprecationWarning: energies deprecated, use eigenvalues property.
  warnings.warn('energies deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:138: DeprecationWarning: energies deprecated, use eigenvalues property.
  warnings.warn('energies deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:149: DeprecationWarning: aux_ops deprecated, use aux_operator_eigenvalues property.
  DeprecationWarning)
2022-04-19 15:28:32,297:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: 
==================== Setting of VQE ============================
Algorithm: VQE
-- max_evals_grouped: 1
-- circuit_sampler: None
-- expectation: None
-- user_valid_expectation: False
-- include_custom: True
-- expect_op: None
-- operator: SummedOp([
  -0.6192771499994366 * IIIIIII,
  -0.22730651630951085 * ZIIIZZI,
  -0.03321163049383873 * IIIIIXX,
  0.03321163049383873 * ZIIIZXX,
  -0.2253147080776801 * ZZIZZZZ,
  0.05679163446780257 * ZIIIZIX,
  -0.05679163446780257 * IZIZIIX,
  -0.7258623265715671 * IIZZIII,
  -0.7258623265715669 * IZZIIII,
  -0.6030929064553017 * IIIIIZZ,
  -1.157696674452874 * IIIIIZI,
  -0.22730651630951093 * IIIIZII,
  -0.033211630493838705 * XXXXXII,
  -0.033211630493838705 * YXXXYII,
  -0.22531470807768003 * IIIZZII,
  0.0567916344678026 * ZXXXZII,
  0.0567916344678026 * IYXYIII,
  -0.6030929064553021 * ZZIIIII,
  -1.1576966744528747 * ZIIIIII,
  0.08334297239187934 * IZIZIIZ,
  0.0005769335647369502 * IIIIIZX,
  -0.0005769335647369502 * ZZIZZZX,
  0.20146330378884153 * ZIZZZZI,
  0.20146330378884153 * ZZZIZZI,
  0.09225589239004754 * ZIIIZIZ,
  0.2070609674991095 * ZIIIZII,
  -0.005836451951820793 * ZZIZZYY,
  0.005836451951820793 * IZIZIYY,
  -0.01871300096477631 * IZIZIXI,
  0.01950649403086242 * IZIZIXZ,
  -0.0007934930660861022 * ZIIIZXI,
  -0.0007934930660861022 * ZZIZZXI,
  0.01950649403086242 * IIIIIXZ,
  -0.01871300096477631 * IIIIIXI,
  0.016414969451734544 * IIZZIXX,
  -0.016414969451734544 * ZIZZZXX,
  0.016414969451734544 * IZZIIXX,
  -0.016414969451734544 * ZZZIZXX,
  0.004059418345102082 * IIIIIYY,
  -0.004059418345102082 * ZIIIZYY,
  0.2574950295951019 * ZIIIIZI,
  -0.005096331270005864 * IIIIZXX,
  0.005096331270005864 * ZIIIIXX,
  -0.039900548641951715 * IZIZXIZ,
  0.039900548641951715 * IZIIXIZ,
  0.039900548641951715 * IIIIXII,
  -0.039900548641951715 * IIIZXII,
  0.02761983228392986 * IIIIXZX,
  -0.02761983228392986 * IIIZXZX,
  0.02761983228392986 * ZIIIYZY,
  -0.02761983228392986 * ZIIZYZY,
  0.005144111872843905 * IZZYYIZ,
  0.005144111872843905 * IZIXXIZ,
  0.005144111872843905 * ZZIXXZZ,
  0.005144111872843905 * ZZZYYZZ,
  0.005144111872843905 * IIYXYIZ,
  0.005144111872843905 * IZXXXIZ,
  0.005144111872843905 * ZZXXXZZ,
  0.005144111872843905 * ZIYXYZZ,
  -0.02761983228392986 * IXXYYIZ,
  0.02761983228392986 * ZYXYXIZ,
  0.02761983228392986 * IYXXYII,
  0.02761983228392986 * ZXXXXII,
  0.024829363427025124 * IYXXYZX,
  0.024829363427025124 * ZXXXXZX,
  -0.024829363427025124 * ZYXXXZY,
  0.024829363427025124 * IXXXYZY,
  0.005096331270005864 * XXXXXZI,
  0.005096331270005864 * YXXXYZI,
  0.040309126010204054 * YXXXYXX,
  0.040309126010204054 * XXXXXXX,
  0.12324352103383106 * ZIIZIZI,
  0.020172309693380137 * IIIZZXX,
  -0.020172309693380137 * ZIIZIXX,
  -0.02704289871919291 * ZYXYZZI,
  -0.02704289871919291 * IXXXIZI,
  -0.0176251544088086 * IYXYIXX,
  -0.0176251544088086 * ZXXXZXX,
  0.0176251544088086 * ZYXYZXX,
  0.0176251544088086 * IXXXIXX,
  0.014335857741559347 * YYXXIIZ,
  -0.014335857741559347 * XYXYZIZ,
  -0.014335857741559347 * YXXYIII,
  -0.014335857741559347 * XXXXZII,
  -0.016831661342722494 * YXXYIZX,
  -0.016831661342722494 * XXXXZZX,
  0.016831661342722494 * XXXYZZY,
  -0.016831661342722494 * YXXXIZY,
  -0.0026771586587551912 * YYXIIIZ,
  0.0026771586587551912 * XYYZIIZ,
  0.0026771586587551912 * XYYZZZZ,
  -0.0026771586587551912 * YYXIZZZ,
  -0.0026771586587551912 * YYIIIIZ,
  -0.0026771586587551912 * XXZIIIZ,
  -0.0026771586587551912 * XXZIZZZ,
  -0.0026771586587551912 * YYIIZZZ,
  0.11708525581707264 * IZIIZZI,
  0.025353540310681544 * ZZIIIXX,
  -0.025353540310681544 * IZIIZXX,
  0.03633815537358491 * XZIZIIZ,
  -0.03633815537358491 * XIIZIIZ,
  -0.03633815537358491 * XIIIIII,
  0.03633815537358491 * XZIIIII,
  -0.029412958655783628 * XIIIIZX,
  0.029412958655783628 * XZIIIZX,
  -0.029412958655783628 * YIIIZZY,
  0.029412958655783628 * YZIIZZY,
  0.24737009350931358 * IIIIZZI,
  0.1972129542494357 * ZZZIZZZ,
  0.1972129542494357 * ZIZZZZZ,
  0.1890750782620393 * ZZIZZII,
  0.10213539151593913 * ZZIZZIZ,
  -0.02146329537529415 * ZIZZZIX,
  0.02146329537529415 * IZZIIIX,
  -0.02146329537529415 * ZZZIZIX,
  0.02146329537529415 * IIZZIIX,
  -0.00989812276346958 * ZIIIZZX,
  0.00989812276346958 * IZIZIZX,
  0.12324352103383106 * ZZIZIZZ,
  -0.027042898719192913 * ZIIIIIX,
  0.027042898719192913 * IZIZZIX,
  0.014335857741559347 * ZIIIYYX,
  -0.014335857741559347 * ZIIZYYX,
  -0.014335857741559347 * IZIZXYY,
  0.014335857741559347 * IZIIXYY,
  -0.01683166134272249 * ZYXXXYX,
  0.01683166134272249 * IXXXYYX,
  -0.01683166134272249 * IXXYYYY,
  0.01683166134272249 * ZYXYXYY,
  0.020172309693380137 * XYXYXZZ,
  0.020172309693380137 * YYXYYZZ,
  0.0176251544088086 * XXXXXIX,
  0.0176251544088086 * YXXXYIX,
  -0.0176251544088086 * YYXYYIX,
  -0.0176251544088086 * XYXYXIX,
  0.2330296305961526 * ZZIIIZZ,
  0.001671692012152396 * ZIIZIIX,
  -0.001671692012152396 * IZIIZIX,
  -0.016279945780510962 * ZZZXZZZ,
  0.016279945780510962 * ZZIXIZZ,
  0.016279945780510962 * IIIXIII,
  -0.016279945780510962 * IIZXZII,
  0.016279945780510962 * ZIYYZZZ,
  0.016279945780510962 * ZZXXIZZ,
  0.016279945780510962 * IIXXIII,
  0.016279945780510962 * IZYYZII,
  -0.001671692012152396 * ZXXXZZZ,
  -0.001671692012152396 * IYXYIZZ,
  0.035730306195109925 * ZYXYZIX,
  0.035730306195109925 * IXXXIIX,
  0.013761477078992203 * XXXYZYX,
  -0.013761477078992203 * YXXXIYX,
  0.013761477078992203 * YYXXIYY,
  -0.013761477078992203 * XYXYZYY,
  -0.010270084289159999 * ZXXIZZZ,
  -0.010270084289159999 * IYYZZZZ,
  -0.010270084289159999 * IYYIIII,
  -0.010270084289159999 * ZXXZIII,
  -0.010270084289159999 * ZXIIZZZ,
  0.010270084289159999 * IXZIZZZ,
  0.010270084289159999 * IXZZIII,
  -0.010270084289159999 * ZXIZIII,
  0.22480538445714923 * IIIZZZZ,
  -0.01886307133245532 * YIIIZYX,
  0.01886307133245532 * YZIIZYX,
  0.01886307133245532 * XZIZIYY,
  -0.01886307133245532 * XIIZIYY,
  0.11589686859493135 * IZIZZZZ,
  -0.0287611940959249 * IIIIZIX,
  0.0287611940959249 * ZZIZIIX,
  0.38947179486833605 * IZIZIII,
  0.18647570075538616 * IIZZIZZ,
  0.1883020217766596 * IIZZIZI,
  0.20146330378884153 * IIZZZII,
  -0.0026771586587551912 * IZIXYXY,
  0.0026771586587551912 * IZZYXXY,
  -0.0026771586587551912 * IZZYYYY,
  -0.0026771586587551912 * IZIXXYY,
  -0.016414969451734544 * YXYYYII,
  -0.016414969451734544 * XXYYXII,
  0.1972129542494357 * IIZIZII,
  0.010270084289159999 * IZIYIZY,
  -0.010270084289159999 * IZZYZZY,
  0.010270084289159999 * IZZXIIX,
  -0.010270084289159999 * IZIXZIX,
  -0.02146329537529415 * IYYXIII,
  0.02146329537529415 * ZXYYZII,
  -0.012128953755816447 * IZXZIII,
  0.012128953755816447 * IIXIIII,
  0.009509761069347353 * IXYZIZY,
  -0.009509761069347353 * ZYXIIZY,
  0.009509761069347353 * IXXIIIX,
  0.009509761069347353 * ZYYZIIX,
  -0.0025708476077440662 * YYYZIXY,
  -0.0025708476077440662 * XYXIIXY,
  0.0025708476077440662 * YYXIIYY,
  -0.0025708476077440662 * XYYZIYY,
  0.18647570075538616 * ZZZZIII,
  0.1883020217766596 * ZIZZIII,
  0.18647570075538616 * IZZIIZZ,
  0.1883020217766596 * IZZIIZI,
  0.20146330378884153 * IZZIZII,
  -0.0026771586587551912 * IZXXYXY,
  0.0026771586587551912 * IIYXXXY,
  -0.0026771586587551912 * IIYXYYY,
  -0.0026771586587551912 * IZXXXYY,
  -0.016414969451734544 * YYYXYII,
  -0.016414969451734544 * XYYXXII,
  0.1972129542494357 * IZZZZII,
  0.010270084289159999 * IZXYIZY,
  -0.010270084289159999 * IIYXZZY,
  -0.010270084289159999 * IIYYIIX,
  -0.010270084289159999 * IZXXZIX,
  -0.02146329537529415 * IXYYIII,
  0.02146329537529415 * ZYYXZII,
  0.009509761069347353 * IYZIIZY,
  -0.009509761069347353 * ZYIIIZY,
  0.009509761069347353 * IXIIIIX,
  -0.009509761069347353 * ZXZIIIX,
  0.0025708476077440662 * YXZIIXY,
  -0.0025708476077440662 * XYIIIXY,
  0.0025708476077440662 * YYIIIYY,
  0.0025708476077440662 * XXZIIYY,
  0.18647570075538616 * ZIZIIII,
  0.1883020217766596 * ZZZIIII,
  0.07688554243850795 * IIIIIIZ,
  0.11708525581707264 * IIIIZZZ,
  0.03633815537358492 * IIIIXXZ,
  -0.03633815537358492 * IIIZXXZ,
  -0.03633815537358492 * IIIIXXI,
  0.03633815537358492 * IIIZXXI,
  0.02941295865578362 * IYXXYXZ,
  0.02941295865578362 * ZXXXXXZ,
  -0.02941295865578362 * IYXXYXI,
  -0.02941295865578362 * ZXXXXXI,
  0.025353540310681544 * YXXXYZZ,
  0.025353540310681544 * XXXXXZZ,
  -0.018863071332455322 * YXXYIXZ,
  -0.018863071332455322 * XXXXZXZ,
  0.018863071332455322 * YXXYIXI,
  0.018863071332455322 * XXXXZXI,
  -0.04011876971168971 * XIIIIXZ,
  0.04011876971168971 * XZIIIXZ,
  0.04011876971168971 * XIIIIXI,
  -0.04011876971168971 * XZIIIXI,
  0.11700431215019767 * ZIIIIZZ,
  0.11589686859493135 * IIIZZZI,
  -0.0287611940959249 * IYXYIZI,
  -0.0287611940959249 * ZXXXZZI,
  0.11700431215019767 * ZZIIIZI,
  0.08334297239187934 * IIIZIII,
  0.0005769335647369502 * ZXXXIII,
  0.0005769335647369502 * IYXYZII,
  0.09225589239004754 * ZZIIZII,
  -0.005836451951820793 * XXXYYII,
  0.005836451951820793 * YXXYXII,
  -0.01871300096477631 * XZIZXII,
  0.01950649403086242 * XIIZXII,
  0.0007934930660861022 * YIIIYII,
  0.0007934930660861022 * YZIZYII,
  0.01950649403086242 * XZIIXII,
  -0.01871300096477631 * XIIIXII,
  0.004059418345102082 * YYXXXII,
  -0.004059418345102082 * XYXXYII,
  0.10213539151593913 * ZIIZZII,
  -0.00989812276346958 * IXXXZII,
  -0.00989812276346958 * ZYXYIII,
  0.07688554243850795 * IZIIIII
])
-- quantum_instance: None
-- optimizer: <qiskit.aqua.components.optimizers.cobyla.COBYLA object at 0x7fd57b1ece90>
-- gradient: None
-- cost_fn: <bound method VQE._energy_evaluation of <qiskit.aqua.algorithms.minimum_eigen_solvers.vqe.VQE object at 0x7fd500298090>>
-- initial_point: [ 1.32701776e-02  4.46037932e-02 -1.10082534e+00 -3.06712409e-04
 -2.94311130e-03  7.30865855e-03 -2.08223957e-04  5.26758836e-04
  1.95811326e-02 -4.52847153e-03  1.26528899e-02  9.96965260e-01
  1.17325323e-03  2.58178190e-02 -2.32052165e-03  9.17512098e-03
  1.43526869e+00  1.48349355e-02 -3.33174414e-03  1.09603783e-03
 -2.83967415e-03  3.99021634e-03 -6.26023190e-01  2.31454531e-02
 -4.46906397e-05  5.70852225e-04 -2.75090648e-04 -9.76243310e-03
  3.58887299e-03 -3.39664561e-03  2.13802154e-04 -4.31912395e-02
  1.10215820e+00 -1.00832978e-01  1.74427583e-01 -2.35750941e-03
 -9.86865417e-04  1.09288226e-03 -7.26097382e-04 -9.14773850e-03
  1.75282338e-02  1.78269785e-01 -4.27843274e-03 -1.86792014e-01
 -9.58877101e-03 -3.75686276e-03 -2.18305529e-04 -1.45512959e+00
 -1.75065640e-02  9.70170466e-03  1.14153711e-01  1.94903686e-02
 -9.97552518e-01  6.22659079e-01 -5.91606150e-02 -2.04789499e-01
  1.25330041e-02  3.43553532e-02 -1.09090379e+00  9.81168633e-01
 -1.50150230e-02 -1.17606219e-03  2.11777356e-02]
-- var_form:      ┌──────────┐            ┌──────────┐                        ┌───────────┐»
q_0: ┤ RY(θ[0]) ├─────■──────┤ RY(θ[7]) ├─────────────────■──────┤ RY(θ[14]) ├»
     ├──────────┤   ┌─┴─┐    └──────────┘┌──────────┐   ┌─┴─┐    └───────────┘»
q_1: ┤ RY(θ[1]) ├───┤ X ├─────────■──────┤ RY(θ[8]) ├───┤ X ├──────────■──────»
     └──┬───┬───┘┌──┴───┴───┐   ┌─┴─┐    └──────────┘┌──┴───┴───┐    ┌─┴─┐    »
q_2: ───┤ X ├────┤ RY(θ[2]) ├───┤ X ├─────────■──────┤ RY(θ[9]) ├────┤ X ├────»
     ┌──┴───┴───┐└──────────┘   └───┘       ┌─┴─┐    └──────────┘┌───┴───┴───┐»
q_3: ┤ RY(θ[3]) ├───────────────────────────┤ X ├─────────■──────┤ RY(θ[10]) ├»
     ├──────────┤                           └───┘       ┌─┴─┐    └───────────┘»
q_4: ┤ RY(θ[4]) ├───────────────────────────────────────┤ X ├──────────■──────»
     ├──────────┤                                       └───┘        ┌─┴─┐    »
q_5: ┤ RY(θ[5]) ├────────────────────────────────────────────────────┤ X ├────»
     ├──────────┤                                                    └───┘    »
q_6: ┤ RY(θ[6]) ├─────────────────────────────────────────────────────────────»
     └──────────┘                                                             »
«                               ┌───────────┐                          »
«q_0: ───────────────────■──────┤ RY(θ[21]) ├───────────────────■──────»
«     ┌───────────┐    ┌─┴─┐    └───────────┘┌───────────┐    ┌─┴─┐    »
«q_1: ┤ RY(θ[15]) ├────┤ X ├──────────■──────┤ RY(θ[22]) ├────┤ X ├────»
«     └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───┴───┴───┐»
«q_2: ──────■──────┤ RY(θ[16]) ├────┤ X ├──────────■──────┤ RY(θ[23]) ├»
«         ┌─┴─┐    └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘»
«q_3: ────┤ X ├──────────■──────┤ RY(θ[17]) ├────┤ X ├──────────■──────»
«     ┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───┴───┴───┐    ┌─┴─┐    »
«q_4: ┤ RY(θ[11]) ├────┤ X ├──────────■──────┤ RY(θ[18]) ├────┤ X ├────»
«     └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───┴───┴───┐»
«q_5: ──────■──────┤ RY(θ[12]) ├────┤ X ├──────────■──────┤ RY(θ[19]) ├»
«         ┌─┴─┐    ├───────────┤    └───┘        ┌─┴─┐    ├───────────┤»
«q_6: ────┤ X ├────┤ RY(θ[13]) ├─────────────────┤ X ├────┤ RY(θ[20]) ├»
«         └───┘    └───────────┘                 └───┘    └───────────┘»
«     ┌───────────┐                          ┌───────────┐             »
«q_0: ┤ RY(θ[28]) ├───────────────────■──────┤ RY(θ[35]) ├─────────────»
«     └───────────┘┌───────────┐    ┌─┴─┐    └───────────┘┌───────────┐»
«q_1: ──────■──────┤ RY(θ[29]) ├────┤ X ├──────────■──────┤ RY(θ[36]) ├»
«         ┌─┴─┐    └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘»
«q_2: ────┤ X ├──────────■──────┤ RY(θ[30]) ├────┤ X ├──────────■──────»
«     ┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───┴───┴───┐    ┌─┴─┐    »
«q_3: ┤ RY(θ[24]) ├────┤ X ├──────────■──────┤ RY(θ[31]) ├────┤ X ├────»
«     └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───┴───┴───┐»
«q_4: ──────■──────┤ RY(θ[25]) ├────┤ X ├──────────■──────┤ RY(θ[32]) ├»
«         ┌─┴─┐    └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘»
«q_5: ────┤ X ├──────────■──────┤ RY(θ[26]) ├────┤ X ├──────────■──────»
«         └───┘        ┌─┴─┐    ├───────────┤    └───┘        ┌─┴─┐    »
«q_6: ─────────────────┤ X ├────┤ RY(θ[27]) ├─────────────────┤ X ├────»
«                      └───┘    └───────────┘                 └───┘    »
«                  ┌───────────┐                          ┌───────────┐»
«q_0: ──────■──────┤ RY(θ[42]) ├───────────────────■──────┤ RY(θ[49]) ├»
«         ┌─┴─┐    └───────────┘┌───────────┐    ┌─┴─┐    └───────────┘»
«q_1: ────┤ X ├──────────■──────┤ RY(θ[43]) ├────┤ X ├──────────■──────»
«     ┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───┴───┴───┐    ┌─┴─┐    »
«q_2: ┤ RY(θ[37]) ├────┤ X ├──────────■──────┤ RY(θ[44]) ├────┤ X ├────»
«     └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───┴───┴───┐»
«q_3: ──────■──────┤ RY(θ[38]) ├────┤ X ├──────────■──────┤ RY(θ[45]) ├»
«         ┌─┴─┐    └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘»
«q_4: ────┤ X ├──────────■──────┤ RY(θ[39]) ├────┤ X ├──────────■──────»
«     ┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───┴───┴───┐    ┌─┴─┐    »
«q_5: ┤ RY(θ[33]) ├────┤ X ├──────────■──────┤ RY(θ[40]) ├────┤ X ├────»
«     ├───────────┤    └───┘        ┌─┴─┐    ├───────────┤    └───┘    »
«q_6: ┤ RY(θ[34]) ├─────────────────┤ X ├────┤ RY(θ[41]) ├─────────────»
«     └───────────┘                 └───┘    └───────────┘             »
«                               ┌───────────┐                          »
«q_0: ───────────────────■──────┤ RY(θ[56]) ├──────────────────────────»
«     ┌───────────┐    ┌─┴─┐    └───────────┘┌───────────┐             »
«q_1: ┤ RY(θ[50]) ├────┤ X ├──────────■──────┤ RY(θ[57]) ├─────────────»
«     └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───────────┐»
«q_2: ──────■──────┤ RY(θ[51]) ├────┤ X ├──────────■──────┤ RY(θ[58]) ├»
«         ┌─┴─┐    └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘»
«q_3: ────┤ X ├──────────■──────┤ RY(θ[52]) ├────┤ X ├──────────■──────»
«     ┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───┴───┴───┐    ┌─┴─┐    »
«q_4: ┤ RY(θ[46]) ├────┤ X ├──────────■──────┤ RY(θ[53]) ├────┤ X ├────»
«     └───────────┘┌───┴───┴───┐    ┌─┴─┐    └───────────┘┌───┴───┴───┐»
«q_5: ──────■──────┤ RY(θ[47]) ├────┤ X ├──────────■──────┤ RY(θ[54]) ├»
«         ┌─┴─┐    ├───────────┤    └───┘        ┌─┴─┐    ├───────────┤»
«q_6: ────┤ X ├────┤ RY(θ[48]) ├─────────────────┤ X ├────┤ RY(θ[55]) ├»
«         └───┘    └───────────┘                 └───┘    └───────────┘»
«                                            
«q_0: ───────────────────────────────────────
«                                            
«q_1: ───────────────────────────────────────
«                                            
«q_2: ───────────────────────────────────────
«     ┌───────────┐                          
«q_3: ┤ RY(θ[59]) ├──────────────────────────
«     └───────────┘┌───────────┐             
«q_4: ──────■──────┤ RY(θ[60]) ├─────────────
«         ┌─┴─┐    └───────────┘┌───────────┐
«q_5: ────┤ X ├──────────■──────┤ RY(θ[61]) ├
«         └───┘        ┌─┴─┐    ├───────────┤
«q_6: ─────────────────┤ X ├────┤ RY(θ[62]) ├
«                      └───┘    └───────────┘
-- var_form_params: [ParameterVectorElement(θ[0]), ParameterVectorElement(θ[10]), ParameterVectorElement(θ[11]), ParameterVectorElement(θ[12]), ParameterVectorElement(θ[13]), ParameterVectorElement(θ[14]), ParameterVectorElement(θ[15]), ParameterVectorElement(θ[16]), ParameterVectorElement(θ[17]), ParameterVectorElement(θ[18]), ParameterVectorElement(θ[19]), ParameterVectorElement(θ[1]), ParameterVectorElement(θ[20]), ParameterVectorElement(θ[21]), ParameterVectorElement(θ[22]), ParameterVectorElement(θ[23]), ParameterVectorElement(θ[24]), ParameterVectorElement(θ[25]), ParameterVectorElement(θ[26]), ParameterVectorElement(θ[27]), ParameterVectorElement(θ[28]), ParameterVectorElement(θ[29]), ParameterVectorElement(θ[2]), ParameterVectorElement(θ[30]), ParameterVectorElement(θ[31]), ParameterVectorElement(θ[32]), ParameterVectorElement(θ[33]), ParameterVectorElement(θ[34]), ParameterVectorElement(θ[35]), ParameterVectorElement(θ[36]), ParameterVectorElement(θ[37]), ParameterVectorElement(θ[38]), ParameterVectorElement(θ[39]), ParameterVectorElement(θ[3]), ParameterVectorElement(θ[40]), ParameterVectorElement(θ[41]), ParameterVectorElement(θ[42]), ParameterVectorElement(θ[43]), ParameterVectorElement(θ[44]), ParameterVectorElement(θ[45]), ParameterVectorElement(θ[46]), ParameterVectorElement(θ[47]), ParameterVectorElement(θ[48]), ParameterVectorElement(θ[49]), ParameterVectorElement(θ[4]), ParameterVectorElement(θ[50]), ParameterVectorElement(θ[51]), ParameterVectorElement(θ[52]), ParameterVectorElement(θ[53]), ParameterVectorElement(θ[54]), ParameterVectorElement(θ[55]), ParameterVectorElement(θ[56]), ParameterVectorElement(θ[57]), ParameterVectorElement(θ[58]), ParameterVectorElement(θ[59]), ParameterVectorElement(θ[5]), ParameterVectorElement(θ[60]), ParameterVectorElement(θ[61]), ParameterVectorElement(θ[62]), ParameterVectorElement(θ[6]), ParameterVectorElement(θ[7]), ParameterVectorElement(θ[8]), ParameterVectorElement(θ[9])]
-- parameterized_circuits: None
-- ret: None
-- eval_time: None
-- callback: None
-- aux_op_nones: [False, False, False, False, False, False]
-- aux_operators: [SummedOp([PauliOp(Pauli('IIIIIII'), coeff=5.999999999999994), PauliOp(Pauli('ZIIIZZI'), coeff=-0.4999999999999996), PauliOp(Pauli('ZZIZZZZ'), coeff=-0.4999999999999996), PauliOp(Pauli('IIZZIII'), coeff=-0.9999999999999992), PauliOp(Pauli('IZZIIII'), coeff=-0.9999999999999992), PauliOp(Pauli('IIIIIZZ'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIIIZI'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIIZII'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIZZII'), coeff=-0.4999999999999996), PauliOp(Pauli('ZZIIIII'), coeff=-0.4999999999999996), PauliOp(Pauli('ZIIIIII'), coeff=-0.4999999999999996)], coeff=1.0, abelian=False), SummedOp([PauliOp(Pauli('IIIIIII'), coeff=1.4999999999999987), PauliOp(Pauli('IZIZIIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIZIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIIIZI'), coeff=-0.7499999999999992), PauliOp(Pauli('ZIIZIZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IZIIZZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIZZI'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIIIXZI'), coeff=0.1249999999999999), PauliOp(Pauli('IZIZXIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIZXZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IZIIXIZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIXII'), coeff=-0.1249999999999999), PauliOp(Pauli('ZZIZXZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZXII'), coeff=0.1249999999999999), PauliOp(Pauli('ZZIIXZZ'), coeff=0.1249999999999999), PauliOp(Pauli('IYXXXIY'), coeff=-0.1249999999999999), PauliOp(Pauli('IYXXYZX'), coeff=-0.1249999999999999), PauliOp(Pauli('ZXXXYIY'), coeff=0.1249999999999999), PauliOp(Pauli('ZXXXXZX'), coeff=-0.1249999999999999), PauliOp(Pauli('ZYXXXZY'), coeff=0.1249999999999999), PauliOp(Pauli('ZYXXYIX'), coeff=0.1249999999999999), PauliOp(Pauli('IXXXYZY'), coeff=-0.1249999999999999), PauliOp(Pauli('IXXXXIX'), coeff=0.1249999999999999), PauliOp(Pauli('YXXXXYX'), coeff=-0.2499999999999998), PauliOp(Pauli('YXXXYXX'), coeff=-0.2499999999999998), PauliOp(Pauli('XXXXYYX'), coeff=0.2499999999999998), PauliOp(Pauli('XXXXXXX'), coeff=-0.2499999999999998), PauliOp(Pauli('ZZIZZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZZIZZIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZZIZIZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZZIIIZZ'), coeff=-0.7499999999999992), PauliOp(Pauli('IIIZZZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IZIZZZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZYXXIZY'), coeff=-0.2499999999999998), PauliOp(Pauli('ZYXYZIX'), coeff=-0.2499999999999998), PauliOp(Pauli('IXXYZZY'), coeff=0.2499999999999998), PauliOp(Pauli('IXXXIIX'), coeff=-0.2499999999999998), PauliOp(Pauli('XXXXIXX'), coeff=0.1249999999999999), PauliOp(Pauli('XXXYZYX'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXYZXX'), coeff=0.1249999999999999), PauliOp(Pauli('YXXXIYX'), coeff=0.1249999999999999), PauliOp(Pauli('YYXXIYY'), coeff=-0.1249999999999999), PauliOp(Pauli('YYXYZXY'), coeff=-0.1249999999999999), PauliOp(Pauli('XYXYZYY'), coeff=0.1249999999999999), PauliOp(Pauli('XYXXIXY'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIIIZ'), coeff=0.1249999999999999), PauliOp(Pauli('IIIIZZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIIIIZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('YZIIIYZ'), coeff=-0.1249999999999999), PauliOp(Pauli('XIIIIXZ'), coeff=0.1249999999999999), PauliOp(Pauli('YIIIIYZ'), coeff=0.1249999999999999), PauliOp(Pauli('XZIIIXZ'), coeff=-0.1249999999999999), PauliOp(Pauli('XIIIIXI'), coeff=-0.1249999999999999), PauliOp(Pauli('YZIIIYI'), coeff=0.1249999999999999), PauliOp(Pauli('XZIIIXI'), coeff=0.1249999999999999), PauliOp(Pauli('YIIIIYI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZZZI'), coeff=-0.1249999999999999), PauliOp(Pauli('ZZIIIZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZIII'), coeff=0.1249999999999999), PauliOp(Pauli('ZZIIZII'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIZZII'), coeff=0.1249999999999999), PauliOp(Pauli('IZIIIII'), coeff=0.1249999999999999)], coeff=1.0, abelian=False), SummedOp([PauliOp(Pauli('ZIIIZZI'), coeff=-0.2499999999999998), PauliOp(Pauli('ZZIZZZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIIZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIIZI'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIZII'), coeff=0.2499999999999998), PauliOp(Pauli('IIIZZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZZIIIII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIIIII'), coeff=0.2499999999999998)], coeff=1.0, abelian=False), PauliOp(Pauli('IIIIIII'), coeff=0.0), PauliOp(Pauli('IIIIIII'), coeff=0.0), PauliOp(Pauli('IIIIIII'), coeff=0.0)]
-- eval_count: 0
===============================================================
NLocal: EfficientSU2
-- base_name: nlocal
-- data: [(<qiskit.circuit.library.standard_gates.x.XGate object at 0x7fd57bb35990>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002ae9d0>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002ae6d0>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002aea90>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002ae650>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002aed10>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002aef10>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002ae5d0>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5002ae410>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5002ae1d0>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5002ae290>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5002ae550>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5002ae7d0>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5002ae310>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002aec90>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002ae750>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002ae910>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002ae690>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002aec50>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002aeed0>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002ae710>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5002aecd0>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd528310710>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd528310810>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd528310fd0>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd528310c90>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd528310290>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002ae8d0>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002ae210>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002aedd0>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5283102d0>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd528310ad0>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd528310090>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5283108d0>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5002aead0>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5002aee90>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a2fd690>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a2fd5d0>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a2fd6d0>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a2fdb90>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd57be986d0>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5283101d0>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd528310310>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd528310cd0>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2fd610>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2fdf90>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2fd090>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5002ae850>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a2fd590>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a2fd790>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a2fda10>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a2fd4d0>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a2fdd50>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002ae890>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2fd550>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2fd950>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2fd9d0>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2fd210>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2fd310>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2fdbd0>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd54833eb10>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a2fd890>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a2fdb50>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a2fd650>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a2fd850>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a2fd0d0>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002ae390>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2fd450>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2fdb10>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2fdfd0>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2fd810>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd508114f50>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd508114290>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd528037a90>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd528310250>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd508114610>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd508114850>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd508114c90>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd508114190>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2fd8d0>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002ae990>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd508114ed0>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5081141d0>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd508114410>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5081147d0>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd508114650>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd54833ec90>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd56a2fd110>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5482d0890>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5482d0810>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5482d0c10>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5482d0fd0>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002ae450>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5081146d0>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd508114050>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482d0650>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482d0dd0>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482d0490>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482d05d0>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5002ae3d0>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5482d0410>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5482d0750>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5482d0610>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5482d0150>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7fd5482d0710>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd57ca68490>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482d0ad0>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482d0310>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482d0b90>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482d0ed0>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482d06d0>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482d0e90>, [Qubit(QuantumRegister(7, 'q'), 6)], [])]
-- qregs: [QuantumRegister(7, 'q')]
-- qubits: [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)]
-- qubit_set: {Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 6)}
-- parameter_table: ParameterTable({ParameterVectorElement(θ[0]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002ae9d0>, 0)], ParameterVectorElement(θ[1]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002ae6d0>, 0)], ParameterVectorElement(θ[2]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002aea90>, 0)], ParameterVectorElement(θ[3]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002ae650>, 0)], ParameterVectorElement(θ[4]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002aed10>, 0)], ParameterVectorElement(θ[5]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002aef10>, 0)], ParameterVectorElement(θ[6]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002ae5d0>, 0)], ParameterVectorElement(θ[7]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002aec90>, 0)], ParameterVectorElement(θ[8]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002ae750>, 0)], ParameterVectorElement(θ[9]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002ae910>, 0)], ParameterVectorElement(θ[10]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002ae690>, 0)], ParameterVectorElement(θ[11]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002aec50>, 0)], ParameterVectorElement(θ[12]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002aeed0>, 0)], ParameterVectorElement(θ[13]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002ae710>, 0)], ParameterVectorElement(θ[14]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002ae8d0>, 0)], ParameterVectorElement(θ[15]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002ae210>, 0)], ParameterVectorElement(θ[16]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002aedd0>, 0)], ParameterVectorElement(θ[17]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5283102d0>, 0)], ParameterVectorElement(θ[18]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd528310ad0>, 0)], ParameterVectorElement(θ[19]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd528310090>, 0)], ParameterVectorElement(θ[20]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5283108d0>, 0)], ParameterVectorElement(θ[21]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd57be986d0>, 0)], ParameterVectorElement(θ[22]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5283101d0>, 0)], ParameterVectorElement(θ[23]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd528310310>, 0)], ParameterVectorElement(θ[24]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd528310cd0>, 0)], ParameterVectorElement(θ[25]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2fd610>, 0)], ParameterVectorElement(θ[26]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2fdf90>, 0)], ParameterVectorElement(θ[27]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2fd090>, 0)], ParameterVectorElement(θ[28]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002ae890>, 0)], ParameterVectorElement(θ[29]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2fd550>, 0)], ParameterVectorElement(θ[30]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2fd950>, 0)], ParameterVectorElement(θ[31]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2fd9d0>, 0)], ParameterVectorElement(θ[32]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2fd210>, 0)], ParameterVectorElement(θ[33]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2fd310>, 0)], ParameterVectorElement(θ[34]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2fdbd0>, 0)], ParameterVectorElement(θ[35]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002ae390>, 0)], ParameterVectorElement(θ[36]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2fd450>, 0)], ParameterVectorElement(θ[37]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2fdb10>, 0)], ParameterVectorElement(θ[38]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2fdfd0>, 0)], ParameterVectorElement(θ[39]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2fd810>, 0)], ParameterVectorElement(θ[40]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd508114f50>, 0)], ParameterVectorElement(θ[41]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd508114290>, 0)], ParameterVectorElement(θ[42]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd56a2fd8d0>, 0)], ParameterVectorElement(θ[43]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002ae990>, 0)], ParameterVectorElement(θ[44]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd508114ed0>, 0)], ParameterVectorElement(θ[45]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5081141d0>, 0)], ParameterVectorElement(θ[46]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd508114410>, 0)], ParameterVectorElement(θ[47]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5081147d0>, 0)], ParameterVectorElement(θ[48]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd508114650>, 0)], ParameterVectorElement(θ[49]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5002ae450>, 0)], ParameterVectorElement(θ[50]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5081146d0>, 0)], ParameterVectorElement(θ[51]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd508114050>, 0)], ParameterVectorElement(θ[52]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482d0650>, 0)], ParameterVectorElement(θ[53]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482d0dd0>, 0)], ParameterVectorElement(θ[54]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482d0490>, 0)], ParameterVectorElement(θ[55]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482d05d0>, 0)], ParameterVectorElement(θ[56]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd57ca68490>, 0)], ParameterVectorElement(θ[57]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482d0ad0>, 0)], ParameterVectorElement(θ[58]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482d0310>, 0)], ParameterVectorElement(θ[59]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482d0b90>, 0)], ParameterVectorElement(θ[60]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482d0ed0>, 0)], ParameterVectorElement(θ[61]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482d06d0>, 0)], ParameterVectorElement(θ[62]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7fd5482d0e90>, 0)]})
-- clbits: []
-- clbit_set: set()
-- ancillas: []
-- calibrations: defaultdict(<class 'dict'>, {})
-- parameters: [ParameterVectorElement(θ[0]), ParameterVectorElement(θ[1]), ParameterVectorElement(θ[2]), ParameterVectorElement(θ[3]), ParameterVectorElement(θ[4]), ParameterVectorElement(θ[5]), ParameterVectorElement(θ[6]), ParameterVectorElement(θ[7]), ParameterVectorElement(θ[8]), ParameterVectorElement(θ[9]), ParameterVectorElement(θ[10]), ParameterVectorElement(θ[11]), ParameterVectorElement(θ[12]), ParameterVectorElement(θ[13]), ParameterVectorElement(θ[14]), ParameterVectorElement(θ[15]), ParameterVectorElement(θ[16]), ParameterVectorElement(θ[17]), ParameterVectorElement(θ[18]), ParameterVectorElement(θ[19]), ParameterVectorElement(θ[20]), ParameterVectorElement(θ[21]), ParameterVectorElement(θ[22]), ParameterVectorElement(θ[23]), ParameterVectorElement(θ[24]), ParameterVectorElement(θ[25]), ParameterVectorElement(θ[26]), ParameterVectorElement(θ[27]), ParameterVectorElement(θ[28]), ParameterVectorElement(θ[29]), ParameterVectorElement(θ[30]), ParameterVectorElement(θ[31]), ParameterVectorElement(θ[32]), ParameterVectorElement(θ[33]), ParameterVectorElement(θ[34]), ParameterVectorElement(θ[35]), ParameterVectorElement(θ[36]), ParameterVectorElement(θ[37]), ParameterVectorElement(θ[38]), ParameterVectorElement(θ[39]), ParameterVectorElement(θ[40]), ParameterVectorElement(θ[41]), ParameterVectorElement(θ[42]), ParameterVectorElement(θ[43]), ParameterVectorElement(θ[44]), ParameterVectorElement(θ[45]), ParameterVectorElement(θ[46]), ParameterVectorElement(θ[47]), ParameterVectorElement(θ[48]), ParameterVectorElement(θ[49]), ParameterVectorElement(θ[50]), ParameterVectorElement(θ[51]), ParameterVectorElement(θ[52]), ParameterVectorElement(θ[53]), ParameterVectorElement(θ[54]), ParameterVectorElement(θ[55]), ParameterVectorElement(θ[56]), ParameterVectorElement(θ[57]), ParameterVectorElement(θ[58]), ParameterVectorElement(θ[59]), ParameterVectorElement(θ[60]), ParameterVectorElement(θ[61]), ParameterVectorElement(θ[62])]
-- layout: None
-- global_phase: 0
-- metadata: None
-- cregs: []
-- num_qubits: 7
-- insert_barriers: False
-- reps: 8
-- entanglement_blocks: [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7fd54833e650>]
-- rotation_blocks: [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7fd54833e550>]
-- prepended_blocks: []
-- prepended_entanglement: []
-- appended_blocks: []
-- appended_entanglement: []
-- entanglement: linear
-- entangler_maps: None
-- ordered_parameters: θ, ['θ[0]', 'θ[1]', 'θ[2]', 'θ[3]', 'θ[4]', 'θ[5]', 'θ[6]', 'θ[7]', 'θ[8]', 'θ[9]', 'θ[10]', 'θ[11]', 'θ[12]', 'θ[13]', 'θ[14]', 'θ[15]', 'θ[16]', 'θ[17]', 'θ[18]', 'θ[19]', 'θ[20]', 'θ[21]', 'θ[22]', 'θ[23]', 'θ[24]', 'θ[25]', 'θ[26]', 'θ[27]', 'θ[28]', 'θ[29]', 'θ[30]', 'θ[31]', 'θ[32]', 'θ[33]', 'θ[34]', 'θ[35]', 'θ[36]', 'θ[37]', 'θ[38]', 'θ[39]', 'θ[40]', 'θ[41]', 'θ[42]', 'θ[43]', 'θ[44]', 'θ[45]', 'θ[46]', 'θ[47]', 'θ[48]', 'θ[49]', 'θ[50]', 'θ[51]', 'θ[52]', 'θ[53]', 'θ[54]', 'θ[55]', 'θ[56]', 'θ[57]', 'θ[58]', 'θ[59]', 'θ[60]', 'θ[61]', 'θ[62]']
-- overwrite_block_parameters: True
-- skip_final_rotation_layer: False
-- skip_unentangled_qubits: False
-- initial_state: <qiskit.chemistry.components.initial_states.hartree_fock.HartreeFock object at 0x7fd57b1fd850>
-- initial_state_circuit:           
q_0: ─────
          
q_1: ─────
     ┌───┐
q_2: ┤ X ├
     └───┘
q_3: ─────
          
q_4: ─────
          
q_5: ─────
          
q_6: ─────
          
-- bounds: None
===============================================================
Optimizer: COBYLA
-- gradient_support_level: 1
-- bounds_support_level: 1
-- initial_point_support_level: 3
-- options: {'maxiter': 0, 'disp': False, 'rhobeg': 1.0}
-- max_evals_grouped: 1
-- tol: None
===============================================================

2022-04-19 15:28:32,298:qiskit.aqua.quantum_instance:INFO: statevector backend only works with shot=1, changing shots from 1024 to 1.
2022-04-19 15:28:32,298:qiskit.aqua.quantum_instance:INFO: 
Qiskit Terra version: 0.17.0
Backend: 'statevector_simulator (AerProvider)', with following setting:
{'basis_gates': ['ccx', 'cp', 'cswap', 'csx', 'cu1', 'cu2', 'cu3', 'cx', 'cy', 'cz', 'delay', 'diagonal', 'h', 'id', 'initialize', 'mcp', 'mcr', 'mcrx', 'mcry', 'mcrz', 'mcswap', 'mcsx', 'mcu1', 'mcu2', 'mcu3', 'mcx', 'mcy', 'mcz', 'multiplexer', 'p', 'pauli', 'r', 'rx', 'rxx', 'ry', 'ryy', 'rz', 'rzx', 'rzz', 's', 'sdg', 'swap', 'sx', 't', 'tdg', 'u', 'u1', 'u2', 'u3', 'unitary', 'x', 'y', 'z', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector'], 'coupling_map': None}
{'initial_layout': None, 'seed_transpiler': None, 'optimization_level': None}
RunConfig(max_credits=10, shots=1)
{'timeout': None}
{}
{}
Measurement mitigation: None
2022-04-19 15:28:32,298:qiskit.aqua.algorithms.vq_algorithm:INFO: Starting optimizer.
bounds=[(-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793)]
initial point=[ 1.32701776e-02  4.46037932e-02 -1.10082534e+00 -3.06712409e-04
 -2.94311130e-03  7.30865855e-03 -2.08223957e-04  5.26758836e-04
  1.95811326e-02 -4.52847153e-03  1.26528899e-02  9.96965260e-01
  1.17325323e-03  2.58178190e-02 -2.32052165e-03  9.17512098e-03
  1.43526869e+00  1.48349355e-02 -3.33174414e-03  1.09603783e-03
 -2.83967415e-03  3.99021634e-03 -6.26023190e-01  2.31454531e-02
 -4.46906397e-05  5.70852225e-04 -2.75090648e-04 -9.76243310e-03
  3.58887299e-03 -3.39664561e-03  2.13802154e-04 -4.31912395e-02
  1.10215820e+00 -1.00832978e-01  1.74427583e-01 -2.35750941e-03
 -9.86865417e-04  1.09288226e-03 -7.26097382e-04 -9.14773850e-03
  1.75282338e-02  1.78269785e-01 -4.27843274e-03 -1.86792014e-01
 -9.58877101e-03 -3.75686276e-03 -2.18305529e-04 -1.45512959e+00
 -1.75065640e-02  9.70170466e-03  1.14153711e-01  1.94903686e-02
 -9.97552518e-01  6.22659079e-01 -5.91606150e-02 -2.04789499e-01
  1.25330041e-02  3.43553532e-02 -1.09090379e+00  9.81168633e-01
 -1.50150230e-02 -1.17606219e-03  2.11777356e-02]
2022-04-19 15:28:32,569:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: Energy evaluation returned [-4.85390652] - 26.19505 (ms), eval count: 1
2022-04-19 15:28:32,569:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: Optimization complete in 0.27089595794677734 seconds.
Found opt_params [ 1.32701776e-02  4.46037932e-02 -1.10082534e+00 -3.06712409e-04
 -2.94311130e-03  7.30865855e-03 -2.08223957e-04  5.26758836e-04
  1.95811326e-02 -4.52847153e-03  1.26528899e-02  9.96965260e-01
  1.17325323e-03  2.58178190e-02 -2.32052165e-03  9.17512098e-03
  1.43526869e+00  1.48349355e-02 -3.33174414e-03  1.09603783e-03
 -2.83967415e-03  3.99021634e-03 -6.26023190e-01  2.31454531e-02
 -4.46906397e-05  5.70852225e-04 -2.75090648e-04 -9.76243310e-03
  3.58887299e-03 -3.39664561e-03  2.13802154e-04 -4.31912395e-02
  1.10215820e+00 -1.00832978e-01  1.74427583e-01 -2.35750941e-03
 -9.86865417e-04  1.09288226e-03 -7.26097382e-04 -9.14773850e-03
  1.75282338e-02  1.78269785e-01 -4.27843274e-03 -1.86792014e-01
 -9.58877101e-03 -3.75686276e-03 -2.18305529e-04 -1.45512959e+00
 -1.75065640e-02  9.70170466e-03  1.14153711e-01  1.94903686e-02
 -9.97552518e-01  6.22659079e-01 -5.91606150e-02 -2.04789499e-01
  1.25330041e-02  3.43553532e-02 -1.09090379e+00  9.81168633e-01
 -1.50150230e-02 -1.17606219e-03  2.11777356e-02] in 1 evals
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/chemistry_operator.py:170: DeprecationWarning: The qiskit.chemistry.chemistry_operator.MolecularChemistryResult object is deprecated as of 0.8.0 and will be removed no sooner than 3 months after the release. You should use qiskit.chemistry.algorithms.ground_state_solvers.FermionicGroundStateResult instead.
  super().__init__(a_dict)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:381: DeprecationWarning: The qiskit.chemistry.chemistry_operator.MolecularGroundStateResult object is deprecated as of 0.8.0 and will be removed no sooner than 3 months after the release. You should use qiskit.chemistry.algorithms.ground_state_solvers.FermionicGroundStateResult instead.
  mgsr = MolecularGroundStateResult()
ancilla op commutes?  True
ancilla op commutes?  True
ancilla op commutes?  True
ancilla op commutes?  False
ancilla op commutes?  False
ancilla op commutes?  False
