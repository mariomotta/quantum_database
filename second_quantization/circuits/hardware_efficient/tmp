#INFO: **** input file is /Users/mario/Documents/GitHub/VATech/quantum_database/second_quantization/circuits/hardware_efficient/gather_beh2_results_ry_linear.py ****
from qiskit                                        import *
from qiskit.chemistry.drivers                      import UnitsType,HFMethodType
from qiskit.chemistry.core                         import Hamiltonian,TransformationType,QubitMappingType
from qiskit.chemistry.components.initial_states    import HartreeFock
from qiskit.chemistry.components.variational_forms import UCCSD
from qiskit.aqua.components.optimizers             import L_BFGS_B,COBYLA,CG
from qiskit.aqua.algorithms                        import VQE
from qiskit.aqua                                   import QuantumInstance,aqua_globals
from qiskit.circuit.library                        import EfficientSU2

import logging
from   qiskit.chemistry import set_qiskit_chemistry_logging
from   qiskit.aqua      import set_qiskit_aqua_logging
set_qiskit_chemistry_logging(logging.INFO)
set_qiskit_aqua_logging(logging.INFO)

import sys
import numpy as np
sys.path.append('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/subroutines')
sys.path.append('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/subroutines/pyscfd')
from pyscfdriver import *
from utils       import *

def print_circuit(fname,circuit):
    outf = open(fname,'w')
    for gate in circuit:
        gate_name = gate[0].name
        qubits = [q.index for q in gate[1]]
        outf.write(str(gate_name)+' | '+' '.join([str(x) for x in qubits])+' | '+' '.join([str(x._symbol_expr) for x in gate[0].params])+'\n')
    outf.close()

def print_results(fname,res_vqe,res_ee,dN=0):
    outf = open(fname,'w')
    outf.write('%.12f %.12f \n' % (res_vqe[0],np.real(res_ee[0])))
    outf.write('%.12f %.12f \n' % (res_vqe[1]+dN,np.real(res_ee[1]+dN)))
    outf.write('%.12f %.12f \n' % (res_vqe[2],np.real(res_ee[2])))
    outf.write('%.12f %.12f \n' % (res_vqe[3],np.real(res_ee[3])))
    outf.close()

dist_list = [2.1,2.3,2.5,2.7,2.9,3.1,3.3,3.5] #[0.7,0.9,1.1,1.3,1.5,1.7,1.9,2.1,2.3,2.5,2.7,2.9,3.1,3.3,3.5,3.7,3.9,4.1,4.3,4.5]
depth_list = [1] #[1,2,3,4,5,6,7,8]

for depth in depth_list:
  for dist in dist_list:

    outfile = open('pes.txt','w')
    
    outfile.write("Bond distance: {}\n".format(dist))
    rho = np.load('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/SCF_FCI/beh2/res_fourth_pass.npy',allow_pickle=True).item()
    rho = rho[str(dist)]['rho_scf']
    driver    = PySCFDriver(atom="Be 0.0000 0.0000 0.0000; H 0.0000 0.0000 -{0}; H 0.0000 0.0000 {0}".format(dist),
                            unit=UnitsType.ANGSTROM,charge=0,spin=0,basis='sto-6g',hf_method=HFMethodType.RHF,symgroup='dooh',
                            outfile=outfile,irrep_nelec={'A1g':4,'A1u':2},rho=rho)
    molecule  = driver.run()
    outfile.write("\nHartree-Fock energy %f \n" % (molecule.hf_energy))
    
    core      = Hamiltonian(transformation=TransformationType.FULL,qubit_mapping=QubitMappingType.PARITY,two_qubit_reduction=True,freeze_core=False,orbital_reduction=[0])
    H_op,A_op = core.run(molecule)
    
    z2syms,sqlist           = None,None
    H_op,A_op,z2syms,sqlist = taper(molecule,core,H_op,A_op,outfile)
    
    init_state = HartreeFock(num_orbitals=core._molecule_info['num_orbitals'],qubit_mapping=core._qubit_mapping,two_qubit_reduction=core._two_qubit_reduction,num_particles=core._molecule_info['num_particles'],sq_list=sqlist)
    init_state.construct_circuit()
    x_hf = init_state._bitstr
 
    outfile.write("\nHartree-Fock energy %f \n" % (molecule.hf_energy))
    outfile.write("\nHartree-Fock circuit\n")
    outfile.write(str(init_state.construct_circuit().draw())+"\n")

    par = np.loadtxt('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/Ry_linear_DEPTH_%d/beh2/R_%s/output_parameters.txt' % (depth,str(dist)))
    var_form  = EfficientSU2(num_qubits=H_op.num_qubits,reps=depth,entanglement='linear',su2_gates=['ry'],initial_state=init_state)
    circuit = var_form.bind_parameters(par)

    optimizer = COBYLA(maxiter=0)
    algo      = VQE(H_op,var_form,optimizer,aux_operators=A_op,include_custom=True,initial_point=par)
    backend          = Aer.get_backend('statevector_simulator')
    quantum_instance = QuantumInstance(backend=backend)
    algo_result      = algo.run(quantum_instance)
    
    # -----------------------------------------------------------------------------------------------------------------------
    
    p1 = algo._ret['opt_params']
    res_vqe,res_ee = get_results(H_op,A_op,molecule,core,algo_result,outfile)
    print_results('ry_linear_%d/beh2_%s_results.txt' % (depth,str(dist)),res_vqe,res_ee,dN=2)

    circuit = var_form.bind_parameters(p1)
    print_circuit('ry_linear_%d/beh2_%s_circuit.txt' % (depth,str(dist)),circuit)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Mon Apr 18 23:12:52 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 3
[INPUT] num. electrons = 6
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry Dooh subgroup None
[INPUT] Mole.unit = Angstrom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000  -2.100000000000 AA    0.000000000000   0.000000000000  -3.968424861587 Bohr
[INPUT]  3 H      0.000000000000   0.000000000000   2.100000000000 AA    0.000000000000   0.000000000000   3.968424861587 Bohr

nuclear repulsion = 2.14190775848571
point group symmetry = Dooh
num. orbitals of irrep A1g = 3
num. orbitals of irrep A1u = 2
num. orbitals of irrep E1uy = 1
num. orbitals of irrep E1ux = 1
number of shells = 5
number of NR pGTOs = 42
number of NR cGTOs = 7
basis = sto-6g
ecp = {}
CPU time:         3.98

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 6 electrons in irreps ['A1g', 'A1u']
    0 free electrons in irreps E1uy E1ux




******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp1budov65
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp1budov65
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (A1u) = -0.286815227278054  LUMO (A1g) = 0.178042478908618
Initial guess E= -15.4766030445328  |g|= 1.35583e-11
macro= 0  E= -15.4766030445328  delta_E= 0  |g|= 1.35583e-11  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-15.4766030445328  |g|= 1.35583e-11  total 2 KF 4 JK
converged SCF energy = -15.4766030445328
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:91: DeprecationWarning: The ChemistryOperator is deprecated as of Qiskit Aqua 0.8.0 and will be removed no earlier than 3 months after the release date. Instead, the FermionicTransformation can be used to transform QMolecules and construct ground state result objects.
  super().__init__()
2022-04-18 23:12:52,198:qiskit.chemistry.core.hamiltonian:INFO: Configured orbital reduction list: [0]
2022-04-18 23:12:52,199:qiskit.chemistry.core.hamiltonian:INFO: Combined orbital reduction list: [0]
2022-04-18 23:12:52,199:qiskit.chemistry.core.hamiltonian:INFO:   converting to spin orbital reduction list: [0 7]
2022-04-18 23:12:52,199:qiskit.chemistry.core.hamiltonian:INFO:     => freezing spin orbitals: [0 7]
2022-04-18 23:12:52,199:qiskit.chemistry.core.hamiltonian:INFO:     => removing spin orbitals: [] (indexes accounting for freeze [])
2022-04-18 23:12:52,264:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital energy shift: -14.601509571022318
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/quantum_info/operators/symplectic/pauli.py:185: DeprecationWarning: Initializing Pauli from `Pauli(z=z, x=x)` kwargs is deprecated as of version 0.17.0 and will be removed no earlier than 3 months after the release date. Use tuple initialization `Pauli((z, x))` instead.
  base_z, base_x, base_phase = self._from_array_deprecated(z, x)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/fermionic_operator.py:431: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  pauli_prod = Pauli.sgn_prod(a_i[alpha], a_j[beta])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/fermionic_operator.py:431: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  pauli_prod = Pauli.sgn_prod(a_i[alpha], a_j[beta])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/fermionic_operator.py:431: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  pauli_prod = Pauli.sgn_prod(a_i[alpha], a_j[beta])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/fermionic_operator.py:431: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  pauli_prod = Pauli.sgn_prod(a_i[alpha], a_j[beta])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/fermionic_operator.py:431: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  pauli_prod = Pauli.sgn_prod(a_i[alpha], a_j[beta])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/fermionic_operator.py:431: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  pauli_prod = Pauli.sgn_prod(a_i[alpha], a_j[beta])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/fermionic_operator.py:459: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  pauli_prod_1 = Pauli.sgn_prod(a_i[alpha], a_k[beta])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/fermionic_operator.py:459: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  pauli_prod_1 = Pauli.sgn_prod(a_i[alpha], a_k[beta])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/fermionic_operator.py:459: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  pauli_prod_1 = Pauli.sgn_prod(a_i[alpha], a_k[beta])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/fermionic_operator.py:459: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  pauli_prod_1 = Pauli.sgn_prod(a_i[alpha], a_k[beta])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/fermionic_operator.py:459: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  pauli_prod_1 = Pauli.sgn_prod(a_i[alpha], a_k[beta])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/fermionic_operator.py:459: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  pauli_prod_1 = Pauli.sgn_prod(a_i[alpha], a_k[beta])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/operators/legacy/weighted_pauli_operator.py:1289: DeprecationWarning: `from_label` is deprecated and will be removed no earlier than 3 months after the release date. Use Pauli(label) instead.
  z_sym = Pauli.from_label(''.join(pauli_str)[::-1])
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/operators/legacy/weighted_pauli_operator.py:291: DeprecationWarning: sgn_prod is deprecated and will be removed no earlier than 3 months after the release date. Use `dot` instead.
  new_pauli, sign = Pauli.sgn_prod(existed_pauli, pauli)
2022-04-18 23:12:54,725:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital x dipole shift: 0.0
2022-04-18 23:12:54,788:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital y dipole shift: 0.0
2022-04-18 23:12:54,848:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital z dipole shift: 0.0
2022-04-18 23:12:54,945:qiskit.chemistry.core.hamiltonian:INFO: Molecule num electrons: [3, 3], remaining for processing: [2, 2]
2022-04-18 23:12:54,945:qiskit.chemistry.core.hamiltonian:INFO: Molecule num spin orbitals: 14, remaining for processing: 12
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/operators/primitive_ops/pauli_op.py:164: DeprecationWarning: `to_spmatrix` is deprecated and will be removed no earlier than 3 months after the release date. Use `to_matrix(sparse=True)` instead.
  return self.primitive.to_spmatrix() * self.coeff  # type: ignore
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:417: DeprecationWarning: Processing a dictionary result is deprecated, pass a (minimum) eigensolver result now.
  ' pass a (minimum) eigensolver result now.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:134: DeprecationWarning: energy deprecated, use eigenvalues property.
  warnings.warn('energy deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:134: DeprecationWarning: energy deprecated, use eigenvalues property.
  warnings.warn('energy deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:149: DeprecationWarning: aux_ops deprecated, use aux_operator_eigenvalues property.
  DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:138: DeprecationWarning: energies deprecated, use eigenvalues property.
  warnings.warn('energies deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:138: DeprecationWarning: energies deprecated, use eigenvalues property.
  warnings.warn('energies deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:149: DeprecationWarning: aux_ops deprecated, use aux_operator_eigenvalues property.
  DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/operators/primitive_ops/pauli_op.py:94: DeprecationWarning: `kron` is deprecated and will be removed no earlier than 3 months after the release date of Qiskit Terra 0.17.0. Use `expand` instead, but note this does not change the operator in-place.
  return PauliOp(op_copy.kron(self.primitive), coeff=self.coeff * other.coeff)
2022-04-18 23:13:00,081:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: 
==================== Setting of VQE ============================
Algorithm: VQE
-- max_evals_grouped: 1
-- circuit_sampler: None
-- expectation: None
-- user_valid_expectation: False
-- include_custom: True
-- expect_op: None
-- operator: SummedOp([
  -0.7682539028321621 * IIIIIII,
  -0.22573821923659687 * ZIIZZZZ,
  -0.07247290453223168 * ZIZIIZX,
  0.07247290453223168 * ZIIZZZX,
  -0.22172157340436954 * ZIIZZZI,
  -0.0925230351936374 * ZIIZZYY,
  0.0925230351936374 * IIIIIYY,
  -0.3296737789985882 * ZIZIIZZ,
  -0.865822912515188 * IZZIIII,
  -0.865822912515188 * ZZIIIII,
  -0.47351973072163184 * IIIIIZI,
  -0.22573821923659676 * IIIIZII,
  -0.07247290453223167 * IIZXXII,
  -0.07247290453223167 * IIIYYII,
  -0.22172157340436935 * IIIZZII,
  0.0925230351936374 * XXXXZII,
  0.0925230351936374 * YXXYIII,
  -0.32967377899858813 * IIZZIII,
  -0.47351973072163184 * ZIIIIII,
  0.04847817705335377 * IIIIIIZ,
  -0.010244910466088308 * IIIIIXX,
  0.010244910466088308 * ZIIZZXX,
  0.11983850876030046 * IIZZZII,
  0.15348472258289064 * ZZZZZZZ,
  0.15348472258289064 * IZIZZZZ,
  0.0736762267857483 * ZIIZZIZ,
  0.013807200370024456 * IIZZZIX,
  -0.013807200370024456 * IIIIIIX,
  -0.015398304889801892 * IIIIIXI,
  0.009407485224632353 * ZIZIIXZ,
  0.005990819665169548 * IIZZZXZ,
  0.005990819665169548 * ZIIZZXZ,
  0.009407485224632353 * IIIIIXZ,
  -0.015398304889801892 * ZIZIIXI,
  0.03503653101902475 * ZZIIIZX,
  -0.03503653101902475 * ZZZZZZX,
  0.03503653101902475 * IZZIIZX,
  -0.03503653101902475 * IZIZZZX,
  0.0101551340923091 * ZIZIIIX,
  -0.0101551340923091 * ZIIZZIX,
  0.1720731811826033 * ZIIZIZZ,
  0.006705997358145339 * ZIZIZZX,
  -0.006705997358145339 * ZIIZIZX,
  -0.035657236955689724 * IIIIXIZ,
  0.035657236955689724 * IIIZXIZ,
  0.035657236955689724 * IIIIXII,
  -0.035657236955689724 * IIIZXII,
  -0.0077041098404414445 * IIIIXXX,
  0.0077041098404414445 * IIIZXXX,
  -0.0077041098404414445 * ZIIZYXY,
  0.0077041098404414445 * ZIIIYXY,
  -0.006705997358145339 * ZIIXXZZ,
  -0.006705997358145339 * ZIZYYZZ,
  0.048423966303253144 * ZIZYYZX,
  0.048423966303253144 * ZIIXXZX,
  0.011822831418258933 * ZZYXYZX,
  0.011822831418258933 * ZIXXXZX,
  -0.011822831418258933 * IIXYXIY,
  -0.011822831418258933 * IZYYYIY,
  0.011822831418258933 * IYXXYZX,
  0.011822831418258933 * ZXXXXZX,
  -0.011822831418258933 * IXXYXIY,
  -0.011822831418258933 * ZYXYYIY,
  0.0077041098404414445 * YXXXYIZ,
  0.0077041098404414445 * XXXXXIZ,
  -0.0077041098404414445 * YXXXYII,
  -0.0077041098404414445 * XXXXXII,
  0.014710151634486081 * YXXXYXX,
  0.014710151634486081 * XXXXXXX,
  -0.014710151634486081 * XXXYXXY,
  -0.014710151634486081 * YXXYYXY,
  0.08413541400904352 * ZIIIIZZ,
  -0.010421364424839904 * ZIZZZZX,
  0.010421364424839904 * ZIIIIZX,
  0.02422856479486436 * IIIXIIZ,
  -0.02422856479486436 * IIZXZIZ,
  -0.02422856479486436 * IIIXIII,
  0.02422856479486436 * IIZXZII,
  0.016871986811736635 * IIIXIXX,
  -0.016871986811736635 * IIZXZXX,
  0.016871986811736635 * ZIIYZXY,
  -0.016871986811736635 * ZIZYIXY,
  0.002540800625646863 * XXXXZZZ,
  0.002540800625646863 * YXXYIZZ,
  -0.022862806476906177 * XXYYIZX,
  0.022862806476906177 * YXYXZZX,
  -0.022862806476906177 * XXXXZZX,
  -0.022862806476906177 * YXXYIZX,
  0.1682624750635536 * ZIZIZZZ,
  -0.011200235747525647 * ZZXIIZX,
  0.011200235747525647 * ZIXZIZX,
  -0.011200235747525647 * IIYZZIY,
  0.011200235747525647 * IZYIZIY,
  0.011200235747525647 * IYYIIZX,
  0.011200235747525647 * ZXXZIZX,
  -0.011200235747525647 * IXYZZIY,
  0.011200235747525647 * ZYXIZIY,
  -0.032270291701538535 * YXYIIIZ,
  -0.032270291701538535 * XXXZIIZ,
  0.032270291701538535 * YXYIIII,
  0.032270291701538535 * XXXZIII,
  -0.007818592388580422 * YXYIIXX,
  -0.007818592388580422 * XXXZIXX,
  0.007818592388580422 * XXYZZXY,
  -0.007818592388580422 * YXXIZXY,
  0.08838637842023439 * IIIZZZZ,
  0.002336541703728676 * IIZIIZX,
  -0.002336541703728676 * IIIZZZX,
  0.06068888283323178 * IIZZZIZ,
  0.14252251742492789 * ZZZZZZI,
  0.14252251742492789 * IZIZZZI,
  0.13119463849944776 * ZIIZZII,
  -0.01749339439472113 * IIZZZXX,
  0.01749339439472113 * ZIZIIXX,
  0.040220397442568945 * ZZZZZYY,
  -0.040220397442568945 * IZZIIYY,
  0.040220397442568945 * IZIZZYY,
  -0.040220397442568945 * ZZIIIYY,
  0.08413541400904352 * ZIIZIZI,
  0.002540800625646863 * ZIIZIYY,
  -0.002540800625646863 * IIIIZYY,
  -0.02422856479486436 * IIZZYIY,
  0.02422856479486436 * IIZIYIY,
  -0.02422856479486436 * IIIIXIX,
  0.02422856479486436 * IIIZXIX,
  0.010421364424839904 * ZIIXXZI,
  0.010421364424839904 * ZIZYYZI,
  -0.022862806476906174 * ZIIXXYY,
  -0.022862806476906174 * ZIZYYYY,
  -0.022862806476906174 * IIIYYYY,
  -0.022862806476906174 * IIZXXYY,
  0.016871986811736635 * YXYYXIY,
  -0.016871986811736635 * XXYYYIY,
  0.016871986811736635 * YXXXYIX,
  0.016871986811736635 * XXXXXIX,
  0.1899773809839487 * ZIIIIZI,
  -0.012626867088769714 * ZIIIIYY,
  0.012626867088769714 * IIIZZYY,
  0.026853865799718685 * IIZYZIY,
  -0.026853865799718685 * IIIYIIY,
  0.026853865799718685 * IIIXIIX,
  -0.026853865799718685 * IIZXZIX,
  0.0022148131984641526 * IZYXZIY,
  -0.0022148131984641526 * IIXYIIY,
  -0.0022148131984641526 * ZIXYIZY,
  0.0022148131984641526 * ZZYXZZY,
  0.0022148131984641526 * ZYXXZIY,
  -0.0022148131984641526 * IXXYIIY,
  -0.0022148131984641526 * ZXXYIZY,
  0.0022148131984641526 * IYXXZZY,
  -0.012626867088769714 * XXXXZZI,
  -0.012626867088769714 * YXXYIZI,
  0.04831250708167415 * XXXXZYY,
  0.04831250708167415 * YXXYIYY,
  0.08754274863295046 * ZIZIZZI,
  -0.00525231008312351 * ZIZIZYY,
  0.00525231008312351 * IIZZIYY,
  0.022745704477844634 * YXXZZIY,
  -0.022745704477844634 * XXYIZIY,
  -0.022745704477844634 * YXYIIIX,
  -0.022745704477844634 * XXXZIIX,
  -0.0030041362132951638 * YXIZZIY,
  0.0030041362132951638 * XYZZZIY,
  0.0030041362132951638 * XYZIIZY,
  -0.0030041362132951638 * YXIIIZY,
  -0.0030041362132951638 * YIIZZIY,
  0.0030041362132951638 * YZIZZIY,
  0.0030041362132951638 * YZIIIZY,
  -0.0030041362132951638 * YIIIIZY,
  0.17950714558112185 * IIIZZZI,
  0.14759269778663742 * ZZIIIZZ,
  0.14759269778663742 * IZZIIZZ,
  0.05881799479802376 * ZIZIIIZ,
  0.032270291701538535 * IIIIXXZ,
  -0.032270291701538535 * IIIZXXZ,
  -0.032270291701538535 * ZIZIXXI,
  0.032270291701538535 * ZIZZXXI,
  0.011200235747525647 * ZZYXYZZ,
  0.011200235747525647 * ZIXXXZZ,
  -0.011200235747525647 * IIYXYII,
  -0.011200235747525647 * IZXXXII,
  0.011200235747525647 * IYXXYZZ,
  0.011200235747525647 * ZXXXXZZ,
  -0.011200235747525647 * IXYXYII,
  0.011200235747525647 * ZYYXXII,
  -0.00781859238858042 * YXXXYXZ,
  -0.00781859238858042 * XXXXXXZ,
  0.00781859238858042 * XXYXYXI,
  -0.00781859238858042 * YXYXXXI,
  0.08754274863295046 * ZIZZZZZ,
  -0.022745704477844634 * IIIXIXZ,
  0.022745704477844634 * IIZXZXZ,
  0.022745704477844634 * ZIZXIXI,
  -0.022745704477844634 * ZIIXZXI,
  0.005252310083123511 * XXYYIZZ,
  -0.005252310083123511 * YXYXZZZ,
  -0.010880243554505368 * ZZXIIZZ,
  0.010880243554505368 * ZIXZIZZ,
  0.010880243554505368 * IIXIIII,
  -0.010880243554505368 * IZXZIII,
  0.010880243554505368 * IYYIIZZ,
  0.010880243554505368 * ZXXZIZZ,
  0.010880243554505368 * IXXIIII,
  0.010880243554505368 * ZYYZIII,
  0.031111861613198677 * YXYIIXZ,
  0.031111861613198677 * XXXZIXZ,
  0.031111861613198677 * XXXIIXI,
  0.031111861613198677 * YXYZIXI,
  0.08992985641122242 * IIZIIZZ,
  0.38947179486833605 * ZIZIIII,
  0.17329252464503905 * IZZIIZI,
  0.15348472258289064 * IZZIZII,
  0.03503653101902475 * IZZYYII,
  0.03503653101902475 * IZIXXII,
  0.14252251742492789 * IZZZZII,
  -0.0030041362132951638 * ZIXYIYI,
  0.0030041362132951638 * ZZYXZYI,
  0.0030041362132951638 * ZZYYIXI,
  0.0030041362132951638 * ZIXXZXI,
  0.040220397442568945 * YYYYIII,
  0.040220397442568945 * XYYXZII,
  0.14759269778663742 * IZIZIII,
  -0.012128953755816447 * ZXZIIII,
  0.012128953755816447 * IXIIIII,
  0.0043907443068536296 * XYZIIYI,
  -0.0043907443068536296 * YXIIIYI,
  0.0043907443068536296 * XXIIIXI,
  0.0043907443068536296 * YYZIIXI,
  0.17329252464503905 * ZZZIIII,
  0.17329252464503905 * ZZIIIZI,
  0.15348472258289064 * ZZIIZII,
  0.03503653101902475 * ZZIYYII,
  0.03503653101902475 * ZZZXXII,
  0.14252251742492789 * ZZIZZII,
  -0.0030041362132951638 * ZXXYIYI,
  0.0030041362132951638 * IYXXZYI,
  0.0030041362132951638 * IYXYIXI,
  0.0030041362132951638 * ZXXXZXI,
  -0.040220397442568945 * XYXYIII,
  0.040220397442568945 * YYXXZII,
  0.14759269778663742 * ZZZZIII,
  0.0043907443068536296 * YZIIIYI,
  -0.0043907443068536296 * YIIIIYI,
  0.0043907443068536296 * XIIIIXI,
  -0.0043907443068536296 * XZIIIXI,
  0.17329252464503905 * IZIIIII,
  0.08838637842023439 * IIIIZZI,
  0.002336541703728676 * IIIYYZI,
  0.002336541703728676 * IIZXXZI,
  0.08992985641122242 * IIZZIZI,
  0.04847817705335377 * IIIZIII,
  -0.010244910466088308 * XXXXIII,
  -0.010244910466088308 * YXXYZII,
  0.0736762267857483 * ZIIIZII,
  -0.013807200370024456 * IIZYYII,
  -0.013807200370024456 * IIIXXII,
  -0.015398304889801892 * XXXIXII,
  -0.009407485224632353 * YXYZXII,
  -0.005990819665169548 * XXYIYII,
  -0.005990819665169548 * YXXIYII,
  0.009407485224632353 * XXXZXII,
  0.015398304889801892 * YXYIXII,
  0.0101551340923091 * ZIZXXII,
  0.0101551340923091 * ZIIYYII,
  0.06068888283323178 * IIZIZII,
  0.01749339439472113 * XXYYZII,
  -0.01749339439472113 * YXYXIII,
  0.05881799479802376 * ZIZZIII
])
-- quantum_instance: None
-- optimizer: <qiskit.aqua.components.optimizers.cobyla.COBYLA object at 0x7f927941f090>
-- gradient: None
-- cost_fn: <bound method VQE._energy_evaluation of <qiskit.aqua.algorithms.minimum_eigen_solvers.vqe.VQE object at 0x7f9278acc550>>
-- initial_point: [-1.35683820e-01 -3.12029612e-03 -1.16454683e-05  3.87424443e-06
  1.33474449e-02 -1.25351794e-03  1.67385818e-03  3.16143503e+00
  5.16615890e-02 -1.50148494e-04 -1.33268417e-02  2.25222374e-02
  7.57506879e-02  3.20228311e-03]
-- var_form:      ┌──────────┐            ┌──────────┐                                     »
q_0: ┤ RY(θ[0]) ├─────■──────┤ RY(θ[7]) ├─────────────────────────────────────»
     ├──────────┤   ┌─┴─┐    └──────────┘┌──────────┐                         »
q_1: ┤ RY(θ[1]) ├───┤ X ├─────────■──────┤ RY(θ[8]) ├─────────────────────────»
     └──┬───┬───┘┌──┴───┴───┐   ┌─┴─┐    └──────────┘┌──────────┐             »
q_2: ───┤ X ├────┤ RY(θ[2]) ├───┤ X ├─────────■──────┤ RY(θ[9]) ├─────────────»
     ┌──┴───┴───┐└──────────┘   └───┘       ┌─┴─┐    └──────────┘┌───────────┐»
q_3: ┤ RY(θ[3]) ├───────────────────────────┤ X ├─────────■──────┤ RY(θ[10]) ├»
     ├──────────┤                           └───┘       ┌─┴─┐    └───────────┘»
q_4: ┤ RY(θ[4]) ├───────────────────────────────────────┤ X ├──────────■──────»
     ├──────────┤                                       └───┘        ┌─┴─┐    »
q_5: ┤ RY(θ[5]) ├────────────────────────────────────────────────────┤ X ├────»
     ├──────────┤                                                    └───┘    »
q_6: ┤ RY(θ[6]) ├─────────────────────────────────────────────────────────────»
     └──────────┘                                                             »
«                               
«q_0: ──────────────────────────
«                               
«q_1: ──────────────────────────
«                               
«q_2: ──────────────────────────
«                               
«q_3: ──────────────────────────
«     ┌───────────┐             
«q_4: ┤ RY(θ[11]) ├─────────────
«     └───────────┘┌───────────┐
«q_5: ──────■──────┤ RY(θ[12]) ├
«         ┌─┴─┐    ├───────────┤
«q_6: ────┤ X ├────┤ RY(θ[13]) ├
«         └───┘    └───────────┘
-- var_form_params: [ParameterVectorElement(θ[0]), ParameterVectorElement(θ[10]), ParameterVectorElement(θ[11]), ParameterVectorElement(θ[12]), ParameterVectorElement(θ[13]), ParameterVectorElement(θ[1]), ParameterVectorElement(θ[2]), ParameterVectorElement(θ[3]), ParameterVectorElement(θ[4]), ParameterVectorElement(θ[5]), ParameterVectorElement(θ[6]), ParameterVectorElement(θ[7]), ParameterVectorElement(θ[8]), ParameterVectorElement(θ[9])]
-- parameterized_circuits: None
-- ret: None
-- eval_time: None
-- callback: None
-- aux_op_nones: [False, False, False, False, False, False]
-- aux_operators: [SummedOp([PauliOp(Pauli('IIIIIII'), coeff=5.999999999999994), PauliOp(Pauli('ZIIZZZZ'), coeff=-0.4999999999999996), PauliOp(Pauli('ZIIZZZI'), coeff=-0.4999999999999996), PauliOp(Pauli('ZIZIIZZ'), coeff=-0.4999999999999996), PauliOp(Pauli('IZZIIII'), coeff=-0.9999999999999992), PauliOp(Pauli('ZZIIIII'), coeff=-0.9999999999999992), PauliOp(Pauli('IIIIIZI'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIIZII'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIZZII'), coeff=-0.4999999999999996), PauliOp(Pauli('IIZZIII'), coeff=-0.4999999999999996), PauliOp(Pauli('ZIIIIII'), coeff=-0.4999999999999996)], coeff=1.0, abelian=False), SummedOp([PauliOp(Pauli('IIIIIII'), coeff=1.4999999999999987), PauliOp(Pauli('IIIIIIZ'), coeff=0.1249999999999999), PauliOp(Pauli('IIZZZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIZZIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIZIZZ'), coeff=-0.7499999999999992), PauliOp(Pauli('ZIIIIZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIZIZZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIZZZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIIZXZZ'), coeff=0.1249999999999999), PauliOp(Pauli('IIIIXIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIXZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZXIZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIXII'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIIZXZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZXII'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIXZI'), coeff=0.1249999999999999), PauliOp(Pauli('IIIYXIY'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIZYYZX'), coeff=-0.2499999999999998), PauliOp(Pauli('IIZXYIY'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIXXZX'), coeff=-0.2499999999999998), PauliOp(Pauli('YXXXXYX'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXXYXX'), coeff=-0.1249999999999999), PauliOp(Pauli('XXXXYYX'), coeff=0.1249999999999999), PauliOp(Pauli('XXXXXXX'), coeff=-0.1249999999999999), PauliOp(Pauli('XXXYXXY'), coeff=0.1249999999999999), PauliOp(Pauli('XXXYYYY'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXYYXY'), coeff=0.1249999999999999), PauliOp(Pauli('YXXYXYY'), coeff=0.1249999999999999), PauliOp(Pauli('IIZZZIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIZZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIZIZI'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIIIIZI'), coeff=-0.7499999999999992), PauliOp(Pauli('ZIZIZZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZZZI'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIIXIZX'), coeff=0.1249999999999999), PauliOp(Pauli('IIZYZIY'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIZXZZX'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIYIIY'), coeff=0.1249999999999999), PauliOp(Pauli('IIIXIIX'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIZYZZY'), coeff=0.1249999999999999), PauliOp(Pauli('IIZXZIX'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIYIZY'), coeff=-0.1249999999999999), PauliOp(Pauli('XXXYIXY'), coeff=-0.2499999999999998), PauliOp(Pauli('XXXXZYY'), coeff=-0.2499999999999998), PauliOp(Pauli('YXXXZXY'), coeff=0.2499999999999998), PauliOp(Pauli('YXXYIYY'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIZIIIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIZZZZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIZIIZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXZIYZ'), coeff=-0.1249999999999999), PauliOp(Pauli('YXYIIXZ'), coeff=-0.1249999999999999), PauliOp(Pauli('XXYIIYZ'), coeff=0.1249999999999999), PauliOp(Pauli('XXXZIXZ'), coeff=-0.1249999999999999), PauliOp(Pauli('XXXIIXI'), coeff=-0.1249999999999999), PauliOp(Pauli('XXYZIYI'), coeff=0.1249999999999999), PauliOp(Pauli('YXYZIXI'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXIIYI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIZZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIZZIZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZIII'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIZII'), coeff=0.1249999999999999), PauliOp(Pauli('IIZIZII'), coeff=0.1249999999999999), PauliOp(Pauli('ZIZZIII'), coeff=0.1249999999999999)], coeff=1.0, abelian=False), SummedOp([PauliOp(Pauli('ZIIZZZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIIZZZI'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIZIIZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIIZI'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIZII'), coeff=0.2499999999999998), PauliOp(Pauli('IIIZZII'), coeff=0.2499999999999998), PauliOp(Pauli('IIZZIII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIIIII'), coeff=0.2499999999999998)], coeff=1.0, abelian=False), PauliOp(Pauli('IIIIIII'), coeff=0.0), PauliOp(Pauli('IIIIIII'), coeff=0.0), PauliOp(Pauli('IIIIIII'), coeff=0.0)]
-- eval_count: 0
===============================================================
NLocal: EfficientSU2
-- base_name: nlocal
-- data: [(<qiskit.circuit.library.standard_gates.x.XGate object at 0x7f92b97871d0>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f9290c99a10>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b97f5950>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b97f5b50>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b97f5810>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b97f5750>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b97f5d10>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b97f5c10>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f92b9548150>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f92b97f5b90>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f92b97f5fd0>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f92b97f5c50>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f92b97f5510>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f92b97f54d0>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f9279540190>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b9548290>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b97f5c90>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b97f5850>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b97f5410>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b97f56d0>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b97f5910>, [Qubit(QuantumRegister(7, 'q'), 6)], [])]
-- qregs: [QuantumRegister(7, 'q')]
-- qubits: [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)]
-- qubit_set: {Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 6), Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 3)}
-- parameter_table: ParameterTable({ParameterVectorElement(θ[0]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f9290c99a10>, 0)], ParameterVectorElement(θ[1]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b97f5950>, 0)], ParameterVectorElement(θ[2]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b97f5b50>, 0)], ParameterVectorElement(θ[3]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b97f5810>, 0)], ParameterVectorElement(θ[4]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b97f5750>, 0)], ParameterVectorElement(θ[5]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b97f5d10>, 0)], ParameterVectorElement(θ[6]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b97f5c10>, 0)], ParameterVectorElement(θ[7]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f9279540190>, 0)], ParameterVectorElement(θ[8]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b9548290>, 0)], ParameterVectorElement(θ[9]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b97f5c90>, 0)], ParameterVectorElement(θ[10]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b97f5850>, 0)], ParameterVectorElement(θ[11]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b97f5410>, 0)], ParameterVectorElement(θ[12]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b97f56d0>, 0)], ParameterVectorElement(θ[13]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b97f5910>, 0)]})
-- clbits: []
-- clbit_set: set()
-- ancillas: []
-- calibrations: defaultdict(<class 'dict'>, {})
-- parameters: [ParameterVectorElement(θ[0]), ParameterVectorElement(θ[1]), ParameterVectorElement(θ[2]), ParameterVectorElement(θ[3]), ParameterVectorElement(θ[4]), ParameterVectorElement(θ[5]), ParameterVectorElement(θ[6]), ParameterVectorElement(θ[7]), ParameterVectorElement(θ[8]), ParameterVectorElement(θ[9]), ParameterVectorElement(θ[10]), ParameterVectorElement(θ[11]), ParameterVectorElement(θ[12]), ParameterVectorElement(θ[13])]
-- layout: None
-- global_phase: 0
-- metadata: None
-- cregs: []
-- num_qubits: 7
-- insert_barriers: False
-- reps: 1
-- entanglement_blocks: [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7f92b9787050>]
-- rotation_blocks: [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7f92b9787550>]
-- prepended_blocks: []
-- prepended_entanglement: []
-- appended_blocks: []
-- appended_entanglement: []
-- entanglement: linear
-- entangler_maps: None
-- ordered_parameters: θ, ['θ[0]', 'θ[1]', 'θ[2]', 'θ[3]', 'θ[4]', 'θ[5]', 'θ[6]', 'θ[7]', 'θ[8]', 'θ[9]', 'θ[10]', 'θ[11]', 'θ[12]', 'θ[13]']
-- overwrite_block_parameters: True
-- skip_final_rotation_layer: False
-- skip_unentangled_qubits: False
-- initial_state: <qiskit.chemistry.components.initial_states.hartree_fock.HartreeFock object at 0x7f9290c537d0>
-- initial_state_circuit:           
q_0: ─────
          
q_1: ─────
     ┌───┐
q_2: ┤ X ├
     └───┘
q_3: ─────
          
q_4: ─────
          
q_5: ─────
          
q_6: ─────
          
-- bounds: None
===============================================================
Optimizer: COBYLA
-- gradient_support_level: 1
-- bounds_support_level: 1
-- initial_point_support_level: 3
-- options: {'maxiter': 0, 'disp': False, 'rhobeg': 1.0}
-- max_evals_grouped: 1
-- tol: None
===============================================================

2022-04-18 23:13:00,087:qiskit.aqua.quantum_instance:INFO: statevector backend only works with shot=1, changing shots from 1024 to 1.
2022-04-18 23:13:00,217:qiskit.aqua.quantum_instance:INFO: 
Qiskit Terra version: 0.17.0
Backend: 'statevector_simulator (AerProvider)', with following setting:
{'basis_gates': ['ccx', 'cp', 'cswap', 'csx', 'cu1', 'cu2', 'cu3', 'cx', 'cy', 'cz', 'delay', 'diagonal', 'h', 'id', 'initialize', 'mcp', 'mcr', 'mcrx', 'mcry', 'mcrz', 'mcswap', 'mcsx', 'mcu1', 'mcu2', 'mcu3', 'mcx', 'mcy', 'mcz', 'multiplexer', 'p', 'pauli', 'r', 'rx', 'rxx', 'ry', 'ryy', 'rz', 'rzx', 'rzz', 's', 'sdg', 'swap', 'sx', 't', 'tdg', 'u', 'u1', 'u2', 'u3', 'unitary', 'x', 'y', 'z', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector'], 'coupling_map': None}
{'initial_layout': None, 'seed_transpiler': None, 'optimization_level': None}
RunConfig(max_credits=10, shots=1)
{'timeout': None}
{}
{}
Measurement mitigation: None
2022-04-18 23:13:00,218:qiskit.aqua.algorithms.vq_algorithm:INFO: Starting optimizer.
bounds=[(-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793)]
initial point=[-1.35683820e-01 -3.12029612e-03 -1.16454683e-05  3.87424443e-06
  1.33474449e-02 -1.25351794e-03  1.67385818e-03  3.16143503e+00
  5.16615890e-02 -1.50148494e-04 -1.33268417e-02  2.25222374e-02
  7.57506879e-02  3.20228311e-03]
2022-04-18 23:13:00,718:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: Energy evaluation returned [-3.02192862] - 265.71798 (ms), eval count: 1
2022-04-18 23:13:00,719:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: Optimization complete in 0.5008840560913086 seconds.
Found opt_params [-1.35683820e-01 -3.12029612e-03 -1.16454683e-05  3.87424443e-06
  1.33474449e-02 -1.25351794e-03  1.67385818e-03  3.16143503e+00
  5.16615890e-02 -1.50148494e-04 -1.33268417e-02  2.25222374e-02
  7.57506879e-02  3.20228311e-03] in 1 evals
ancilla op commutes?  True
ancilla op commutes?  True
ancilla op commutes?  True
ancilla op commutes?  False
ancilla op commutes?  False
ancilla op commutes?  False
#INFO: **** input file is /Users/mario/Documents/GitHub/VATech/quantum_database/second_quantization/circuits/hardware_efficient/gather_beh2_results_ry_linear.py ****
from qiskit                                        import *
from qiskit.chemistry.drivers                      import UnitsType,HFMethodType
from qiskit.chemistry.core                         import Hamiltonian,TransformationType,QubitMappingType
from qiskit.chemistry.components.initial_states    import HartreeFock
from qiskit.chemistry.components.variational_forms import UCCSD
from qiskit.aqua.components.optimizers             import L_BFGS_B,COBYLA,CG
from qiskit.aqua.algorithms                        import VQE
from qiskit.aqua                                   import QuantumInstance,aqua_globals
from qiskit.circuit.library                        import EfficientSU2

import logging
from   qiskit.chemistry import set_qiskit_chemistry_logging
from   qiskit.aqua      import set_qiskit_aqua_logging
set_qiskit_chemistry_logging(logging.INFO)
set_qiskit_aqua_logging(logging.INFO)

import sys
import numpy as np
sys.path.append('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/subroutines')
sys.path.append('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/subroutines/pyscfd')
from pyscfdriver import *
from utils       import *

def print_circuit(fname,circuit):
    outf = open(fname,'w')
    for gate in circuit:
        gate_name = gate[0].name
        qubits = [q.index for q in gate[1]]
        outf.write(str(gate_name)+' | '+' '.join([str(x) for x in qubits])+' | '+' '.join([str(x._symbol_expr) for x in gate[0].params])+'\n')
    outf.close()

def print_results(fname,res_vqe,res_ee,dN=0):
    outf = open(fname,'w')
    outf.write('%.12f %.12f \n' % (res_vqe[0],np.real(res_ee[0])))
    outf.write('%.12f %.12f \n' % (res_vqe[1]+dN,np.real(res_ee[1]+dN)))
    outf.write('%.12f %.12f \n' % (res_vqe[2],np.real(res_ee[2])))
    outf.write('%.12f %.12f \n' % (res_vqe[3],np.real(res_ee[3])))
    outf.close()

dist_list = [2.1,2.3,2.5,2.7,2.9,3.1,3.3,3.5] #[0.7,0.9,1.1,1.3,1.5,1.7,1.9,2.1,2.3,2.5,2.7,2.9,3.1,3.3,3.5,3.7,3.9,4.1,4.3,4.5]
depth_list = [1] #[1,2,3,4,5,6,7,8]

for depth in depth_list:
  for dist in dist_list:

    outfile = open('pes.txt','w')
    
    outfile.write("Bond distance: {}\n".format(dist))
    rho = np.load('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/SCF_FCI/beh2/res_fourth_pass.npy',allow_pickle=True).item()
    rho = rho[str(dist)]['rho_scf']
    driver    = PySCFDriver(atom="Be 0.0000 0.0000 0.0000; H 0.0000 0.0000 -{0}; H 0.0000 0.0000 {0}".format(dist),
                            unit=UnitsType.ANGSTROM,charge=0,spin=0,basis='sto-6g',hf_method=HFMethodType.RHF,symgroup='dooh',
                            outfile=outfile,irrep_nelec={'A1g':4,'A1u':2},rho=rho)
    molecule  = driver.run()
    outfile.write("\nHartree-Fock energy %f \n" % (molecule.hf_energy))
    
    core      = Hamiltonian(transformation=TransformationType.FULL,qubit_mapping=QubitMappingType.PARITY,two_qubit_reduction=True,freeze_core=False,orbital_reduction=[0])
    H_op,A_op = core.run(molecule)
    
    z2syms,sqlist           = None,None
    H_op,A_op,z2syms,sqlist = taper(molecule,core,H_op,A_op,outfile)
    
    init_state = HartreeFock(num_orbitals=core._molecule_info['num_orbitals'],qubit_mapping=core._qubit_mapping,two_qubit_reduction=core._two_qubit_reduction,num_particles=core._molecule_info['num_particles'],sq_list=sqlist)
    init_state.construct_circuit()
    x_hf = init_state._bitstr
 
    outfile.write("\nHartree-Fock energy %f \n" % (molecule.hf_energy))
    outfile.write("\nHartree-Fock circuit\n")
    outfile.write(str(init_state.construct_circuit().draw())+"\n")

    par = np.loadtxt('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/Ry_linear_DEPTH_%d/beh2/R_%s/output_parameters.txt' % (depth,str(dist)))
    var_form  = EfficientSU2(num_qubits=H_op.num_qubits,reps=depth,entanglement='linear',su2_gates=['ry'],initial_state=init_state)
    circuit = var_form.bind_parameters(par)

    optimizer = COBYLA(maxiter=0)
    algo      = VQE(H_op,var_form,optimizer,aux_operators=A_op,include_custom=True,initial_point=par)
    backend          = Aer.get_backend('statevector_simulator')
    quantum_instance = QuantumInstance(backend=backend)
    algo_result      = algo.run(quantum_instance)
    
    # -----------------------------------------------------------------------------------------------------------------------
    
    p1 = algo._ret['opt_params']
    res_vqe,res_ee = get_results(H_op,A_op,molecule,core,algo_result,outfile)
    print_results('ry_linear_%d/beh2_%s_results.txt' % (depth,str(dist)),res_vqe,res_ee,dN=2)

    circuit = var_form.bind_parameters(p1)
    print_circuit('ry_linear_%d/beh2_%s_circuit.txt' % (depth,str(dist)),circuit)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Mon Apr 18 23:13:01 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 3
[INPUT] num. electrons = 6
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry Dooh subgroup None
[INPUT] Mole.unit = Angstrom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000  -2.300000000000 AA    0.000000000000   0.000000000000  -4.346370086500 Bohr
[INPUT]  3 H      0.000000000000   0.000000000000   2.300000000000 AA    0.000000000000   0.000000000000   4.346370086500 Bohr

nuclear repulsion = 1.95565490992174
point group symmetry = Dooh
num. orbitals of irrep A1g = 3
num. orbitals of irrep A1u = 2
num. orbitals of irrep E1uy = 1
num. orbitals of irrep E1ux = 1
number of shells = 5
number of NR pGTOs = 42
number of NR cGTOs = 7
basis = sto-6g
ecp = {}
CPU time:        14.98

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 6 electrons in irreps ['A1g', 'A1u']
    0 free electrons in irreps E1uy E1ux




******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp4pdty32v
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp4pdty32v
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (A1u) = -0.256624686971406  LUMO (A1g) = 0.131581682251253
Initial guess E= -15.3984702628672  |g|= 9.2278e-11
macro= 0  E= -15.3984702628672  delta_E= -7.10543e-15  |g|= 9.2278e-11  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-15.3984702628672  |g|= 9.2278e-11  total 2 KF 4 JK
converged SCF energy = -15.3984702628672
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/chemistry_operator.py:170: DeprecationWarning: The qiskit.chemistry.chemistry_operator.MolecularChemistryResult object is deprecated as of 0.8.0 and will be removed no sooner than 3 months after the release. You should use qiskit.chemistry.algorithms.ground_state_solvers.FermionicGroundStateResult instead.
  super().__init__(a_dict)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:381: DeprecationWarning: The qiskit.chemistry.chemistry_operator.MolecularGroundStateResult object is deprecated as of 0.8.0 and will be removed no sooner than 3 months after the release. You should use qiskit.chemistry.algorithms.ground_state_solvers.FermionicGroundStateResult instead.
  mgsr = MolecularGroundStateResult()
gather_beh2_results_ry_linear.py:28: DeprecationWarning: Back-references to from Bit instances to their containing Registers have been deprecated. Instead, inspect Registers to find their contained Bits.
  qubits = [q.index for q in gate[1]]
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:91: DeprecationWarning: The ChemistryOperator is deprecated as of Qiskit Aqua 0.8.0 and will be removed no earlier than 3 months after the release date. Instead, the FermionicTransformation can be used to transform QMolecules and construct ground state result objects.
  super().__init__()
2022-04-18 23:13:01,174:qiskit.chemistry.core.hamiltonian:INFO: Configured orbital reduction list: [0]
2022-04-18 23:13:01,174:qiskit.chemistry.core.hamiltonian:INFO: Combined orbital reduction list: [0]
2022-04-18 23:13:01,174:qiskit.chemistry.core.hamiltonian:INFO:   converting to spin orbital reduction list: [0 7]
2022-04-18 23:13:01,174:qiskit.chemistry.core.hamiltonian:INFO:     => freezing spin orbitals: [0 7]
2022-04-18 23:13:01,174:qiskit.chemistry.core.hamiltonian:INFO:     => removing spin orbitals: [] (indexes accounting for freeze [])
2022-04-18 23:13:01,235:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital energy shift: -14.51385254977955
2022-04-18 23:13:03,827:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital x dipole shift: 0.0
2022-04-18 23:13:03,891:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital y dipole shift: 0.0
2022-04-18 23:13:03,954:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital z dipole shift: 0.0
2022-04-18 23:13:04,035:qiskit.chemistry.core.hamiltonian:INFO: Molecule num electrons: [3, 3], remaining for processing: [2, 2]
2022-04-18 23:13:04,036:qiskit.chemistry.core.hamiltonian:INFO: Molecule num spin orbitals: 14, remaining for processing: 12
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:417: DeprecationWarning: Processing a dictionary result is deprecated, pass a (minimum) eigensolver result now.
  ' pass a (minimum) eigensolver result now.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:134: DeprecationWarning: energy deprecated, use eigenvalues property.
  warnings.warn('energy deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:134: DeprecationWarning: energy deprecated, use eigenvalues property.
  warnings.warn('energy deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:149: DeprecationWarning: aux_ops deprecated, use aux_operator_eigenvalues property.
  DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:138: DeprecationWarning: energies deprecated, use eigenvalues property.
  warnings.warn('energies deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:138: DeprecationWarning: energies deprecated, use eigenvalues property.
  warnings.warn('energies deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:149: DeprecationWarning: aux_ops deprecated, use aux_operator_eigenvalues property.
  DeprecationWarning)
2022-04-18 23:13:09,916:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: 
==================== Setting of VQE ============================
Algorithm: VQE
-- max_evals_grouped: 1
-- circuit_sampler: None
-- expectation: None
-- user_valid_expectation: False
-- include_custom: True
-- expect_op: None
-- operator: SummedOp([
  -0.7357540092257816 * IIIIIII,
  -0.2288745516226822 * ZIIZZZZ,
  -0.08075633021294323 * ZIZIIZX,
  0.08075633021294323 * ZIIZZZX,
  -0.2126764214252524 * ZIIZZZI,
  -0.09738191513341503 * ZIIZZYY,
  0.09738191513341503 * IIIIIYY,
  -0.29812362052731556 * ZIZIIZZ,
  -0.8639634364160073 * IZZIIII,
  -0.8639634364160074 * ZZIIIII,
  -0.44231058843891075 * IIIIIZI,
  -0.22887455162268228 * IIIIZII,
  -0.08075633021294322 * IIZXXII,
  -0.08075633021294322 * IIIYYII,
  -0.21267642142525234 * IIIZZII,
  0.097381915133415 * XXXXZII,
  0.097381915133415 * YXXYIII,
  -0.2981236205273156 * IIZZIII,
  -0.442310588438911 * ZIIIIII,
  0.0463246761640814 * IIIIIIZ,
  -0.01032126746930109 * IIIIIXX,
  0.01032126746930109 * ZIIZZXX,
  0.11134868672606245 * IIZZZII,
  0.15163721323912616 * ZZZZZZZ,
  0.15163721323912616 * IZIZZZZ,
  0.07087431851830596 * ZIIZZIZ,
  0.013982978676576965 * IIZZZIX,
  -0.013982978676576965 * IIIIIIX,
  -0.013904319899663523 * IIIIIXI,
  0.007236739291859843 * ZIZIIXZ,
  0.006667580607803681 * IIZZZXZ,
  0.006667580607803681 * ZIIZZXZ,
  0.007236739291859843 * IIIIIXZ,
  -0.013904319899663523 * ZIZIIXI,
  0.03856042532110293 * ZZIIIZX,
  -0.03856042532110293 * ZZZZZZX,
  0.03856042532110293 * IZZIIZX,
  -0.03856042532110293 * IZIZZZX,
  0.010940971625501722 * ZIZIIIX,
  -0.010940971625501722 * ZIIZZIX,
  0.16681567179576715 * ZIIZIZZ,
  0.009582509348883956 * ZIZIZZX,
  -0.009582509348883956 * ZIIZIZX,
  -0.03374909566998945 * IIIIXIZ,
  0.03374909566998945 * IIIZXIZ,
  0.03374909566998945 * IIIIXII,
  -0.03374909566998945 * IIIZXII,
  -0.006496599151396182 * IIIIXXX,
  0.006496599151396182 * IIIZXXX,
  -0.006496599151396182 * ZIIZYXY,
  0.006496599151396182 * ZIIIYXY,
  -0.009582509348883956 * ZIIXXZZ,
  -0.009582509348883956 * ZIZYYZZ,
  0.05032686280986827 * ZIZYYZX,
  0.05032686280986827 * ZIIXXZX,
  0.012312196124174519 * ZZYXYZX,
  0.012312196124174519 * ZIXXXZX,
  -0.012312196124174519 * IIXYXIY,
  -0.012312196124174519 * IZYYYIY,
  0.012312196124174519 * IYXXYZX,
  0.012312196124174519 * ZXXXXZX,
  -0.012312196124174519 * IXXYXIY,
  -0.012312196124174519 * ZYXYYIY,
  0.006496599151396179 * YXXXYIZ,
  0.006496599151396179 * XXXXXIZ,
  -0.006496599151396179 * YXXXYII,
  -0.006496599151396179 * XXXXXII,
  0.014606782802119706 * YXXXYXX,
  0.014606782802119706 * XXXXXXX,
  -0.014606782802119706 * XXXYXXY,
  -0.014606782802119706 * YXXYYXY,
  0.08007377183407087 * ZIIIIZZ,
  -0.011427882335929734 * ZIZZZZX,
  0.011427882335929734 * ZIIIIZX,
  0.0254108610125067 * IIIXIIZ,
  -0.0254108610125067 * IIZXZIZ,
  -0.0254108610125067 * IIIXIII,
  0.0254108610125067 * IIZXZII,
  0.016948916815649636 * IIIXIXX,
  -0.016948916815649636 * IIZXZXX,
  0.016948916815649636 * ZIIYZXY,
  -0.016948916815649636 * ZIZYIXY,
  0.003824668317904908 * XXXXZZZ,
  0.003824668317904908 * YXXYIZZ,
  -0.023616497423453318 * XXYYIZX,
  0.023616497423453318 * YXYXZZX,
  -0.023616497423453318 * XXXXZZX,
  -0.023616497423453318 * YXXYIZX,
  0.16167554953593075 * ZIZIZZZ,
  -0.01104027458837 * ZZXIIZX,
  0.01104027458837 * ZIXZIZX,
  -0.01104027458837 * IIYZZIY,
  0.01104027458837 * IZYIZIY,
  0.01104027458837 * IYYIIZX,
  0.01104027458837 * ZXXZIZX,
  -0.01104027458837 * IXYZZIY,
  0.01104027458837 * ZYXIZIY,
  -0.03085323671531317 * YXYIIIZ,
  -0.03085323671531317 * XXXZIIZ,
  0.03085323671531317 * YXYIIII,
  0.03085323671531317 * XXXZIII,
  -0.006108857981478039 * YXYIIXX,
  -0.006108857981478039 * XXXZIXX,
  0.006108857981478039 * XXYZZXY,
  -0.006108857981478039 * YXXIZXY,
  0.08548110132042568 * IIIZZZZ,
  0.004832113644023681 * IIZIIZX,
  -0.004832113644023681 * IIIZZZX,
  0.05529167989074184 * IIZZZIZ,
  0.1346272496606109 * ZZZZZZI,
  0.1346272496606109 * IZIZZZI,
  0.12102995194072982 * ZIIZZII,
  -0.017127683986048893 * IIZZZXX,
  0.017127683986048893 * ZIZIIXX,
  0.04231402672874744 * ZZZZZYY,
  -0.04231402672874744 * IZZIIYY,
  0.04231402672874744 * IZIZZYY,
  -0.04231402672874744 * ZZIIIYY,
  0.08007377183407087 * ZIIZIZI,
  0.003824668317904908 * ZIIZIYY,
  -0.003824668317904908 * IIIIZYY,
  -0.0254108610125067 * IIZZYIY,
  0.0254108610125067 * IIZIYIY,
  -0.0254108610125067 * IIIIXIX,
  0.0254108610125067 * IIIZXIX,
  0.011427882335929732 * ZIIXXZI,
  0.011427882335929732 * ZIZYYZI,
  -0.023616497423453314 * ZIIXXYY,
  -0.023616497423453314 * ZIZYYYY,
  -0.023616497423453314 * IIIYYYY,
  -0.023616497423453314 * IIZXXYY,
  0.016948916815649636 * YXYYXIY,
  -0.016948916815649636 * XXYYYIY,
  0.016948916815649636 * YXXXYIX,
  0.016948916815649636 * XXXXXIX,
  0.18387673414537975 * ZIIIIZI,
  -0.016147028770670823 * ZIIIIYY,
  0.016147028770670823 * IIIZZYY,
  0.030031560005132768 * IIZYZIY,
  -0.030031560005132768 * IIIYIIY,
  0.030031560005132768 * IIIXIIX,
  -0.030031560005132768 * IIZXZIX,
  0.0019605527151927726 * IZYXZIY,
  -0.0019605527151927726 * IIXYIIY,
  -0.0019605527151927726 * ZIXYIZY,
  0.0019605527151927726 * ZZYXZZY,
  0.0019605527151927726 * ZYXXZIY,
  -0.0019605527151927726 * IXXYIIY,
  -0.0019605527151927726 * ZXXYIZY,
  0.0019605527151927726 * IYXXZZY,
  -0.016147028770670823 * XXXXZZI,
  -0.016147028770670823 * YXXYIZI,
  0.049155586607482114 * XXXXZYY,
  0.049155586607482114 * YXXYIYY,
  0.0853232398958746 * ZIZIZZI,
  -0.006374915300929709 * ZIZIZYY,
  0.006374915300929709 * IIZZIYY,
  0.0235025992869786 * YXXZZIY,
  -0.0235025992869786 * XXYIZIY,
  -0.0235025992869786 * YXYIIIX,
  -0.0235025992869786 * XXXZIIX,
  -0.0028874517217562616 * YXIZZIY,
  0.0028874517217562616 * XYZZZIY,
  0.0028874517217562616 * XYZIIZY,
  -0.0028874517217562616 * YXIIIZY,
  -0.0028874517217562616 * YIIZZIY,
  0.0028874517217562616 * YZIZZIY,
  0.0028874517217562616 * YZIIIZY,
  -0.0028874517217562616 * YIIIIZY,
  0.17018553854821197 * IIIZZZI,
  0.14067927759719095 * ZZIIIZZ,
  0.14067927759719095 * IZZIIZZ,
  0.05599034557911307 * ZIZIIIZ,
  0.03085323671531317 * IIIIXXZ,
  -0.03085323671531317 * IIIZXXZ,
  -0.03085323671531317 * ZIZIXXI,
  0.03085323671531317 * ZIZZXXI,
  0.01104027458837 * ZZYXYZZ,
  0.01104027458837 * ZIXXXZZ,
  -0.01104027458837 * IIYXYII,
  -0.01104027458837 * IZXXXII,
  0.01104027458837 * IYXXYZZ,
  0.01104027458837 * ZXXXXZZ,
  -0.01104027458837 * IXYXYII,
  0.01104027458837 * ZYYXXII,
  -0.006108857981478039 * YXXXYXZ,
  -0.006108857981478039 * XXXXXXZ,
  0.006108857981478039 * XXYXYXI,
  -0.006108857981478039 * YXYXXXI,
  0.0853232398958746 * ZIZZZZZ,
  -0.0235025992869786 * IIIXIXZ,
  0.0235025992869786 * IIZXZXZ,
  0.0235025992869786 * ZIZXIXI,
  -0.0235025992869786 * ZIIXZXI,
  0.006374915300929709 * XXYYIZZ,
  -0.006374915300929709 * YXYXZZZ,
  -0.010054787292660256 * ZZXIIZZ,
  0.010054787292660256 * ZIXZIZZ,
  0.010054787292660256 * IIXIIII,
  -0.010054787292660256 * IZXZIII,
  0.010054787292660256 * IYYIIZZ,
  0.010054787292660256 * ZXXZIZZ,
  0.010054787292660256 * IXXIIII,
  0.010054787292660256 * ZYYZIII,
  0.029689176633404778 * YXYIIXZ,
  0.029689176633404778 * XXXZIXZ,
  0.029689176633404778 * XXXIIXI,
  0.029689176633404778 * YXYZIXI,
  0.08567952221251786 * IIZIIZZ,
  0.38947179486833605 * ZIZIIII,
  0.17134876142693017 * IZZIIZI,
  0.15163721323912616 * IZZIZII,
  0.03856042532110293 * IZZYYII,
  0.03856042532110293 * IZIXXII,
  0.1346272496606109 * IZZZZII,
  -0.0028874517217562616 * ZIXYIYI,
  0.0028874517217562616 * ZZYXZYI,
  0.0028874517217562616 * ZZYYIXI,
  0.0028874517217562616 * ZIXXZXI,
  0.04231402672874744 * YYYYIII,
  0.04231402672874744 * XYYXZII,
  0.14067927759719095 * IZIZIII,
  -0.012128953755816447 * ZXZIIII,
  0.012128953755816447 * IXIIIII,
  0.00447089682318726 * XYZIIYI,
  -0.00447089682318726 * YXIIIYI,
  0.00447089682318726 * XXIIIXI,
  0.00447089682318726 * YYZIIXI,
  0.17134876142693017 * ZZZIIII,
  0.17134876142693017 * ZZIIIZI,
  0.15163721323912616 * ZZIIZII,
  0.03856042532110293 * ZZIYYII,
  0.03856042532110293 * ZZZXXII,
  0.1346272496606109 * ZZIZZII,
  -0.0028874517217562616 * ZXXYIYI,
  0.0028874517217562616 * IYXXZYI,
  0.0028874517217562616 * IYXYIXI,
  0.0028874517217562616 * ZXXXZXI,
  -0.04231402672874744 * XYXYIII,
  0.04231402672874744 * YYXXZII,
  0.14067927759719095 * ZZZZIII,
  0.00447089682318726 * YZIIIYI,
  -0.00447089682318726 * YIIIIYI,
  0.00447089682318726 * XIIIIXI,
  -0.00447089682318726 * XZIIIXI,
  0.17134876142693017 * IZIIIII,
  0.08548110132042568 * IIIIZZI,
  0.0048321136440236815 * IIIYYZI,
  0.0048321136440236815 * IIZXXZI,
  0.08567952221251786 * IIZZIZI,
  0.0463246761640814 * IIIZIII,
  -0.01032126746930109 * XXXXIII,
  -0.01032126746930109 * YXXYZII,
  0.07087431851830596 * ZIIIZII,
  -0.013982978676576965 * IIZYYII,
  -0.013982978676576965 * IIIXXII,
  -0.013904319899663523 * XXXIXII,
  -0.007236739291859843 * YXYZXII,
  -0.006667580607803681 * XXYIYII,
  -0.006667580607803681 * YXXIYII,
  0.007236739291859843 * XXXZXII,
  0.013904319899663523 * YXYIXII,
  0.010940971625501722 * ZIZXXII,
  0.010940971625501722 * ZIIYYII,
  0.05529167989074184 * IIZIZII,
  0.017127683986048893 * XXYYZII,
  -0.017127683986048893 * YXYXIII,
  0.05599034557911307 * ZIZZIII
])
-- quantum_instance: None
-- optimizer: <qiskit.aqua.components.optimizers.cobyla.COBYLA object at 0x7f92a8fd4f90>
-- gradient: None
-- cost_fn: <bound method VQE._energy_evaluation of <qiskit.aqua.algorithms.minimum_eigen_solvers.vqe.VQE object at 0x7f92a8fd4f50>>
-- initial_point: [-1.74677322e-01 -6.03586272e-03 -5.49439016e-05  1.90193559e-05
  9.22067627e-03 -2.51817189e-03  4.36776364e-03  3.17898022e+00
  1.42722933e-01 -1.97235432e-04 -9.11796674e-03  4.48512230e-02
  9.57442185e-02  3.56783423e-03]
-- var_form:      ┌──────────┐            ┌──────────┐                                     »
q_0: ┤ RY(θ[0]) ├─────■──────┤ RY(θ[7]) ├─────────────────────────────────────»
     ├──────────┤   ┌─┴─┐    └──────────┘┌──────────┐                         »
q_1: ┤ RY(θ[1]) ├───┤ X ├─────────■──────┤ RY(θ[8]) ├─────────────────────────»
     └──┬───┬───┘┌──┴───┴───┐   ┌─┴─┐    └──────────┘┌──────────┐             »
q_2: ───┤ X ├────┤ RY(θ[2]) ├───┤ X ├─────────■──────┤ RY(θ[9]) ├─────────────»
     ┌──┴───┴───┐└──────────┘   └───┘       ┌─┴─┐    └──────────┘┌───────────┐»
q_3: ┤ RY(θ[3]) ├───────────────────────────┤ X ├─────────■──────┤ RY(θ[10]) ├»
     ├──────────┤                           └───┘       ┌─┴─┐    └───────────┘»
q_4: ┤ RY(θ[4]) ├───────────────────────────────────────┤ X ├──────────■──────»
     ├──────────┤                                       └───┘        ┌─┴─┐    »
q_5: ┤ RY(θ[5]) ├────────────────────────────────────────────────────┤ X ├────»
     ├──────────┤                                                    └───┘    »
q_6: ┤ RY(θ[6]) ├─────────────────────────────────────────────────────────────»
     └──────────┘                                                             »
«                               
«q_0: ──────────────────────────
«                               
«q_1: ──────────────────────────
«                               
«q_2: ──────────────────────────
«                               
«q_3: ──────────────────────────
«     ┌───────────┐             
«q_4: ┤ RY(θ[11]) ├─────────────
«     └───────────┘┌───────────┐
«q_5: ──────■──────┤ RY(θ[12]) ├
«         ┌─┴─┐    ├───────────┤
«q_6: ────┤ X ├────┤ RY(θ[13]) ├
«         └───┘    └───────────┘
-- var_form_params: [ParameterVectorElement(θ[0]), ParameterVectorElement(θ[10]), ParameterVectorElement(θ[11]), ParameterVectorElement(θ[12]), ParameterVectorElement(θ[13]), ParameterVectorElement(θ[1]), ParameterVectorElement(θ[2]), ParameterVectorElement(θ[3]), ParameterVectorElement(θ[4]), ParameterVectorElement(θ[5]), ParameterVectorElement(θ[6]), ParameterVectorElement(θ[7]), ParameterVectorElement(θ[8]), ParameterVectorElement(θ[9])]
-- parameterized_circuits: None
-- ret: None
-- eval_time: None
-- callback: None
-- aux_op_nones: [False, False, False, False, False, False]
-- aux_operators: [SummedOp([PauliOp(Pauli('IIIIIII'), coeff=5.999999999999994), PauliOp(Pauli('ZIIZZZZ'), coeff=-0.4999999999999996), PauliOp(Pauli('ZIIZZZI'), coeff=-0.4999999999999996), PauliOp(Pauli('ZIZIIZZ'), coeff=-0.4999999999999996), PauliOp(Pauli('IZZIIII'), coeff=-0.9999999999999992), PauliOp(Pauli('ZZIIIII'), coeff=-0.9999999999999992), PauliOp(Pauli('IIIIIZI'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIIZII'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIZZII'), coeff=-0.4999999999999996), PauliOp(Pauli('IIZZIII'), coeff=-0.4999999999999996), PauliOp(Pauli('ZIIIIII'), coeff=-0.4999999999999996)], coeff=1.0, abelian=False), SummedOp([PauliOp(Pauli('IIIIIII'), coeff=1.4999999999999987), PauliOp(Pauli('IIIIIIZ'), coeff=0.1249999999999999), PauliOp(Pauli('IIZZZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIZZIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIZIZZ'), coeff=-0.7499999999999992), PauliOp(Pauli('ZIIIIZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIZIZZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIZZZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIIZXZZ'), coeff=0.1249999999999999), PauliOp(Pauli('IIIIXIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIXZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZXIZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIXII'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIIZXZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZXII'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIXZI'), coeff=0.1249999999999999), PauliOp(Pauli('IIIYXIY'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIZYYZX'), coeff=-0.2499999999999998), PauliOp(Pauli('IIZXYIY'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIXXZX'), coeff=-0.2499999999999998), PauliOp(Pauli('YXXXXYX'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXXYXX'), coeff=-0.1249999999999999), PauliOp(Pauli('XXXXYYX'), coeff=0.1249999999999999), PauliOp(Pauli('XXXXXXX'), coeff=-0.1249999999999999), PauliOp(Pauli('XXXYXXY'), coeff=0.1249999999999999), PauliOp(Pauli('XXXYYYY'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXYYXY'), coeff=0.1249999999999999), PauliOp(Pauli('YXXYXYY'), coeff=0.1249999999999999), PauliOp(Pauli('IIZZZIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIZZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIZIZI'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIIIIZI'), coeff=-0.7499999999999992), PauliOp(Pauli('ZIZIZZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZZZI'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIIXIZX'), coeff=0.1249999999999999), PauliOp(Pauli('IIZYZIY'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIZXZZX'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIYIIY'), coeff=0.1249999999999999), PauliOp(Pauli('IIIXIIX'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIZYZZY'), coeff=0.1249999999999999), PauliOp(Pauli('IIZXZIX'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIYIZY'), coeff=-0.1249999999999999), PauliOp(Pauli('XXXYIXY'), coeff=-0.2499999999999998), PauliOp(Pauli('XXXXZYY'), coeff=-0.2499999999999998), PauliOp(Pauli('YXXXZXY'), coeff=0.2499999999999998), PauliOp(Pauli('YXXYIYY'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIZIIIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIZZZZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIZIIZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXZIYZ'), coeff=-0.1249999999999999), PauliOp(Pauli('YXYIIXZ'), coeff=-0.1249999999999999), PauliOp(Pauli('XXYIIYZ'), coeff=0.1249999999999999), PauliOp(Pauli('XXXZIXZ'), coeff=-0.1249999999999999), PauliOp(Pauli('XXXIIXI'), coeff=-0.1249999999999999), PauliOp(Pauli('XXYZIYI'), coeff=0.1249999999999999), PauliOp(Pauli('YXYZIXI'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXIIYI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIZZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIZZIZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZIII'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIZII'), coeff=0.1249999999999999), PauliOp(Pauli('IIZIZII'), coeff=0.1249999999999999), PauliOp(Pauli('ZIZZIII'), coeff=0.1249999999999999)], coeff=1.0, abelian=False), SummedOp([PauliOp(Pauli('ZIIZZZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIIZZZI'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIZIIZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIIZI'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIZII'), coeff=0.2499999999999998), PauliOp(Pauli('IIIZZII'), coeff=0.2499999999999998), PauliOp(Pauli('IIZZIII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIIIII'), coeff=0.2499999999999998)], coeff=1.0, abelian=False), PauliOp(Pauli('IIIIIII'), coeff=0.0), PauliOp(Pauli('IIIIIII'), coeff=0.0), PauliOp(Pauli('IIIIIII'), coeff=0.0)]
-- eval_count: 0
===============================================================
NLocal: EfficientSU2
-- base_name: nlocal
-- data: [(<qiskit.circuit.library.standard_gates.x.XGate object at 0x7f9290442e50>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa27d0>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa2190>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa2390>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa2250>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa2e50>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa2c10>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa2a50>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f9290442650>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f92a9fa2b10>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f92a9fa2890>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f92a9fa24d0>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f92a9fa20d0>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f92a9fa2990>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa2b90>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa28d0>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa2690>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa25d0>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa2d50>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa2590>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa2510>, [Qubit(QuantumRegister(7, 'q'), 6)], [])]
-- qregs: [QuantumRegister(7, 'q')]
-- qubits: [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)]
-- qubit_set: {Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 6), Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 3)}
-- parameter_table: ParameterTable({ParameterVectorElement(θ[0]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa27d0>, 0)], ParameterVectorElement(θ[1]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa2190>, 0)], ParameterVectorElement(θ[2]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa2390>, 0)], ParameterVectorElement(θ[3]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa2250>, 0)], ParameterVectorElement(θ[4]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa2e50>, 0)], ParameterVectorElement(θ[5]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa2c10>, 0)], ParameterVectorElement(θ[6]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa2a50>, 0)], ParameterVectorElement(θ[7]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa2b90>, 0)], ParameterVectorElement(θ[8]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa28d0>, 0)], ParameterVectorElement(θ[9]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa2690>, 0)], ParameterVectorElement(θ[10]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa25d0>, 0)], ParameterVectorElement(θ[11]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa2d50>, 0)], ParameterVectorElement(θ[12]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa2590>, 0)], ParameterVectorElement(θ[13]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa2510>, 0)]})
-- clbits: []
-- clbit_set: set()
-- ancillas: []
-- calibrations: defaultdict(<class 'dict'>, {})
-- parameters: [ParameterVectorElement(θ[0]), ParameterVectorElement(θ[1]), ParameterVectorElement(θ[2]), ParameterVectorElement(θ[3]), ParameterVectorElement(θ[4]), ParameterVectorElement(θ[5]), ParameterVectorElement(θ[6]), ParameterVectorElement(θ[7]), ParameterVectorElement(θ[8]), ParameterVectorElement(θ[9]), ParameterVectorElement(θ[10]), ParameterVectorElement(θ[11]), ParameterVectorElement(θ[12]), ParameterVectorElement(θ[13])]
-- layout: None
-- global_phase: 0
-- metadata: None
-- cregs: []
-- num_qubits: 7
-- insert_barriers: False
-- reps: 1
-- entanglement_blocks: [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7f9290442dd0>]
-- rotation_blocks: [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7f9290442e90>]
-- prepended_blocks: []
-- prepended_entanglement: []
-- appended_blocks: []
-- appended_entanglement: []
-- entanglement: linear
-- entangler_maps: None
-- ordered_parameters: θ, ['θ[0]', 'θ[1]', 'θ[2]', 'θ[3]', 'θ[4]', 'θ[5]', 'θ[6]', 'θ[7]', 'θ[8]', 'θ[9]', 'θ[10]', 'θ[11]', 'θ[12]', 'θ[13]']
-- overwrite_block_parameters: True
-- skip_final_rotation_layer: False
-- skip_unentangled_qubits: False
-- initial_state: <qiskit.chemistry.components.initial_states.hartree_fock.HartreeFock object at 0x7f92b971ced0>
-- initial_state_circuit:           
q_0: ─────
          
q_1: ─────
     ┌───┐
q_2: ┤ X ├
     └───┘
q_3: ─────
          
q_4: ─────
          
q_5: ─────
          
q_6: ─────
          
-- bounds: None
===============================================================
Optimizer: COBYLA
-- gradient_support_level: 1
-- bounds_support_level: 1
-- initial_point_support_level: 3
-- options: {'maxiter': 0, 'disp': False, 'rhobeg': 1.0}
-- max_evals_grouped: 1
-- tol: None
===============================================================

2022-04-18 23:13:09,917:qiskit.aqua.quantum_instance:INFO: statevector backend only works with shot=1, changing shots from 1024 to 1.
2022-04-18 23:13:09,917:qiskit.aqua.quantum_instance:INFO: 
Qiskit Terra version: 0.17.0
Backend: 'statevector_simulator (AerProvider)', with following setting:
{'basis_gates': ['ccx', 'cp', 'cswap', 'csx', 'cu1', 'cu2', 'cu3', 'cx', 'cy', 'cz', 'delay', 'diagonal', 'h', 'id', 'initialize', 'mcp', 'mcr', 'mcrx', 'mcry', 'mcrz', 'mcswap', 'mcsx', 'mcu1', 'mcu2', 'mcu3', 'mcx', 'mcy', 'mcz', 'multiplexer', 'p', 'pauli', 'r', 'rx', 'rxx', 'ry', 'ryy', 'rz', 'rzx', 'rzz', 's', 'sdg', 'swap', 'sx', 't', 'tdg', 'u', 'u1', 'u2', 'u3', 'unitary', 'x', 'y', 'z', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector'], 'coupling_map': None}
{'initial_layout': None, 'seed_transpiler': None, 'optimization_level': None}
RunConfig(max_credits=10, shots=1)
{'timeout': None}
{}
{}
Measurement mitigation: None
2022-04-18 23:13:09,918:qiskit.aqua.algorithms.vq_algorithm:INFO: Starting optimizer.
bounds=[(-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793)]
initial point=[-1.74677322e-01 -6.03586272e-03 -5.49439016e-05  1.90193559e-05
  9.22067627e-03 -2.51817189e-03  4.36776364e-03  3.17898022e+00
  1.42722933e-01 -1.97235432e-04 -9.11796674e-03  4.48512230e-02
  9.57442185e-02  3.56783423e-03]
2022-04-18 23:13:10,161:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: Energy evaluation returned [-2.84674527] - 8.84604 (ms), eval count: 1
2022-04-18 23:13:10,161:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: Optimization complete in 0.24294400215148926 seconds.
Found opt_params [-1.74677322e-01 -6.03586272e-03 -5.49439016e-05  1.90193559e-05
  9.22067627e-03 -2.51817189e-03  4.36776364e-03  3.17898022e+00
  1.42722933e-01 -1.97235432e-04 -9.11796674e-03  4.48512230e-02
  9.57442185e-02  3.56783423e-03] in 1 evals
ancilla op commutes?  True
ancilla op commutes?  True
ancilla op commutes?  True
ancilla op commutes?  False
ancilla op commutes?  False
ancilla op commutes?  False
#INFO: **** input file is /Users/mario/Documents/GitHub/VATech/quantum_database/second_quantization/circuits/hardware_efficient/gather_beh2_results_ry_linear.py ****
from qiskit                                        import *
from qiskit.chemistry.drivers                      import UnitsType,HFMethodType
from qiskit.chemistry.core                         import Hamiltonian,TransformationType,QubitMappingType
from qiskit.chemistry.components.initial_states    import HartreeFock
from qiskit.chemistry.components.variational_forms import UCCSD
from qiskit.aqua.components.optimizers             import L_BFGS_B,COBYLA,CG
from qiskit.aqua.algorithms                        import VQE
from qiskit.aqua                                   import QuantumInstance,aqua_globals
from qiskit.circuit.library                        import EfficientSU2

import logging
from   qiskit.chemistry import set_qiskit_chemistry_logging
from   qiskit.aqua      import set_qiskit_aqua_logging
set_qiskit_chemistry_logging(logging.INFO)
set_qiskit_aqua_logging(logging.INFO)

import sys
import numpy as np
sys.path.append('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/subroutines')
sys.path.append('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/subroutines/pyscfd')
from pyscfdriver import *
from utils       import *

def print_circuit(fname,circuit):
    outf = open(fname,'w')
    for gate in circuit:
        gate_name = gate[0].name
        qubits = [q.index for q in gate[1]]
        outf.write(str(gate_name)+' | '+' '.join([str(x) for x in qubits])+' | '+' '.join([str(x._symbol_expr) for x in gate[0].params])+'\n')
    outf.close()

def print_results(fname,res_vqe,res_ee,dN=0):
    outf = open(fname,'w')
    outf.write('%.12f %.12f \n' % (res_vqe[0],np.real(res_ee[0])))
    outf.write('%.12f %.12f \n' % (res_vqe[1]+dN,np.real(res_ee[1]+dN)))
    outf.write('%.12f %.12f \n' % (res_vqe[2],np.real(res_ee[2])))
    outf.write('%.12f %.12f \n' % (res_vqe[3],np.real(res_ee[3])))
    outf.close()

dist_list = [2.1,2.3,2.5,2.7,2.9,3.1,3.3,3.5] #[0.7,0.9,1.1,1.3,1.5,1.7,1.9,2.1,2.3,2.5,2.7,2.9,3.1,3.3,3.5,3.7,3.9,4.1,4.3,4.5]
depth_list = [1] #[1,2,3,4,5,6,7,8]

for depth in depth_list:
  for dist in dist_list:

    outfile = open('pes.txt','w')
    
    outfile.write("Bond distance: {}\n".format(dist))
    rho = np.load('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/SCF_FCI/beh2/res_fourth_pass.npy',allow_pickle=True).item()
    rho = rho[str(dist)]['rho_scf']
    driver    = PySCFDriver(atom="Be 0.0000 0.0000 0.0000; H 0.0000 0.0000 -{0}; H 0.0000 0.0000 {0}".format(dist),
                            unit=UnitsType.ANGSTROM,charge=0,spin=0,basis='sto-6g',hf_method=HFMethodType.RHF,symgroup='dooh',
                            outfile=outfile,irrep_nelec={'A1g':4,'A1u':2},rho=rho)
    molecule  = driver.run()
    outfile.write("\nHartree-Fock energy %f \n" % (molecule.hf_energy))
    
    core      = Hamiltonian(transformation=TransformationType.FULL,qubit_mapping=QubitMappingType.PARITY,two_qubit_reduction=True,freeze_core=False,orbital_reduction=[0])
    H_op,A_op = core.run(molecule)
    
    z2syms,sqlist           = None,None
    H_op,A_op,z2syms,sqlist = taper(molecule,core,H_op,A_op,outfile)
    
    init_state = HartreeFock(num_orbitals=core._molecule_info['num_orbitals'],qubit_mapping=core._qubit_mapping,two_qubit_reduction=core._two_qubit_reduction,num_particles=core._molecule_info['num_particles'],sq_list=sqlist)
    init_state.construct_circuit()
    x_hf = init_state._bitstr
 
    outfile.write("\nHartree-Fock energy %f \n" % (molecule.hf_energy))
    outfile.write("\nHartree-Fock circuit\n")
    outfile.write(str(init_state.construct_circuit().draw())+"\n")

    par = np.loadtxt('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/Ry_linear_DEPTH_%d/beh2/R_%s/output_parameters.txt' % (depth,str(dist)))
    var_form  = EfficientSU2(num_qubits=H_op.num_qubits,reps=depth,entanglement='linear',su2_gates=['ry'],initial_state=init_state)
    circuit = var_form.bind_parameters(par)

    optimizer = COBYLA(maxiter=0)
    algo      = VQE(H_op,var_form,optimizer,aux_operators=A_op,include_custom=True,initial_point=par)
    backend          = Aer.get_backend('statevector_simulator')
    quantum_instance = QuantumInstance(backend=backend)
    algo_result      = algo.run(quantum_instance)
    
    # -----------------------------------------------------------------------------------------------------------------------
    
    p1 = algo._ret['opt_params']
    res_vqe,res_ee = get_results(H_op,A_op,molecule,core,algo_result,outfile)
    print_results('ry_linear_%d/beh2_%s_results.txt' % (depth,str(dist)),res_vqe,res_ee,dN=2)

    circuit = var_form.bind_parameters(p1)
    print_circuit('ry_linear_%d/beh2_%s_circuit.txt' % (depth,str(dist)),circuit)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Mon Apr 18 23:13:10 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 3
[INPUT] num. electrons = 6
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry Dooh subgroup None
[INPUT] Mole.unit = Angstrom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000  -2.500000000000 AA    0.000000000000   0.000000000000  -4.724315311413 Bohr
[INPUT]  3 H      0.000000000000   0.000000000000   2.500000000000 AA    0.000000000000   0.000000000000   4.724315311413 Bohr

nuclear repulsion = 1.799202517128
point group symmetry = Dooh
num. orbitals of irrep A1g = 3
num. orbitals of irrep A1u = 2
num. orbitals of irrep E1uy = 1
num. orbitals of irrep E1ux = 1
number of shells = 5
number of NR pGTOs = 42
number of NR cGTOs = 7
basis = sto-6g
ecp = {}
CPU time:        26.42

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 6 electrons in irreps ['A1g', 'A1u']
    0 free electrons in irreps E1uy E1ux




******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmplwp270cf
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmplwp270cf
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (A1u) = -0.228170648196324  LUMO (A1g) = 0.092864189364319
Initial guess E= -15.326144364041  |g|= 1.18443e-11
macro= 0  E= -15.326144364041  delta_E= 1.42109e-14  |g|= 1.18443e-11  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-15.326144364041  |g|= 1.18443e-11  total 2 KF 4 JK
converged SCF energy = -15.326144364041
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/chemistry_operator.py:170: DeprecationWarning: The qiskit.chemistry.chemistry_operator.MolecularChemistryResult object is deprecated as of 0.8.0 and will be removed no sooner than 3 months after the release. You should use qiskit.chemistry.algorithms.ground_state_solvers.FermionicGroundStateResult instead.
  super().__init__(a_dict)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:381: DeprecationWarning: The qiskit.chemistry.chemistry_operator.MolecularGroundStateResult object is deprecated as of 0.8.0 and will be removed no sooner than 3 months after the release. You should use qiskit.chemistry.algorithms.ground_state_solvers.FermionicGroundStateResult instead.
  mgsr = MolecularGroundStateResult()
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:91: DeprecationWarning: The ChemistryOperator is deprecated as of Qiskit Aqua 0.8.0 and will be removed no earlier than 3 months after the release date. Instead, the FermionicTransformation can be used to transform QMolecules and construct ground state result objects.
  super().__init__()
2022-04-18 23:13:10,623:qiskit.chemistry.core.hamiltonian:INFO: Configured orbital reduction list: [0]
2022-04-18 23:13:10,623:qiskit.chemistry.core.hamiltonian:INFO: Combined orbital reduction list: [0]
2022-04-18 23:13:10,623:qiskit.chemistry.core.hamiltonian:INFO:   converting to spin orbital reduction list: [0 7]
2022-04-18 23:13:10,624:qiskit.chemistry.core.hamiltonian:INFO:     => freezing spin orbitals: [0 7]
2022-04-18 23:13:10,624:qiskit.chemistry.core.hamiltonian:INFO:     => removing spin orbitals: [] (indexes accounting for freeze [])
2022-04-18 23:13:10,705:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital energy shift: -14.440220737870794
2022-04-18 23:13:13,163:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital x dipole shift: 0.0
2022-04-18 23:13:13,235:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital y dipole shift: 0.0
2022-04-18 23:13:13,299:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital z dipole shift: 0.0
2022-04-18 23:13:13,390:qiskit.chemistry.core.hamiltonian:INFO: Molecule num electrons: [3, 3], remaining for processing: [2, 2]
2022-04-18 23:13:13,390:qiskit.chemistry.core.hamiltonian:INFO: Molecule num spin orbitals: 14, remaining for processing: 12
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:417: DeprecationWarning: Processing a dictionary result is deprecated, pass a (minimum) eigensolver result now.
  ' pass a (minimum) eigensolver result now.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:134: DeprecationWarning: energy deprecated, use eigenvalues property.
  warnings.warn('energy deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:134: DeprecationWarning: energy deprecated, use eigenvalues property.
  warnings.warn('energy deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:149: DeprecationWarning: aux_ops deprecated, use aux_operator_eigenvalues property.
  DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:138: DeprecationWarning: energies deprecated, use eigenvalues property.
  warnings.warn('energies deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:138: DeprecationWarning: energies deprecated, use eigenvalues property.
  warnings.warn('energies deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:149: DeprecationWarning: aux_ops deprecated, use aux_operator_eigenvalues property.
  DeprecationWarning)
2022-04-18 23:13:19,175:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: 
==================== Setting of VQE ============================
Algorithm: VQE
-- max_evals_grouped: 1
-- circuit_sampler: None
-- expectation: None
-- user_valid_expectation: False
-- include_custom: True
-- expect_op: None
-- operator: SummedOp([
  -0.6971393275023229 * IIIIIII,
  -0.23439530319896676 * ZIIZZZZ,
  -0.0874137428020206 * ZIZIIZX,
  0.0874137428020206 * ZIIZZZX,
  -0.20215998734499308 * ZIIZZZI,
  -0.10034816407311499 * ZIIZZYY,
  0.10034816407311499 * IIIIIYY,
  -0.26923602173536393 * ZIZIIZZ,
  -0.8620891552591532 * IZZIIII,
  -0.8620891552591532 * ZZIIIII,
  -0.42144191292249117 * IIIIIZI,
  -0.23439530319896676 * IIIIZII,
  -0.0874137428020206 * IIZXXII,
  -0.0874137428020206 * IIIYYII,
  -0.20215998734499277 * IIIZZII,
  0.10034816407311495 * XXXXZII,
  0.10034816407311495 * YXXYIII,
  -0.2692360217353636 * IIZZIII,
  -0.4214419129224912 * ZIIIIII,
  0.04452675132275261 * IIIIIIZ,
  -0.010376501958138542 * IIIIIXX,
  0.010376501958138542 * ZIIZZXX,
  0.10366262492924204 * IIZZZII,
  0.15135318128859582 * ZZZZZZZ,
  0.15135318128859582 * IZIZZZZ,
  0.06908487446934712 * ZIIZZIZ,
  0.013969031481375568 * IIZZZIX,
  -0.013969031481375568 * IIIIIIX,
  -0.012477802273031567 * IIIIIXI,
  0.0051545199025875505 * ZIZIIXZ,
  0.007323282370444014 * IIZZZXZ,
  0.007323282370444014 * ZIIZZXZ,
  0.0051545199025875505 * IIIIIXZ,
  -0.012477802273031567 * ZIZIIXI,
  0.04136472542198726 * ZZIIIZX,
  -0.04136472542198726 * ZZZZZZX,
  0.04136472542198726 * IZZIIZX,
  -0.04136472542198726 * IZIZZZX,
  0.011630451886861447 * ZIZIIIX,
  -0.011630451886861447 * ZIIZZIX,
  0.16316808632642843 * ZIIZIZZ,
  0.013455382986371636 * ZIZIZZX,
  -0.013455382986371636 * ZIIZIZX,
  -0.03153223309169867 * IIIIXIZ,
  0.03153223309169867 * IIIZXIZ,
  0.03153223309169867 * IIIIXII,
  -0.03153223309169867 * IIIZXII,
  -0.004873127866612824 * IIIIXXX,
  0.004873127866612824 * IIIZXXX,
  -0.004873127866612824 * ZIIZYXY,
  0.004873127866612824 * ZIIIYXY,
  -0.013455382986371636 * ZIIXXZZ,
  -0.013455382986371636 * ZIZYYZZ,
  0.05134977890655581 * ZIZYYZX,
  0.05134977890655581 * ZIIXXZX,
  0.013051221796810633 * ZZYXYZX,
  0.013051221796810633 * ZIXXXZX,
  -0.013051221796810633 * IIXYXIY,
  -0.013051221796810633 * IZYYYIY,
  0.013051221796810633 * IYXXYZX,
  0.013051221796810633 * ZXXXXZX,
  -0.013051221796810633 * IXXYXIY,
  -0.013051221796810633 * ZYXYYIY,
  0.004873127866612824 * YXXXYIZ,
  0.004873127866612824 * XXXXXIZ,
  -0.004873127866612824 * YXXXYII,
  -0.004873127866612824 * XXXXXII,
  0.014418249133648987 * YXXXYXX,
  0.014418249133648987 * XXXXXXX,
  -0.014418249133648987 * XXXYXXY,
  -0.014418249133648987 * YXXYYXY,
  0.07605898441445129 * ZIIIIZZ,
  -0.012920362027649762 * ZIZZZZX,
  0.012920362027649762 * ZIIIIZX,
  0.02688939350902533 * IIIXIIZ,
  -0.02688939350902533 * IIZXZIZ,
  -0.02688939350902533 * IIIXIII,
  0.02688939350902533 * IIZXZII,
  0.016551935891984955 * IIIXIXX,
  -0.016551935891984955 * IIZXZXX,
  0.016551935891984955 * ZIIYZXY,
  -0.016551935891984955 * ZIZYIXY,
  0.005503374091525718 * XXXXZZZ,
  0.005503374091525718 * YXXYIZZ,
  -0.023875218262428954 * XXYYIZX,
  0.023875218262428954 * YXYXZZX,
  -0.023875218262428954 * XXXXZZX,
  -0.023875218262428954 * YXXYIZX,
  0.15501240383579784 * ZIZIZZZ,
  -0.0108349207476223 * ZZXIIZX,
  0.0108349207476223 * ZIXZIZX,
  -0.0108349207476223 * IIYZZIY,
  0.0108349207476223 * IZYIZIY,
  0.0108349207476223 * IYYIIZX,
  0.0108349207476223 * ZXXZIZX,
  -0.0108349207476223 * IXYZZIY,
  0.0108349207476223 * ZYXIZIY,
  -0.029029738165016507 * YXYIIIZ,
  -0.029029738165016507 * XXXZIIZ,
  0.029029738165016507 * YXYIIII,
  0.029029738165016507 * XXXZIII,
  -0.004072559374911672 * YXYIIXX,
  -0.004072559374911672 * XXXZIXX,
  0.004072559374911672 * XXYZZXY,
  -0.004072559374911672 * YXXIZXY,
  0.08350312360299612 * IIIZZZZ,
  0.007557892511949777 * IIZIIZX,
  -0.007557892511949777 * IIIZZZX,
  0.04979710662039114 * IIZZZIZ,
  0.12651608517786936 * ZZZZZZI,
  0.12651608517786936 * IZIZZZI,
  0.11193071978326997 * ZIIZZII,
  -0.016553034337864918 * IIZZZXX,
  0.016553034337864918 * ZIZIIXX,
  0.04368800573785031 * ZZZZZYY,
  -0.04368800573785031 * IZZIIYY,
  0.04368800573785031 * IZIZZYY,
  -0.04368800573785031 * ZZIIIYY,
  0.07605898441445129 * ZIIZIZI,
  0.005503374091525717 * ZIIZIYY,
  -0.005503374091525717 * IIIIZYY,
  -0.02688939350902533 * IIZZYIY,
  0.02688939350902533 * IIZIYIY,
  -0.02688939350902533 * IIIIXIX,
  0.02688939350902533 * IIIZXIX,
  0.012920362027649762 * ZIIXXZI,
  0.012920362027649762 * ZIZYYZI,
  -0.023875218262428954 * ZIIXXYY,
  -0.023875218262428954 * ZIZYYYY,
  -0.023875218262428954 * IIIYYYY,
  -0.023875218262428954 * IIZXXYY,
  0.016551935891984955 * YXYYXIY,
  -0.016551935891984955 * XXYYYIY,
  0.016551935891984955 * YXXXYIX,
  0.016551935891984955 * XXXXXIX,
  0.1800666443443526 * ZIIIIZI,
  -0.020286362521561803 * ZIIIIYY,
  0.020286362521561803 * IIIZZYY,
  0.034200990977547925 * IIZYZIY,
  -0.034200990977547925 * IIIYIIY,
  0.034200990977547925 * IIIXIIX,
  -0.034200990977547925 * IIZXZIX,
  0.0017132812496479537 * IZYXZIY,
  -0.0017132812496479537 * IIXYIIY,
  -0.0017132812496479537 * ZIXYIZY,
  0.0017132812496479537 * ZZYXZZY,
  0.0017132812496479537 * ZYXXZIY,
  -0.0017132812496479537 * IXXYIIY,
  -0.0017132812496479537 * ZXXYIZY,
  0.0017132812496479537 * IYXXZZY,
  -0.020286362521561806 * XXXXZZI,
  -0.020286362521561806 * YXXYIZI,
  0.04889371395823411 * XXXXZYY,
  0.04889371395823411 * YXXYIYY,
  0.08399809759793907 * ZIZIZZI,
  -0.007987368214021212 * ZIZIZYY,
  0.007987368214021212 * IIZZIYY,
  0.024540402551886133 * YXXZZIY,
  -0.024540402551886133 * XXYIZIY,
  -0.024540402551886133 * YXYIIIX,
  -0.024540402551886133 * XXXZIIX,
  -0.0027593675145394067 * YXIZZIY,
  0.0027593675145394067 * XYZZZIY,
  0.0027593675145394067 * XYZIIZY,
  -0.0027593675145394067 * YXIIIZY,
  -0.0027593675145394067 * YIIZZIY,
  0.0027593675145394067 * YZIZZIY,
  0.0027593675145394067 * YZIIIZY,
  -0.0027593675145394067 * YIIIIZY,
  0.1608244337415041 * IIIZZZI,
  0.1331966514110431 * ZZIIIZZ,
  0.1331966514110431 * IZZIIZZ,
  0.05353316991191945 * ZIZIIIZ,
  0.029029738165016507 * IIIIXXZ,
  -0.029029738165016507 * IIIZXXZ,
  -0.029029738165016507 * ZIZIXXI,
  0.029029738165016507 * ZIZZXXI,
  0.0108349207476223 * ZZYXYZZ,
  0.0108349207476223 * ZIXXXZZ,
  -0.0108349207476223 * IIYXYII,
  -0.0108349207476223 * IZXXXII,
  0.0108349207476223 * IYXXYZZ,
  0.0108349207476223 * ZXXXXZZ,
  -0.0108349207476223 * IXYXYII,
  0.0108349207476223 * ZYYXXII,
  -0.004072559374911672 * YXXXYXZ,
  -0.004072559374911672 * XXXXXXZ,
  0.004072559374911672 * XXYXYXI,
  -0.004072559374911672 * YXYXXXI,
  0.08399809759793907 * ZIZZZZZ,
  -0.024540402551886133 * IIIXIXZ,
  0.024540402551886133 * IIZXZXZ,
  0.024540402551886133 * ZIZXIXI,
  -0.024540402551886133 * ZIIXZXI,
  0.00798736821402121 * XXYYIZZ,
  -0.00798736821402121 * YXYXZZZ,
  -0.009079951056034454 * ZZXIIZZ,
  0.009079951056034454 * ZIXZIZZ,
  0.009079951056034454 * IIXIIII,
  -0.009079951056034454 * IZXZIII,
  0.009079951056034454 * IYYIIZZ,
  0.009079951056034454 * ZXXZIZZ,
  0.009079951056034454 * IXXIIII,
  0.009079951056034454 * ZYYZIII,
  0.027856035482150238 * YXYIIXZ,
  0.027856035482150238 * XXXZIXZ,
  0.027856035482150238 * XXXIIXI,
  0.027856035482150238 * YXYZIXI,
  0.08138920539406969 * IIZIIZZ,
  0.38947179486833605 * ZIZIIII,
  0.17090027060439053 * IZZIIZI,
  0.15135318128859582 * IZZIZII,
  0.04136472542198726 * IZZYYII,
  0.04136472542198726 * IZIXXII,
  0.12651608517786936 * IZZZZII,
  -0.0027593675145394063 * ZIXYIYI,
  0.0027593675145394063 * ZZYXZYI,
  0.0027593675145394063 * ZZYYIXI,
  0.0027593675145394063 * ZIXXZXI,
  0.04368800573785031 * YYYYIII,
  0.04368800573785031 * XYYXZII,
  0.1331966514110431 * IZIZIII,
  -0.012128953755816447 * ZXZIIII,
  0.012128953755816447 * IXIIIII,
  0.004592330253210035 * XYZIIYI,
  -0.004592330253210035 * YXIIIYI,
  0.004592330253210035 * XXIIIXI,
  0.004592330253210035 * YYZIIXI,
  0.17090027060439053 * ZZZIIII,
  0.17090027060439053 * ZZIIIZI,
  0.15135318128859582 * ZZIIZII,
  0.04136472542198726 * ZZIYYII,
  0.04136472542198726 * ZZZXXII,
  0.12651608517786936 * ZZIZZII,
  -0.0027593675145394063 * ZXXYIYI,
  0.0027593675145394063 * IYXXZYI,
  0.0027593675145394063 * IYXYIXI,
  0.0027593675145394063 * ZXXXZXI,
  -0.04368800573785031 * XYXYIII,
  0.04368800573785031 * YYXXZII,
  0.1331966514110431 * ZZZZIII,
  0.004592330253210035 * YZIIIYI,
  -0.004592330253210035 * YIIIIYI,
  0.004592330253210035 * XIIIIXI,
  -0.004592330253210035 * XZIIIXI,
  0.17090027060439053 * IZIIIII,
  0.08350312360299612 * IIIIZZI,
  0.007557892511949777 * IIIYYZI,
  0.007557892511949777 * IIZXXZI,
  0.08138920539406969 * IIZZIZI,
  0.04452675132275261 * IIIZIII,
  -0.010376501958138542 * XXXXIII,
  -0.010376501958138542 * YXXYZII,
  0.06908487446934712 * ZIIIZII,
  -0.013969031481375568 * IIZYYII,
  -0.013969031481375568 * IIIXXII,
  -0.012477802273031567 * XXXIXII,
  -0.0051545199025875505 * YXYZXII,
  -0.007323282370444014 * XXYIYII,
  -0.007323282370444014 * YXXIYII,
  0.0051545199025875505 * XXXZXII,
  0.012477802273031567 * YXYIXII,
  0.011630451886861447 * ZIZXXII,
  0.011630451886861447 * ZIIYYII,
  0.04979710662039114 * IIZIZII,
  0.016553034337864918 * XXYYZII,
  -0.016553034337864918 * YXYXIII,
  0.05353316991191945 * ZIZZIII
])
-- quantum_instance: None
-- optimizer: <qiskit.aqua.components.optimizers.cobyla.COBYLA object at 0x7f92903f0790>
-- gradient: None
-- cost_fn: <bound method VQE._energy_evaluation of <qiskit.aqua.algorithms.minimum_eigen_solvers.vqe.VQE object at 0x7f927944e6d0>>
-- initial_point: [-3.56317122e-01 -1.27530014e-02 -8.15357061e-05 -5.77177407e-06
  7.86817729e-05  1.00299167e-02 -1.96273367e-02  3.13525898e+00
  1.38299971e+00  1.06369019e-04  9.23550126e-05  7.89009643e-03
  2.12669650e-03  4.75494902e-04]
-- var_form:      ┌──────────┐            ┌──────────┐                                     »
q_0: ┤ RY(θ[0]) ├─────■──────┤ RY(θ[7]) ├─────────────────────────────────────»
     ├──────────┤   ┌─┴─┐    └──────────┘┌──────────┐                         »
q_1: ┤ RY(θ[1]) ├───┤ X ├─────────■──────┤ RY(θ[8]) ├─────────────────────────»
     └──┬───┬───┘┌──┴───┴───┐   ┌─┴─┐    └──────────┘┌──────────┐             »
q_2: ───┤ X ├────┤ RY(θ[2]) ├───┤ X ├─────────■──────┤ RY(θ[9]) ├─────────────»
     ┌──┴───┴───┐└──────────┘   └───┘       ┌─┴─┐    └──────────┘┌───────────┐»
q_3: ┤ RY(θ[3]) ├───────────────────────────┤ X ├─────────■──────┤ RY(θ[10]) ├»
     ├──────────┤                           └───┘       ┌─┴─┐    └───────────┘»
q_4: ┤ RY(θ[4]) ├───────────────────────────────────────┤ X ├──────────■──────»
     ├──────────┤                                       └───┘        ┌─┴─┐    »
q_5: ┤ RY(θ[5]) ├────────────────────────────────────────────────────┤ X ├────»
     ├──────────┤                                                    └───┘    »
q_6: ┤ RY(θ[6]) ├─────────────────────────────────────────────────────────────»
     └──────────┘                                                             »
«                               
«q_0: ──────────────────────────
«                               
«q_1: ──────────────────────────
«                               
«q_2: ──────────────────────────
«                               
«q_3: ──────────────────────────
«     ┌───────────┐             
«q_4: ┤ RY(θ[11]) ├─────────────
«     └───────────┘┌───────────┐
«q_5: ──────■──────┤ RY(θ[12]) ├
«         ┌─┴─┐    ├───────────┤
«q_6: ────┤ X ├────┤ RY(θ[13]) ├
«         └───┘    └───────────┘
-- var_form_params: [ParameterVectorElement(θ[0]), ParameterVectorElement(θ[10]), ParameterVectorElement(θ[11]), ParameterVectorElement(θ[12]), ParameterVectorElement(θ[13]), ParameterVectorElement(θ[1]), ParameterVectorElement(θ[2]), ParameterVectorElement(θ[3]), ParameterVectorElement(θ[4]), ParameterVectorElement(θ[5]), ParameterVectorElement(θ[6]), ParameterVectorElement(θ[7]), ParameterVectorElement(θ[8]), ParameterVectorElement(θ[9])]
-- parameterized_circuits: None
-- ret: None
-- eval_time: None
-- callback: None
-- aux_op_nones: [False, False, False, False, False, False]
-- aux_operators: [SummedOp([PauliOp(Pauli('IIIIIII'), coeff=5.999999999999994), PauliOp(Pauli('ZIIZZZZ'), coeff=-0.4999999999999996), PauliOp(Pauli('ZIIZZZI'), coeff=-0.4999999999999996), PauliOp(Pauli('ZIZIIZZ'), coeff=-0.4999999999999996), PauliOp(Pauli('IZZIIII'), coeff=-0.9999999999999992), PauliOp(Pauli('ZZIIIII'), coeff=-0.9999999999999992), PauliOp(Pauli('IIIIIZI'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIIZII'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIZZII'), coeff=-0.4999999999999996), PauliOp(Pauli('IIZZIII'), coeff=-0.4999999999999996), PauliOp(Pauli('ZIIIIII'), coeff=-0.4999999999999996)], coeff=1.0, abelian=False), SummedOp([PauliOp(Pauli('IIIIIII'), coeff=1.4999999999999987), PauliOp(Pauli('IIIIIIZ'), coeff=0.1249999999999999), PauliOp(Pauli('IIZZZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIZZIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIZIZZ'), coeff=-0.7499999999999992), PauliOp(Pauli('ZIIIIZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIZIZZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIZZZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIIZXZZ'), coeff=0.1249999999999999), PauliOp(Pauli('IIIIXIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIXZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZXIZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIXII'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIIZXZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZXII'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIXZI'), coeff=0.1249999999999999), PauliOp(Pauli('IIIYXIY'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIZYYZX'), coeff=-0.2499999999999998), PauliOp(Pauli('IIZXYIY'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIXXZX'), coeff=-0.2499999999999998), PauliOp(Pauli('YXXXXYX'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXXYXX'), coeff=-0.1249999999999999), PauliOp(Pauli('XXXXYYX'), coeff=0.1249999999999999), PauliOp(Pauli('XXXXXXX'), coeff=-0.1249999999999999), PauliOp(Pauli('XXXYXXY'), coeff=0.1249999999999999), PauliOp(Pauli('XXXYYYY'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXYYXY'), coeff=0.1249999999999999), PauliOp(Pauli('YXXYXYY'), coeff=0.1249999999999999), PauliOp(Pauli('IIZZZIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIZZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIZIZI'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIIIIZI'), coeff=-0.7499999999999992), PauliOp(Pauli('ZIZIZZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZZZI'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIIXIZX'), coeff=0.1249999999999999), PauliOp(Pauli('IIZYZIY'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIZXZZX'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIYIIY'), coeff=0.1249999999999999), PauliOp(Pauli('IIIXIIX'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIZYZZY'), coeff=0.1249999999999999), PauliOp(Pauli('IIZXZIX'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIYIZY'), coeff=-0.1249999999999999), PauliOp(Pauli('XXXYIXY'), coeff=-0.2499999999999998), PauliOp(Pauli('XXXXZYY'), coeff=-0.2499999999999998), PauliOp(Pauli('YXXXZXY'), coeff=0.2499999999999998), PauliOp(Pauli('YXXYIYY'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIZIIIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIZZZZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIZIIZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXZIYZ'), coeff=-0.1249999999999999), PauliOp(Pauli('YXYIIXZ'), coeff=-0.1249999999999999), PauliOp(Pauli('XXYIIYZ'), coeff=0.1249999999999999), PauliOp(Pauli('XXXZIXZ'), coeff=-0.1249999999999999), PauliOp(Pauli('XXXIIXI'), coeff=-0.1249999999999999), PauliOp(Pauli('XXYZIYI'), coeff=0.1249999999999999), PauliOp(Pauli('YXYZIXI'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXIIYI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIZZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIZZIZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZIII'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIZII'), coeff=0.1249999999999999), PauliOp(Pauli('IIZIZII'), coeff=0.1249999999999999), PauliOp(Pauli('ZIZZIII'), coeff=0.1249999999999999)], coeff=1.0, abelian=False), SummedOp([PauliOp(Pauli('ZIIZZZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIIZZZI'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIZIIZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIIZI'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIZII'), coeff=0.2499999999999998), PauliOp(Pauli('IIIZZII'), coeff=0.2499999999999998), PauliOp(Pauli('IIZZIII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIIIII'), coeff=0.2499999999999998)], coeff=1.0, abelian=False), PauliOp(Pauli('IIIIIII'), coeff=0.0), PauliOp(Pauli('IIIIIII'), coeff=0.0), PauliOp(Pauli('IIIIIII'), coeff=0.0)]
-- eval_count: 0
===============================================================
NLocal: EfficientSU2
-- base_name: nlocal
-- data: [(<qiskit.circuit.library.standard_gates.x.XGate object at 0x7f92880c00d0>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9f89690>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9f89dd0>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9f89b50>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9f895d0>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9f89e10>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9f89510>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9f898d0>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f92a9f89410>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f92a9f89c50>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f92a9f896d0>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f927a0b2790>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f92a9fc2090>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f92a9fc25d0>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b97a0d10>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b97a00d0>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b97a0cd0>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b97a03d0>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fc26d0>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fc2890>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fc2c50>, [Qubit(QuantumRegister(7, 'q'), 6)], [])]
-- qregs: [QuantumRegister(7, 'q')]
-- qubits: [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)]
-- qubit_set: {Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 6), Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 3)}
-- parameter_table: ParameterTable({ParameterVectorElement(θ[0]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9f89690>, 0)], ParameterVectorElement(θ[1]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9f89dd0>, 0)], ParameterVectorElement(θ[2]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9f89b50>, 0)], ParameterVectorElement(θ[3]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9f895d0>, 0)], ParameterVectorElement(θ[4]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9f89e10>, 0)], ParameterVectorElement(θ[5]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9f89510>, 0)], ParameterVectorElement(θ[6]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9f898d0>, 0)], ParameterVectorElement(θ[7]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b97a0d10>, 0)], ParameterVectorElement(θ[8]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b97a00d0>, 0)], ParameterVectorElement(θ[9]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b97a0cd0>, 0)], ParameterVectorElement(θ[10]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b97a03d0>, 0)], ParameterVectorElement(θ[11]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fc26d0>, 0)], ParameterVectorElement(θ[12]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fc2890>, 0)], ParameterVectorElement(θ[13]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fc2c50>, 0)]})
-- clbits: []
-- clbit_set: set()
-- ancillas: []
-- calibrations: defaultdict(<class 'dict'>, {})
-- parameters: [ParameterVectorElement(θ[0]), ParameterVectorElement(θ[1]), ParameterVectorElement(θ[2]), ParameterVectorElement(θ[3]), ParameterVectorElement(θ[4]), ParameterVectorElement(θ[5]), ParameterVectorElement(θ[6]), ParameterVectorElement(θ[7]), ParameterVectorElement(θ[8]), ParameterVectorElement(θ[9]), ParameterVectorElement(θ[10]), ParameterVectorElement(θ[11]), ParameterVectorElement(θ[12]), ParameterVectorElement(θ[13])]
-- layout: None
-- global_phase: 0
-- metadata: None
-- cregs: []
-- num_qubits: 7
-- insert_barriers: False
-- reps: 1
-- entanglement_blocks: [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7f92b9763810>]
-- rotation_blocks: [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7f92b97a0e50>]
-- prepended_blocks: []
-- prepended_entanglement: []
-- appended_blocks: []
-- appended_entanglement: []
-- entanglement: linear
-- entangler_maps: None
-- ordered_parameters: θ, ['θ[0]', 'θ[1]', 'θ[2]', 'θ[3]', 'θ[4]', 'θ[5]', 'θ[6]', 'θ[7]', 'θ[8]', 'θ[9]', 'θ[10]', 'θ[11]', 'θ[12]', 'θ[13]']
-- overwrite_block_parameters: True
-- skip_final_rotation_layer: False
-- skip_unentangled_qubits: False
-- initial_state: <qiskit.chemistry.components.initial_states.hartree_fock.HartreeFock object at 0x7f92b98503d0>
-- initial_state_circuit:           
q_0: ─────
          
q_1: ─────
     ┌───┐
q_2: ┤ X ├
     └───┘
q_3: ─────
          
q_4: ─────
          
q_5: ─────
          
q_6: ─────
          
-- bounds: None
===============================================================
Optimizer: COBYLA
-- gradient_support_level: 1
-- bounds_support_level: 1
-- initial_point_support_level: 3
-- options: {'maxiter': 0, 'disp': False, 'rhobeg': 1.0}
-- max_evals_grouped: 1
-- tol: None
===============================================================

2022-04-18 23:13:19,175:qiskit.aqua.quantum_instance:INFO: statevector backend only works with shot=1, changing shots from 1024 to 1.
2022-04-18 23:13:19,176:qiskit.aqua.quantum_instance:INFO: 
Qiskit Terra version: 0.17.0
Backend: 'statevector_simulator (AerProvider)', with following setting:
{'basis_gates': ['ccx', 'cp', 'cswap', 'csx', 'cu1', 'cu2', 'cu3', 'cx', 'cy', 'cz', 'delay', 'diagonal', 'h', 'id', 'initialize', 'mcp', 'mcr', 'mcrx', 'mcry', 'mcrz', 'mcswap', 'mcsx', 'mcu1', 'mcu2', 'mcu3', 'mcx', 'mcy', 'mcz', 'multiplexer', 'p', 'pauli', 'r', 'rx', 'rxx', 'ry', 'ryy', 'rz', 'rzx', 'rzz', 's', 'sdg', 'swap', 'sx', 't', 'tdg', 'u', 'u1', 'u2', 'u3', 'unitary', 'x', 'y', 'z', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector'], 'coupling_map': None}
{'initial_layout': None, 'seed_transpiler': None, 'optimization_level': None}
RunConfig(max_credits=10, shots=1)
{'timeout': None}
{}
{}
Measurement mitigation: None
2022-04-18 23:13:19,176:qiskit.aqua.algorithms.vq_algorithm:INFO: Starting optimizer.
bounds=[(-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793)]
initial point=[-3.56317122e-01 -1.27530014e-02 -8.15357061e-05 -5.77177407e-06
  7.86817729e-05  1.00299167e-02 -1.96273367e-02  3.13525898e+00
  1.38299971e+00  1.06369019e-04  9.23550126e-05  7.89009643e-03
  2.12669650e-03  4.75494902e-04]
2022-04-18 23:13:19,489:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: Energy evaluation returned [-2.70225671] - 8.74424 (ms), eval count: 1
2022-04-18 23:13:19,489:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: Optimization complete in 0.313060998916626 seconds.
Found opt_params [-3.56317122e-01 -1.27530014e-02 -8.15357061e-05 -5.77177407e-06
  7.86817729e-05  1.00299167e-02 -1.96273367e-02  3.13525898e+00
  1.38299971e+00  1.06369019e-04  9.23550126e-05  7.89009643e-03
  2.12669650e-03  4.75494902e-04] in 1 evals
ancilla op commutes?  True
ancilla op commutes?  True
ancilla op commutes?  True
ancilla op commutes?  False
ancilla op commutes?  False
ancilla op commutes?  False
#INFO: **** input file is /Users/mario/Documents/GitHub/VATech/quantum_database/second_quantization/circuits/hardware_efficient/gather_beh2_results_ry_linear.py ****
from qiskit                                        import *
from qiskit.chemistry.drivers                      import UnitsType,HFMethodType
from qiskit.chemistry.core                         import Hamiltonian,TransformationType,QubitMappingType
from qiskit.chemistry.components.initial_states    import HartreeFock
from qiskit.chemistry.components.variational_forms import UCCSD
from qiskit.aqua.components.optimizers             import L_BFGS_B,COBYLA,CG
from qiskit.aqua.algorithms                        import VQE
from qiskit.aqua                                   import QuantumInstance,aqua_globals
from qiskit.circuit.library                        import EfficientSU2

import logging
from   qiskit.chemistry import set_qiskit_chemistry_logging
from   qiskit.aqua      import set_qiskit_aqua_logging
set_qiskit_chemistry_logging(logging.INFO)
set_qiskit_aqua_logging(logging.INFO)

import sys
import numpy as np
sys.path.append('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/subroutines')
sys.path.append('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/subroutines/pyscfd')
from pyscfdriver import *
from utils       import *

def print_circuit(fname,circuit):
    outf = open(fname,'w')
    for gate in circuit:
        gate_name = gate[0].name
        qubits = [q.index for q in gate[1]]
        outf.write(str(gate_name)+' | '+' '.join([str(x) for x in qubits])+' | '+' '.join([str(x._symbol_expr) for x in gate[0].params])+'\n')
    outf.close()

def print_results(fname,res_vqe,res_ee,dN=0):
    outf = open(fname,'w')
    outf.write('%.12f %.12f \n' % (res_vqe[0],np.real(res_ee[0])))
    outf.write('%.12f %.12f \n' % (res_vqe[1]+dN,np.real(res_ee[1]+dN)))
    outf.write('%.12f %.12f \n' % (res_vqe[2],np.real(res_ee[2])))
    outf.write('%.12f %.12f \n' % (res_vqe[3],np.real(res_ee[3])))
    outf.close()

dist_list = [2.1,2.3,2.5,2.7,2.9,3.1,3.3,3.5] #[0.7,0.9,1.1,1.3,1.5,1.7,1.9,2.1,2.3,2.5,2.7,2.9,3.1,3.3,3.5,3.7,3.9,4.1,4.3,4.5]
depth_list = [1] #[1,2,3,4,5,6,7,8]

for depth in depth_list:
  for dist in dist_list:

    outfile = open('pes.txt','w')
    
    outfile.write("Bond distance: {}\n".format(dist))
    rho = np.load('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/SCF_FCI/beh2/res_fourth_pass.npy',allow_pickle=True).item()
    rho = rho[str(dist)]['rho_scf']
    driver    = PySCFDriver(atom="Be 0.0000 0.0000 0.0000; H 0.0000 0.0000 -{0}; H 0.0000 0.0000 {0}".format(dist),
                            unit=UnitsType.ANGSTROM,charge=0,spin=0,basis='sto-6g',hf_method=HFMethodType.RHF,symgroup='dooh',
                            outfile=outfile,irrep_nelec={'A1g':4,'A1u':2},rho=rho)
    molecule  = driver.run()
    outfile.write("\nHartree-Fock energy %f \n" % (molecule.hf_energy))
    
    core      = Hamiltonian(transformation=TransformationType.FULL,qubit_mapping=QubitMappingType.PARITY,two_qubit_reduction=True,freeze_core=False,orbital_reduction=[0])
    H_op,A_op = core.run(molecule)
    
    z2syms,sqlist           = None,None
    H_op,A_op,z2syms,sqlist = taper(molecule,core,H_op,A_op,outfile)
    
    init_state = HartreeFock(num_orbitals=core._molecule_info['num_orbitals'],qubit_mapping=core._qubit_mapping,two_qubit_reduction=core._two_qubit_reduction,num_particles=core._molecule_info['num_particles'],sq_list=sqlist)
    init_state.construct_circuit()
    x_hf = init_state._bitstr
 
    outfile.write("\nHartree-Fock energy %f \n" % (molecule.hf_energy))
    outfile.write("\nHartree-Fock circuit\n")
    outfile.write(str(init_state.construct_circuit().draw())+"\n")

    par = np.loadtxt('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/Ry_linear_DEPTH_%d/beh2/R_%s/output_parameters.txt' % (depth,str(dist)))
    var_form  = EfficientSU2(num_qubits=H_op.num_qubits,reps=depth,entanglement='linear',su2_gates=['ry'],initial_state=init_state)
    circuit = var_form.bind_parameters(par)

    optimizer = COBYLA(maxiter=0)
    algo      = VQE(H_op,var_form,optimizer,aux_operators=A_op,include_custom=True,initial_point=par)
    backend          = Aer.get_backend('statevector_simulator')
    quantum_instance = QuantumInstance(backend=backend)
    algo_result      = algo.run(quantum_instance)
    
    # -----------------------------------------------------------------------------------------------------------------------
    
    p1 = algo._ret['opt_params']
    res_vqe,res_ee = get_results(H_op,A_op,molecule,core,algo_result,outfile)
    print_results('ry_linear_%d/beh2_%s_results.txt' % (depth,str(dist)),res_vqe,res_ee,dN=2)

    circuit = var_form.bind_parameters(p1)
    print_circuit('ry_linear_%d/beh2_%s_circuit.txt' % (depth,str(dist)),circuit)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Mon Apr 18 23:13:19 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 3
[INPUT] num. electrons = 6
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry Dooh subgroup None
[INPUT] Mole.unit = Angstrom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000  -2.700000000000 AA    0.000000000000   0.000000000000  -5.102260536326 Bohr
[INPUT]  3 H      0.000000000000   0.000000000000   2.700000000000 AA    0.000000000000   0.000000000000   5.102260536326 Bohr

nuclear repulsion = 1.6659282566
point group symmetry = Dooh
num. orbitals of irrep A1g = 3
num. orbitals of irrep A1u = 2
num. orbitals of irrep E1uy = 1
num. orbitals of irrep E1ux = 1
number of shells = 5
number of NR pGTOs = 42
number of NR cGTOs = 7
basis = sto-6g
ecp = {}
CPU time:        37.81

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 6 electrons in irreps ['A1g', 'A1u']
    0 free electrons in irreps E1uy E1ux




******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp843boih1
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp843boih1
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (A1u) = -0.20150157030046  LUMO (A1g) = 0.0601667889473231
Initial guess E= -15.2623063981066  |g|= 1.21733e-09
macro= 0  E= -15.2623063981066  delta_E= 0  |g|= 1.21733e-09  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-15.2623063981066  |g|= 1.21733e-09  total 2 KF 4 JK
converged SCF energy = -15.2623063981066
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/chemistry_operator.py:170: DeprecationWarning: The qiskit.chemistry.chemistry_operator.MolecularChemistryResult object is deprecated as of 0.8.0 and will be removed no sooner than 3 months after the release. You should use qiskit.chemistry.algorithms.ground_state_solvers.FermionicGroundStateResult instead.
  super().__init__(a_dict)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:381: DeprecationWarning: The qiskit.chemistry.chemistry_operator.MolecularGroundStateResult object is deprecated as of 0.8.0 and will be removed no sooner than 3 months after the release. You should use qiskit.chemistry.algorithms.ground_state_solvers.FermionicGroundStateResult instead.
  mgsr = MolecularGroundStateResult()
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:91: DeprecationWarning: The ChemistryOperator is deprecated as of Qiskit Aqua 0.8.0 and will be removed no earlier than 3 months after the release date. Instead, the FermionicTransformation can be used to transform QMolecules and construct ground state result objects.
  super().__init__()
2022-04-18 23:13:19,923:qiskit.chemistry.core.hamiltonian:INFO: Configured orbital reduction list: [0]
2022-04-18 23:13:19,923:qiskit.chemistry.core.hamiltonian:INFO: Combined orbital reduction list: [0]
2022-04-18 23:13:19,923:qiskit.chemistry.core.hamiltonian:INFO:   converting to spin orbital reduction list: [0 7]
2022-04-18 23:13:19,923:qiskit.chemistry.core.hamiltonian:INFO:     => freezing spin orbitals: [0 7]
2022-04-18 23:13:19,923:qiskit.chemistry.core.hamiltonian:INFO:     => removing spin orbitals: [] (indexes accounting for freeze [])
2022-04-18 23:13:19,982:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital energy shift: -14.37750082471231
2022-04-18 23:13:22,446:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital x dipole shift: 0.0
2022-04-18 23:13:22,511:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital y dipole shift: 0.0
2022-04-18 23:13:22,580:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital z dipole shift: 0.0
2022-04-18 23:13:22,663:qiskit.chemistry.core.hamiltonian:INFO: Molecule num electrons: [3, 3], remaining for processing: [2, 2]
2022-04-18 23:13:22,663:qiskit.chemistry.core.hamiltonian:INFO: Molecule num spin orbitals: 14, remaining for processing: 12
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:417: DeprecationWarning: Processing a dictionary result is deprecated, pass a (minimum) eigensolver result now.
  ' pass a (minimum) eigensolver result now.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:134: DeprecationWarning: energy deprecated, use eigenvalues property.
  warnings.warn('energy deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:134: DeprecationWarning: energy deprecated, use eigenvalues property.
  warnings.warn('energy deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:149: DeprecationWarning: aux_ops deprecated, use aux_operator_eigenvalues property.
  DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:138: DeprecationWarning: energies deprecated, use eigenvalues property.
  warnings.warn('energies deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:138: DeprecationWarning: energies deprecated, use eigenvalues property.
  warnings.warn('energies deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:149: DeprecationWarning: aux_ops deprecated, use aux_operator_eigenvalues property.
  DeprecationWarning)
2022-04-18 23:13:28,538:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: 
==================== Setting of VQE ============================
Algorithm: VQE
-- max_evals_grouped: 1
-- circuit_sampler: None
-- expectation: None
-- user_valid_expectation: False
-- include_custom: True
-- expect_op: None
-- operator: SummedOp([
  -0.6556606524607087 * IIIIIII,
  -0.24280801213111422 * ZIIZZZZ,
  -0.09197496175238228 * ZIZIIZX,
  0.09197496175238228 * ZIIZZZX,
  -0.1892934817092122 * ZIIZZZI,
  -0.10055040235619554 * ZIIZZYY,
  0.10055040235619554 * IIIIIYY,
  -0.24154018636480892 * ZIZIIZZ,
  -0.8604773604967476 * IZZIIII,
  -0.8604773604967475 * ZZIIIII,
  -0.40964788929044016 * IIIIIZI,
  -0.24280801213111425 * IIIIZII,
  -0.09197496175238228 * IIZXXII,
  -0.09197496175238228 * IIIYYII,
  -0.1892934817092122 * IIIZZII,
  0.10055040235619557 * XXXXZII,
  0.10055040235619557 * YXXYIII,
  -0.24154018636480898 * IIZZIII,
  -0.40964788929044016 * ZIIIIII,
  0.04299519313669856 * IIIIIIZ,
  -0.010346075723987788 * IIIIIXX,
  0.010346075723987788 * ZIIZZXX,
  0.09673923294049173 * IIZZZII,
  0.15286761555782494 * ZZZZZZZ,
  0.15286761555782494 * IZIZZZZ,
  0.06843048044960277 * ZIIZZIZ,
  0.01364046173610572 * IIZZZIX,
  -0.01364046173610572 * IIIIIIX,
  -0.011155257099631478 * IIIIIXI,
  0.003236405655869971 * ZIZIIXZ,
  0.007918851443761516 * IIZZZXZ,
  0.007918851443761516 * ZIIZZXZ,
  0.003236405655869971 * IIIIIXZ,
  -0.011155257099631478 * ZIZIIXI,
  0.043197185432490855 * ZZIIIZX,
  -0.043197185432490855 * ZZZZZZX,
  0.043197185432490855 * IZZIIZX,
  -0.043197185432490855 * IZIZZZX,
  0.012200166323463569 * ZIZIIIX,
  -0.012200166323463569 * ZIIZZIX,
  0.16168511571480182 * ZIIZIZZ,
  0.018406751682029564 * ZIZIZZX,
  -0.018406751682029564 * ZIIZIZX,
  -0.028732519583202203 * IIIIXIZ,
  0.028732519583202203 * IIIZXIZ,
  0.028732519583202203 * IIIIXII,
  -0.028732519583202203 * IIIZXII,
  -0.002737122287497741 * IIIIXXX,
  0.002737122287497741 * IIIZXXX,
  -0.002737122287497741 * ZIIZYXY,
  0.002737122287497741 * ZIIIYXY,
  -0.018406751682029564 * ZIIXXZZ,
  -0.018406751682029564 * ZIZYYZZ,
  0.05080226156380793 * ZIZYYZX,
  0.05080226156380793 * ZIIXXZX,
  0.014060866120583685 * ZZYXYZX,
  0.014060866120583685 * ZIXXXZX,
  -0.014060866120583685 * IIXYXIY,
  -0.014060866120583685 * IZYYYIY,
  0.014060866120583685 * IYXXYZX,
  0.014060866120583685 * ZXXXXZX,
  -0.014060866120583685 * IXXYXIY,
  -0.014060866120583685 * ZYXYYIY,
  0.002737122287497741 * YXXXYIZ,
  0.002737122287497741 * XXXXXIZ,
  -0.002737122287497741 * YXXXYII,
  -0.002737122287497741 * XXXXXII,
  0.014267642603606566 * YXXXYXX,
  0.014267642603606566 * XXXXXXX,
  -0.014267642603606566 * XXXYXXY,
  -0.014267642603606566 * YXXYYXY,
  0.07172771271990076 * ZIIIIZZ,
  -0.014856074250899227 * ZIZZZZX,
  0.014856074250899227 * ZIIIIZX,
  0.02849653598700495 * IIIXIIZ,
  -0.02849653598700495 * IIZXZIZ,
  -0.02849653598700495 * IIIXIII,
  0.02849653598700495 * IIZXZII,
  0.015374867950185 * IIIXIXX,
  -0.015374867950185 * IIZXZXX,
  0.015374867950185 * ZIIYZXY,
  -0.015374867950185 * ZIZYIXY,
  0.007608953436490047 * XXXXZZZ,
  0.007608953436490047 * YXXYIZZ,
  -0.023293719393946512 * XXYYIZX,
  0.023293719393946512 * YXYXZZX,
  -0.023293719393946512 * XXXXZZX,
  -0.023293719393946512 * YXXYIZX,
  0.14754149450429968 * ZIZIZZZ,
  -0.010517626246103695 * ZZXIIZX,
  0.010517626246103695 * ZIXZIZX,
  -0.010517626246103695 * IIYZZIY,
  0.010517626246103695 * IZYIZIY,
  0.010517626246103695 * IYYIIZX,
  0.010517626246103695 * ZXXZIZX,
  -0.010517626246103695 * IXYZZIY,
  0.010517626246103695 * ZYXIZIY,
  -0.02653012504981648 * YXYIIIZ,
  -0.02653012504981648 * XXXZIIZ,
  0.02653012504981648 * YXYIIII,
  0.02653012504981648 * XXXZIII,
  -0.0016286026074958482 * YXYIIXX,
  -0.0016286026074958482 * XXXZIXX,
  0.0016286026074958482 * XXYZZXY,
  -0.0016286026074958482 * YXXIZXY,
  0.08269812305320935 * IIIZZZZ,
  0.01057156371596772 * IIZIIZX,
  -0.01057156371596772 * IIIZZZX,
  0.044086669383093545 * IIZZZIZ,
  0.11783068418103701 * ZZZZZZI,
  0.11783068418103701 * IZIZZZI,
  0.10380096846121772 * ZIIZZII,
  -0.015633543868698262 * IIZZZXX,
  0.015633543868698262 * ZIZIIXX,
  0.04398760352060924 * ZZZZZYY,
  -0.04398760352060924 * IZZIIYY,
  0.04398760352060924 * IZIZZYY,
  -0.04398760352060924 * ZZIIIYY,
  0.07172771271990076 * ZIIZIZI,
  0.007608953436490046 * ZIIZIYY,
  -0.007608953436490046 * IIIIZYY,
  -0.028496535987004943 * IIZZYIY,
  0.028496535987004943 * IIZIYIY,
  -0.028496535987004943 * IIIIXIX,
  0.028496535987004943 * IIIZXIX,
  0.014856074250899227 * ZIIXXZI,
  0.014856074250899227 * ZIZYYZI,
  -0.023293719393946512 * ZIIXXYY,
  -0.023293719393946512 * ZIZYYYY,
  -0.023293719393946512 * IIIYYYY,
  -0.023293719393946512 * IIZXXYY,
  0.015374867950185 * YXYYXIY,
  -0.015374867950185 * XXYYYIY,
  0.015374867950185 * YXXXYIX,
  0.015374867950185 * XXXXXIX,
  0.1790696082018694 * ZIIIIZI,
  -0.02494869668279908 * ZIIIIYY,
  0.02494869668279908 * IIIZZYY,
  0.03975019943745097 * IIZYZIY,
  -0.03975019943745097 * IIIYIIY,
  0.03975019943745097 * IIIXIIX,
  -0.03975019943745097 * IIZXZIX,
  0.0014477646852262636 * IZYXZIY,
  -0.0014477646852262636 * IIXYIIY,
  -0.0014477646852262636 * ZIXYIZY,
  0.0014477646852262636 * ZZYXZZY,
  0.0014477646852262636 * ZYXXZIY,
  -0.0014477646852262636 * IXXYIIY,
  -0.0014477646852262636 * ZXXYIZY,
  0.0014477646852262636 * IYXXZZY,
  -0.024948696682799087 * XXXXZZI,
  -0.024948696682799087 * YXXYIZI,
  0.04678975594223626 * XXXXZYY,
  0.04678975594223626 * YXXYIYY,
  0.08383686882054452 * ZIZIZZI,
  -0.010052016235976628 * ZIZIZYY,
  0.010052016235976628 * IIZZIYY,
  0.02568556010467488 * YXXZZIY,
  -0.02568556010467488 * XXYIZIY,
  -0.02568556010467488 * YXYIIIX,
  -0.02568556010467488 * XXXZIIX,
  -0.0026000406970033987 * YXIZZIY,
  0.0026000406970033987 * XYZZZIY,
  0.0026000406970033987 * XYZIIZY,
  -0.0026000406970033987 * YXIIIZY,
  -0.0026000406970033987 * YIIZZIY,
  0.0026000406970033987 * YZIZZIY,
  0.0026000406970033987 * YZIIIZY,
  -0.0026000406970033987 * YIIIIZY,
  0.15059072440345397 * IIIZZZI,
  0.12482212488020102 * ZZIIIZZ,
  0.12482212488020102 * IZZIIZZ,
  0.0513322389055136 * ZIZIIIZ,
  0.02653012504981648 * IIIIXXZ,
  -0.02653012504981648 * IIIZXXZ,
  -0.02653012504981648 * ZIZIXXI,
  0.02653012504981648 * ZIZZXXI,
  0.010517626246103693 * ZZYXYZZ,
  0.010517626246103693 * ZIXXXZZ,
  -0.010517626246103693 * IIYXYII,
  -0.010517626246103693 * IZXXXII,
  0.010517626246103693 * IYXXYZZ,
  0.010517626246103693 * ZXXXXZZ,
  -0.010517626246103693 * IXYXYII,
  0.010517626246103693 * ZYYXXII,
  -0.0016286026074958486 * YXXXYXZ,
  -0.0016286026074958486 * XXXXXXZ,
  0.0016286026074958486 * XXYXYXI,
  -0.0016286026074958486 * YXYXXXI,
  0.08383686882054452 * ZIZZZZZ,
  -0.02568556010467488 * IIIXIXZ,
  0.02568556010467488 * IIZXZXZ,
  0.02568556010467488 * ZIZXIXI,
  -0.02568556010467488 * ZIIXZXI,
  0.010052016235976628 * XXYYIZZ,
  -0.010052016235976628 * YXYXZZZ,
  -0.007911857196727235 * ZZXIIZZ,
  0.007911857196727235 * ZIXZIZZ,
  0.007911857196727235 * IIXIIII,
  -0.007911857196727235 * IZXZIII,
  0.007911857196727235 * IYYIIZZ,
  0.007911857196727235 * ZXXZIZZ,
  0.007911857196727235 * IXXIIII,
  0.007911857196727235 * ZYYZIII,
  0.025350466177665232 * YXYIIXZ,
  0.025350466177665232 * XXXZIXZ,
  0.025350466177665232 * XXXIIXI,
  0.025350466177665232 * YXYZIXI,
  0.07668270508317883 * IIZIIZZ,
  0.38947179486833605 * ZIZIIII,
  0.1721584729427863 * IZZIIZI,
  0.15286761555782494 * IZZIZII,
  0.043197185432490855 * IZZYYII,
  0.043197185432490855 * IZIXXII,
  0.11783068418103701 * IZZZZII,
  -0.002600040697003399 * ZIXYIYI,
  0.002600040697003399 * ZZYXZYI,
  0.002600040697003399 * ZZYYIXI,
  0.002600040697003399 * ZIXXZXI,
  0.04398760352060924 * YYYYIII,
  0.04398760352060924 * XYYXZII,
  0.12482212488020102 * IZIZIII,
  -0.012128953755816447 * ZXZIIII,
  0.012128953755816447 * IXIIIII,
  0.004770431920941949 * XYZIIYI,
  -0.004770431920941949 * YXIIIYI,
  0.004770431920941949 * XXIIIXI,
  0.004770431920941949 * YYZIIXI,
  0.1721584729427863 * ZZZIIII,
  0.1721584729427863 * ZZIIIZI,
  0.15286761555782494 * ZZIIZII,
  0.043197185432490855 * ZZIYYII,
  0.043197185432490855 * ZZZXXII,
  0.11783068418103701 * ZZIZZII,
  -0.002600040697003399 * ZXXYIYI,
  0.002600040697003399 * IYXXZYI,
  0.002600040697003399 * IYXYIXI,
  0.002600040697003399 * ZXXXZXI,
  -0.04398760352060924 * XYXYIII,
  0.04398760352060924 * YYXXZII,
  0.12482212488020102 * ZZZZIII,
  0.004770431920941949 * YZIIIYI,
  -0.004770431920941949 * YIIIIYI,
  0.004770431920941949 * XIIIIXI,
  -0.004770431920941949 * XZIIIXI,
  0.1721584729427863 * IZIIIII,
  0.08269812305320935 * IIIIZZI,
  0.01057156371596772 * IIIYYZI,
  0.01057156371596772 * IIZXXZI,
  0.07668270508317883 * IIZZIZI,
  0.04299519313669856 * IIIZIII,
  -0.010346075723987788 * XXXXIII,
  -0.010346075723987788 * YXXYZII,
  0.06843048044960277 * ZIIIZII,
  -0.01364046173610572 * IIZYYII,
  -0.01364046173610572 * IIIXXII,
  -0.011155257099631478 * XXXIXII,
  -0.003236405655869971 * YXYZXII,
  -0.007918851443761516 * XXYIYII,
  -0.007918851443761516 * YXXIYII,
  0.003236405655869971 * XXXZXII,
  0.011155257099631478 * YXYIXII,
  0.012200166323463569 * ZIZXXII,
  0.012200166323463569 * ZIIYYII,
  0.044086669383093545 * IIZIZII,
  0.015633543868698262 * XXYYZII,
  -0.015633543868698262 * YXYXIII,
  0.0513322389055136 * ZIZZIII
])
-- quantum_instance: None
-- optimizer: <qiskit.aqua.components.optimizers.cobyla.COBYLA object at 0x7f92b971c0d0>
-- gradient: None
-- cost_fn: <bound method VQE._energy_evaluation of <qiskit.aqua.algorithms.minimum_eigen_solvers.vqe.VQE object at 0x7f9299209b90>>
-- initial_point: [ 1.55322756e-05  2.34547289e-06 -1.43096817e-06  6.09302632e-08
 -2.41136702e-03  1.37912980e-06  7.07982466e-06  3.14157647e+00
  3.14165653e+00 -4.28927236e-07 -2.41374566e-03 -6.99681634e-08
  5.33657068e-07  3.86448423e-06]
-- var_form:      ┌──────────┐            ┌──────────┐                                     »
q_0: ┤ RY(θ[0]) ├─────■──────┤ RY(θ[7]) ├─────────────────────────────────────»
     ├──────────┤   ┌─┴─┐    └──────────┘┌──────────┐                         »
q_1: ┤ RY(θ[1]) ├───┤ X ├─────────■──────┤ RY(θ[8]) ├─────────────────────────»
     └──┬───┬───┘┌──┴───┴───┐   ┌─┴─┐    └──────────┘┌──────────┐             »
q_2: ───┤ X ├────┤ RY(θ[2]) ├───┤ X ├─────────■──────┤ RY(θ[9]) ├─────────────»
     ┌──┴───┴───┐└──────────┘   └───┘       ┌─┴─┐    └──────────┘┌───────────┐»
q_3: ┤ RY(θ[3]) ├───────────────────────────┤ X ├─────────■──────┤ RY(θ[10]) ├»
     ├──────────┤                           └───┘       ┌─┴─┐    └───────────┘»
q_4: ┤ RY(θ[4]) ├───────────────────────────────────────┤ X ├──────────■──────»
     ├──────────┤                                       └───┘        ┌─┴─┐    »
q_5: ┤ RY(θ[5]) ├────────────────────────────────────────────────────┤ X ├────»
     ├──────────┤                                                    └───┘    »
q_6: ┤ RY(θ[6]) ├─────────────────────────────────────────────────────────────»
     └──────────┘                                                             »
«                               
«q_0: ──────────────────────────
«                               
«q_1: ──────────────────────────
«                               
«q_2: ──────────────────────────
«                               
«q_3: ──────────────────────────
«     ┌───────────┐             
«q_4: ┤ RY(θ[11]) ├─────────────
«     └───────────┘┌───────────┐
«q_5: ──────■──────┤ RY(θ[12]) ├
«         ┌─┴─┐    ├───────────┤
«q_6: ────┤ X ├────┤ RY(θ[13]) ├
«         └───┘    └───────────┘
-- var_form_params: [ParameterVectorElement(θ[0]), ParameterVectorElement(θ[10]), ParameterVectorElement(θ[11]), ParameterVectorElement(θ[12]), ParameterVectorElement(θ[13]), ParameterVectorElement(θ[1]), ParameterVectorElement(θ[2]), ParameterVectorElement(θ[3]), ParameterVectorElement(θ[4]), ParameterVectorElement(θ[5]), ParameterVectorElement(θ[6]), ParameterVectorElement(θ[7]), ParameterVectorElement(θ[8]), ParameterVectorElement(θ[9])]
-- parameterized_circuits: None
-- ret: None
-- eval_time: None
-- callback: None
-- aux_op_nones: [False, False, False, False, False, False]
-- aux_operators: [SummedOp([PauliOp(Pauli('IIIIIII'), coeff=5.999999999999994), PauliOp(Pauli('ZIIZZZZ'), coeff=-0.4999999999999996), PauliOp(Pauli('ZIIZZZI'), coeff=-0.4999999999999996), PauliOp(Pauli('ZIZIIZZ'), coeff=-0.4999999999999996), PauliOp(Pauli('IZZIIII'), coeff=-0.9999999999999992), PauliOp(Pauli('ZZIIIII'), coeff=-0.9999999999999992), PauliOp(Pauli('IIIIIZI'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIIZII'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIZZII'), coeff=-0.4999999999999996), PauliOp(Pauli('IIZZIII'), coeff=-0.4999999999999996), PauliOp(Pauli('ZIIIIII'), coeff=-0.4999999999999996)], coeff=1.0, abelian=False), SummedOp([PauliOp(Pauli('IIIIIII'), coeff=1.4999999999999987), PauliOp(Pauli('IIIIIIZ'), coeff=0.1249999999999999), PauliOp(Pauli('IIZZZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIZZIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIZIZZ'), coeff=-0.7499999999999992), PauliOp(Pauli('ZIIIIZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIZIZZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIZZZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIIZXZZ'), coeff=0.1249999999999999), PauliOp(Pauli('IIIIXIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIXZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZXIZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIXII'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIIZXZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZXII'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIXZI'), coeff=0.1249999999999999), PauliOp(Pauli('IIIYXIY'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIZYYZX'), coeff=-0.2499999999999998), PauliOp(Pauli('IIZXYIY'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIXXZX'), coeff=-0.2499999999999998), PauliOp(Pauli('YXXXXYX'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXXYXX'), coeff=-0.1249999999999999), PauliOp(Pauli('XXXXYYX'), coeff=0.1249999999999999), PauliOp(Pauli('XXXXXXX'), coeff=-0.1249999999999999), PauliOp(Pauli('XXXYXXY'), coeff=0.1249999999999999), PauliOp(Pauli('XXXYYYY'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXYYXY'), coeff=0.1249999999999999), PauliOp(Pauli('YXXYXYY'), coeff=0.1249999999999999), PauliOp(Pauli('IIZZZIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIZZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIZIZI'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIIIIZI'), coeff=-0.7499999999999992), PauliOp(Pauli('ZIZIZZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZZZI'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIIXIZX'), coeff=0.1249999999999999), PauliOp(Pauli('IIZYZIY'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIZXZZX'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIYIIY'), coeff=0.1249999999999999), PauliOp(Pauli('IIIXIIX'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIZYZZY'), coeff=0.1249999999999999), PauliOp(Pauli('IIZXZIX'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIYIZY'), coeff=-0.1249999999999999), PauliOp(Pauli('XXXYIXY'), coeff=-0.2499999999999998), PauliOp(Pauli('XXXXZYY'), coeff=-0.2499999999999998), PauliOp(Pauli('YXXXZXY'), coeff=0.2499999999999998), PauliOp(Pauli('YXXYIYY'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIZIIIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIZZZZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIZIIZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXZIYZ'), coeff=-0.1249999999999999), PauliOp(Pauli('YXYIIXZ'), coeff=-0.1249999999999999), PauliOp(Pauli('XXYIIYZ'), coeff=0.1249999999999999), PauliOp(Pauli('XXXZIXZ'), coeff=-0.1249999999999999), PauliOp(Pauli('XXXIIXI'), coeff=-0.1249999999999999), PauliOp(Pauli('XXYZIYI'), coeff=0.1249999999999999), PauliOp(Pauli('YXYZIXI'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXIIYI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIZZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIZZIZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZIII'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIZII'), coeff=0.1249999999999999), PauliOp(Pauli('IIZIZII'), coeff=0.1249999999999999), PauliOp(Pauli('ZIZZIII'), coeff=0.1249999999999999)], coeff=1.0, abelian=False), SummedOp([PauliOp(Pauli('ZIIZZZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIIZZZI'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIZIIZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIIZI'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIZII'), coeff=0.2499999999999998), PauliOp(Pauli('IIIZZII'), coeff=0.2499999999999998), PauliOp(Pauli('IIZZIII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIIIII'), coeff=0.2499999999999998)], coeff=1.0, abelian=False), PauliOp(Pauli('IIIIIII'), coeff=0.0), PauliOp(Pauli('IIIIIII'), coeff=0.0), PauliOp(Pauli('IIIIIII'), coeff=0.0)]
-- eval_count: 0
===============================================================
NLocal: EfficientSU2
-- base_name: nlocal
-- data: [(<qiskit.circuit.library.standard_gates.x.XGate object at 0x7f927a0c1c50>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b9714710>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f9290e43390>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f9290e43d10>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f9290e43fd0>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f9290e438d0>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f9290e43190>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f9290e43710>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f9290e43150>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f9290e43250>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f9290e43bd0>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f9290e43d90>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f9290e43790>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f9290e43410>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f9290e43450>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f9290e43990>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f9290e43d50>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f9290e43050>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f9290e43910>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f9290e435d0>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f9290e43ed0>, [Qubit(QuantumRegister(7, 'q'), 6)], [])]
-- qregs: [QuantumRegister(7, 'q')]
-- qubits: [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)]
-- qubit_set: {Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 6), Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 3)}
-- parameter_table: ParameterTable({ParameterVectorElement(θ[0]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b9714710>, 0)], ParameterVectorElement(θ[1]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f9290e43390>, 0)], ParameterVectorElement(θ[2]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f9290e43d10>, 0)], ParameterVectorElement(θ[3]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f9290e43fd0>, 0)], ParameterVectorElement(θ[4]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f9290e438d0>, 0)], ParameterVectorElement(θ[5]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f9290e43190>, 0)], ParameterVectorElement(θ[6]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f9290e43710>, 0)], ParameterVectorElement(θ[7]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f9290e43450>, 0)], ParameterVectorElement(θ[8]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f9290e43990>, 0)], ParameterVectorElement(θ[9]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f9290e43d50>, 0)], ParameterVectorElement(θ[10]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f9290e43050>, 0)], ParameterVectorElement(θ[11]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f9290e43910>, 0)], ParameterVectorElement(θ[12]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f9290e435d0>, 0)], ParameterVectorElement(θ[13]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f9290e43ed0>, 0)]})
-- clbits: []
-- clbit_set: set()
-- ancillas: []
-- calibrations: defaultdict(<class 'dict'>, {})
-- parameters: [ParameterVectorElement(θ[0]), ParameterVectorElement(θ[1]), ParameterVectorElement(θ[2]), ParameterVectorElement(θ[3]), ParameterVectorElement(θ[4]), ParameterVectorElement(θ[5]), ParameterVectorElement(θ[6]), ParameterVectorElement(θ[7]), ParameterVectorElement(θ[8]), ParameterVectorElement(θ[9]), ParameterVectorElement(θ[10]), ParameterVectorElement(θ[11]), ParameterVectorElement(θ[12]), ParameterVectorElement(θ[13])]
-- layout: None
-- global_phase: 0
-- metadata: None
-- cregs: []
-- num_qubits: 7
-- insert_barriers: False
-- reps: 1
-- entanglement_blocks: [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7f92b973b550>]
-- rotation_blocks: [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7f92b973b750>]
-- prepended_blocks: []
-- prepended_entanglement: []
-- appended_blocks: []
-- appended_entanglement: []
-- entanglement: linear
-- entangler_maps: None
-- ordered_parameters: θ, ['θ[0]', 'θ[1]', 'θ[2]', 'θ[3]', 'θ[4]', 'θ[5]', 'θ[6]', 'θ[7]', 'θ[8]', 'θ[9]', 'θ[10]', 'θ[11]', 'θ[12]', 'θ[13]']
-- overwrite_block_parameters: True
-- skip_final_rotation_layer: False
-- skip_unentangled_qubits: False
-- initial_state: <qiskit.chemistry.components.initial_states.hartree_fock.HartreeFock object at 0x7f92b93a9f50>
-- initial_state_circuit:           
q_0: ─────
          
q_1: ─────
     ┌───┐
q_2: ┤ X ├
     └───┘
q_3: ─────
          
q_4: ─────
          
q_5: ─────
          
q_6: ─────
          
-- bounds: None
===============================================================
Optimizer: COBYLA
-- gradient_support_level: 1
-- bounds_support_level: 1
-- initial_point_support_level: 3
-- options: {'maxiter': 0, 'disp': False, 'rhobeg': 1.0}
-- max_evals_grouped: 1
-- tol: None
===============================================================

2022-04-18 23:13:28,539:qiskit.aqua.quantum_instance:INFO: statevector backend only works with shot=1, changing shots from 1024 to 1.
2022-04-18 23:13:28,539:qiskit.aqua.quantum_instance:INFO: 
Qiskit Terra version: 0.17.0
Backend: 'statevector_simulator (AerProvider)', with following setting:
{'basis_gates': ['ccx', 'cp', 'cswap', 'csx', 'cu1', 'cu2', 'cu3', 'cx', 'cy', 'cz', 'delay', 'diagonal', 'h', 'id', 'initialize', 'mcp', 'mcr', 'mcrx', 'mcry', 'mcrz', 'mcswap', 'mcsx', 'mcu1', 'mcu2', 'mcu3', 'mcx', 'mcy', 'mcz', 'multiplexer', 'p', 'pauli', 'r', 'rx', 'rxx', 'ry', 'ryy', 'rz', 'rzx', 'rzz', 's', 'sdg', 'swap', 'sx', 't', 'tdg', 'u', 'u1', 'u2', 'u3', 'unitary', 'x', 'y', 'z', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector'], 'coupling_map': None}
{'initial_layout': None, 'seed_transpiler': None, 'optimization_level': None}
RunConfig(max_credits=10, shots=1)
{'timeout': None}
{}
{}
Measurement mitigation: None
2022-04-18 23:13:28,539:qiskit.aqua.algorithms.vq_algorithm:INFO: Starting optimizer.
bounds=[(-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793)]
initial point=[ 1.55322756e-05  2.34547289e-06 -1.43096817e-06  6.09302632e-08
 -2.41136702e-03  1.37912980e-06  7.07982466e-06  3.14157647e+00
  3.14165653e+00 -4.28927236e-07 -2.41374566e-03 -6.99681634e-08
  5.33657068e-07  3.86448423e-06]
2022-04-18 23:13:28,816:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: Energy evaluation returned [-2.64169198] - 10.15019 (ms), eval count: 1
2022-04-18 23:13:28,817:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: Optimization complete in 0.27727389335632324 seconds.
Found opt_params [ 1.55322756e-05  2.34547289e-06 -1.43096817e-06  6.09302632e-08
 -2.41136702e-03  1.37912980e-06  7.07982466e-06  3.14157647e+00
  3.14165653e+00 -4.28927236e-07 -2.41374566e-03 -6.99681634e-08
  5.33657068e-07  3.86448423e-06] in 1 evals
ancilla op commutes?  True
ancilla op commutes?  True
ancilla op commutes?  True
ancilla op commutes?  False
ancilla op commutes?  False
ancilla op commutes?  False
#INFO: **** input file is /Users/mario/Documents/GitHub/VATech/quantum_database/second_quantization/circuits/hardware_efficient/gather_beh2_results_ry_linear.py ****
from qiskit                                        import *
from qiskit.chemistry.drivers                      import UnitsType,HFMethodType
from qiskit.chemistry.core                         import Hamiltonian,TransformationType,QubitMappingType
from qiskit.chemistry.components.initial_states    import HartreeFock
from qiskit.chemistry.components.variational_forms import UCCSD
from qiskit.aqua.components.optimizers             import L_BFGS_B,COBYLA,CG
from qiskit.aqua.algorithms                        import VQE
from qiskit.aqua                                   import QuantumInstance,aqua_globals
from qiskit.circuit.library                        import EfficientSU2

import logging
from   qiskit.chemistry import set_qiskit_chemistry_logging
from   qiskit.aqua      import set_qiskit_aqua_logging
set_qiskit_chemistry_logging(logging.INFO)
set_qiskit_aqua_logging(logging.INFO)

import sys
import numpy as np
sys.path.append('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/subroutines')
sys.path.append('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/subroutines/pyscfd')
from pyscfdriver import *
from utils       import *

def print_circuit(fname,circuit):
    outf = open(fname,'w')
    for gate in circuit:
        gate_name = gate[0].name
        qubits = [q.index for q in gate[1]]
        outf.write(str(gate_name)+' | '+' '.join([str(x) for x in qubits])+' | '+' '.join([str(x._symbol_expr) for x in gate[0].params])+'\n')
    outf.close()

def print_results(fname,res_vqe,res_ee,dN=0):
    outf = open(fname,'w')
    outf.write('%.12f %.12f \n' % (res_vqe[0],np.real(res_ee[0])))
    outf.write('%.12f %.12f \n' % (res_vqe[1]+dN,np.real(res_ee[1]+dN)))
    outf.write('%.12f %.12f \n' % (res_vqe[2],np.real(res_ee[2])))
    outf.write('%.12f %.12f \n' % (res_vqe[3],np.real(res_ee[3])))
    outf.close()

dist_list = [2.1,2.3,2.5,2.7,2.9,3.1,3.3,3.5] #[0.7,0.9,1.1,1.3,1.5,1.7,1.9,2.1,2.3,2.5,2.7,2.9,3.1,3.3,3.5,3.7,3.9,4.1,4.3,4.5]
depth_list = [1] #[1,2,3,4,5,6,7,8]

for depth in depth_list:
  for dist in dist_list:

    outfile = open('pes.txt','w')
    
    outfile.write("Bond distance: {}\n".format(dist))
    rho = np.load('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/SCF_FCI/beh2/res_fourth_pass.npy',allow_pickle=True).item()
    rho = rho[str(dist)]['rho_scf']
    driver    = PySCFDriver(atom="Be 0.0000 0.0000 0.0000; H 0.0000 0.0000 -{0}; H 0.0000 0.0000 {0}".format(dist),
                            unit=UnitsType.ANGSTROM,charge=0,spin=0,basis='sto-6g',hf_method=HFMethodType.RHF,symgroup='dooh',
                            outfile=outfile,irrep_nelec={'A1g':4,'A1u':2},rho=rho)
    molecule  = driver.run()
    outfile.write("\nHartree-Fock energy %f \n" % (molecule.hf_energy))
    
    core      = Hamiltonian(transformation=TransformationType.FULL,qubit_mapping=QubitMappingType.PARITY,two_qubit_reduction=True,freeze_core=False,orbital_reduction=[0])
    H_op,A_op = core.run(molecule)
    
    z2syms,sqlist           = None,None
    H_op,A_op,z2syms,sqlist = taper(molecule,core,H_op,A_op,outfile)
    
    init_state = HartreeFock(num_orbitals=core._molecule_info['num_orbitals'],qubit_mapping=core._qubit_mapping,two_qubit_reduction=core._two_qubit_reduction,num_particles=core._molecule_info['num_particles'],sq_list=sqlist)
    init_state.construct_circuit()
    x_hf = init_state._bitstr
 
    outfile.write("\nHartree-Fock energy %f \n" % (molecule.hf_energy))
    outfile.write("\nHartree-Fock circuit\n")
    outfile.write(str(init_state.construct_circuit().draw())+"\n")

    par = np.loadtxt('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/Ry_linear_DEPTH_%d/beh2/R_%s/output_parameters.txt' % (depth,str(dist)))
    var_form  = EfficientSU2(num_qubits=H_op.num_qubits,reps=depth,entanglement='linear',su2_gates=['ry'],initial_state=init_state)
    circuit = var_form.bind_parameters(par)

    optimizer = COBYLA(maxiter=0)
    algo      = VQE(H_op,var_form,optimizer,aux_operators=A_op,include_custom=True,initial_point=par)
    backend          = Aer.get_backend('statevector_simulator')
    quantum_instance = QuantumInstance(backend=backend)
    algo_result      = algo.run(quantum_instance)
    
    # -----------------------------------------------------------------------------------------------------------------------
    
    p1 = algo._ret['opt_params']
    res_vqe,res_ee = get_results(H_op,A_op,molecule,core,algo_result,outfile)
    print_results('ry_linear_%d/beh2_%s_results.txt' % (depth,str(dist)),res_vqe,res_ee,dN=2)

    circuit = var_form.bind_parameters(p1)
    print_circuit('ry_linear_%d/beh2_%s_circuit.txt' % (depth,str(dist)),circuit)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Mon Apr 18 23:13:29 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 3
[INPUT] num. electrons = 6
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry Dooh subgroup None
[INPUT] Mole.unit = Angstrom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000  -2.900000000000 AA    0.000000000000   0.000000000000  -5.480205761239 Bohr
[INPUT]  3 H      0.000000000000   0.000000000000   2.900000000000 AA    0.000000000000   0.000000000000   5.480205761239 Bohr

nuclear repulsion = 1.55103665269655
point group symmetry = Dooh
num. orbitals of irrep A1g = 3
num. orbitals of irrep A1u = 2
num. orbitals of irrep E1uy = 1
num. orbitals of irrep E1ux = 1
number of shells = 5
number of NR pGTOs = 42
number of NR cGTOs = 7
basis = sto-6g
ecp = {}
CPU time:        49.30

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 6 electrons in irreps ['A1g', 'A1u']
    0 free electrons in irreps E1uy E1ux




******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp0nff_xjf
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp0nff_xjf
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (A1u) = -0.176958270329536  LUMO (A1g) = 0.0321814380758324
Initial guess E= -15.2088586024494  |g|= 2.92247e-10
macro= 0  E= -15.2088586024494  delta_E= 7.10543e-15  |g|= 2.92247e-10  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-15.2088586024494  |g|= 2.92247e-10  total 2 KF 4 JK
converged SCF energy = -15.2088586024494
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/chemistry_operator.py:170: DeprecationWarning: The qiskit.chemistry.chemistry_operator.MolecularChemistryResult object is deprecated as of 0.8.0 and will be removed no sooner than 3 months after the release. You should use qiskit.chemistry.algorithms.ground_state_solvers.FermionicGroundStateResult instead.
  super().__init__(a_dict)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:381: DeprecationWarning: The qiskit.chemistry.chemistry_operator.MolecularGroundStateResult object is deprecated as of 0.8.0 and will be removed no sooner than 3 months after the release. You should use qiskit.chemistry.algorithms.ground_state_solvers.FermionicGroundStateResult instead.
  mgsr = MolecularGroundStateResult()
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:91: DeprecationWarning: The ChemistryOperator is deprecated as of Qiskit Aqua 0.8.0 and will be removed no earlier than 3 months after the release date. Instead, the FermionicTransformation can be used to transform QMolecules and construct ground state result objects.
  super().__init__()
2022-04-18 23:13:29,321:qiskit.chemistry.core.hamiltonian:INFO: Configured orbital reduction list: [0]
2022-04-18 23:13:29,321:qiskit.chemistry.core.hamiltonian:INFO: Combined orbital reduction list: [0]
2022-04-18 23:13:29,322:qiskit.chemistry.core.hamiltonian:INFO:   converting to spin orbital reduction list: [0 7]
2022-04-18 23:13:29,322:qiskit.chemistry.core.hamiltonian:INFO:     => freezing spin orbitals: [0 7]
2022-04-18 23:13:29,322:qiskit.chemistry.core.hamiltonian:INFO:     => removing spin orbitals: [] (indexes accounting for freeze [])
2022-04-18 23:13:29,418:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital energy shift: -14.323436896878402
2022-04-18 23:13:32,282:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital x dipole shift: 0.0
2022-04-18 23:13:32,362:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital y dipole shift: 0.0
2022-04-18 23:13:32,439:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital z dipole shift: 0.0
2022-04-18 23:13:32,543:qiskit.chemistry.core.hamiltonian:INFO: Molecule num electrons: [3, 3], remaining for processing: [2, 2]
2022-04-18 23:13:32,544:qiskit.chemistry.core.hamiltonian:INFO: Molecule num spin orbitals: 14, remaining for processing: 12
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:417: DeprecationWarning: Processing a dictionary result is deprecated, pass a (minimum) eigensolver result now.
  ' pass a (minimum) eigensolver result now.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:134: DeprecationWarning: energy deprecated, use eigenvalues property.
  warnings.warn('energy deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:134: DeprecationWarning: energy deprecated, use eigenvalues property.
  warnings.warn('energy deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:149: DeprecationWarning: aux_ops deprecated, use aux_operator_eigenvalues property.
  DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:138: DeprecationWarning: energies deprecated, use eigenvalues property.
  warnings.warn('energies deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:138: DeprecationWarning: energies deprecated, use eigenvalues property.
  warnings.warn('energies deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:149: DeprecationWarning: aux_ops deprecated, use aux_operator_eigenvalues property.
  DeprecationWarning)
2022-04-18 23:13:38,058:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: 
==================== Setting of VQE ============================
Algorithm: VQE
-- max_evals_grouped: 1
-- circuit_sampler: None
-- expectation: None
-- user_valid_expectation: False
-- include_custom: True
-- expect_op: None
-- operator: SummedOp([
  -0.6135742890879352 * IIIIIII,
  -0.25456221749828417 * ZIIZZZZ,
  0.09345890787943861 * ZIZIIZX,
  -0.09345890787943861 * ZIIZZZX,
  -0.1733495673331213 * ZIIZZZI,
  -0.09660524206727059 * ZIIZZYY,
  0.09660524206727059 * IIIIIYY,
  -0.21375813097100424 * ZIZIIZZ,
  -0.859222213027192 * IZZIIII,
  -0.8592222130271918 * ZZIIIII,
  -0.4060194789558197 * IIIIIZI,
  -0.2545622174982841 * IIIIZII,
  0.09345890787943861 * IIZXXII,
  0.09345890787943861 * IIIYYII,
  -0.17334956733312124 * IIIZZII,
  0.09660524206727056 * XXXXZII,
  0.09660524206727056 * YXXYIII,
  -0.21375813097100416 * IIZZIII,
  -0.4060194789558197 * ZIIIIII,
  0.041619446670138845 * IIIIIIZ,
  -0.010110542584382818 * IIIIIXX,
  0.010110542584382818 * ZIIZZXX,
  0.09052355993623896 * IIZZZII,
  0.1563797059912982 * ZZZZZZZ,
  0.1563797059912982 * IZIZZZZ,
  0.0690437246809851 * ZIIZZIZ,
  -0.012814655363919151 * IIZZZIX,
  0.012814655363919151 * IIIIIIX,
  0.009956501332672103 * IIIIIXI,
  -0.001588350220674158 * ZIZIIXZ,
  -0.008368151111997945 * IIZZZXZ,
  -0.008368151111997945 * ZIIZZXZ,
  -0.001588350220674158 * IIIIIXZ,
  0.009956501332672103 * ZIZIIXI,
  -0.04357832815823902 * ZZIIIZX,
  0.04357832815823902 * ZZZZZZX,
  -0.04357832815823902 * IZZIIZX,
  0.04357832815823902 * IZIZZZX,
  -0.012559369461620402 * ZIZIIIX,
  0.012559369461620402 * ZIIZZIX,
  0.1632389119021877 * ZIIZIZZ,
  -0.024138448656231656 * ZIZIZZX,
  0.024138448656231656 * ZIIZIZX,
  -0.024953820844389043 * IIIIXIZ,
  0.024953820844389043 * IIIZXIZ,
  0.024953820844389043 * IIIIXII,
  -0.024953820844389043 * IIIZXII,
  -0.00015878231389538402 * IIIIXXX,
  0.00015878231389538402 * IIIZXXX,
  -0.00015878231389538402 * ZIIZYXY,
  0.00015878231389538402 * ZIIIYXY,
  0.024138448656231656 * ZIIXXZZ,
  0.024138448656231656 * ZIZYYZZ,
  0.04768320308520312 * ZIZYYZX,
  0.04768320308520312 * ZIIXXZX,
  0.01535534131432255 * ZZYXYZX,
  0.01535534131432255 * ZIXXXZX,
  -0.01535534131432255 * IIXYXIY,
  -0.01535534131432255 * IZYYYIY,
  0.01535534131432255 * IYXXYZX,
  0.01535534131432255 * ZXXXXZX,
  -0.01535534131432255 * IXXYXIY,
  -0.01535534131432255 * ZYXYYIY,
  0.00015878231389538405 * YXXXYIZ,
  0.00015878231389538405 * XXXXXIZ,
  -0.00015878231389538405 * YXXXYII,
  -0.00015878231389538405 * XXXXXII,
  0.014418768398678823 * YXXXYXX,
  0.014418768398678823 * XXXXXXX,
  -0.014418768398678823 * XXXYXXY,
  -0.014418768398678823 * YXXYYXY,
  0.06657326751452787 * ZIIIIZZ,
  0.016996579493113128 * ZIZZZZX,
  -0.016996579493113128 * ZIIIIZX,
  -0.029811234857032277 * IIIXIIZ,
  0.029811234857032277 * IIZXZIZ,
  0.029811234857032277 * IIIXIII,
  -0.029811234857032277 * IIZXZII,
  -0.013031005428442644 * IIIXIXX,
  0.013031005428442644 * IIZXZXX,
  -0.013031005428442644 * ZIIYZXY,
  0.013031005428442644 * ZIZYIXY,
  0.009951760270487435 * XXXXZZZ,
  0.009951760270487435 * YXXYIZZ,
  0.021399156540440594 * XXYYIZX,
  -0.021399156540440594 * YXYXZZX,
  0.021399156540440594 * XXXXZZX,
  0.021399156540440594 * YXXYIZX,
  0.13820676302144208 * ZIZIZZZ,
  0.0099848279022473 * ZZXIIZX,
  -0.0099848279022473 * ZIXZIZX,
  0.0099848279022473 * IIYZZIY,
  -0.0099848279022473 * IZYIZIY,
  -0.0099848279022473 * IYYIIZX,
  -0.0099848279022473 * ZXXZIZX,
  0.0099848279022473 * IXYZZIY,
  -0.0099848279022473 * ZYXIZIY,
  0.02298750676111477 * YXYIIIZ,
  0.02298750676111477 * XXXZIIZ,
  -0.02298750676111477 * YXYIIII,
  -0.02298750676111477 * XXXZIII,
  -0.0011400372029230974 * YXYIIXX,
  -0.0011400372029230974 * XXXZIXX,
  0.0011400372029230974 * XXYZZXY,
  -0.0011400372029230974 * YXXIZXY,
  0.08346249307966394 * IIIZZZZ,
  -0.013699406664543499 * IIZIIZX,
  0.013699406664543499 * IIIZZZX,
  0.0381112830063259 * IIZZZIZ,
  0.10827247518837169 * ZZZZZZI,
  0.10827247518837169 * IZIZZZI,
  0.09655241002818486 * ZIIZZII,
  -0.014181455506385323 * IIZZZXX,
  0.014181455506385323 * ZIZIIXX,
  0.04263356584117224 * ZZZZZYY,
  -0.04263356584117224 * IZZIIYY,
  0.04263356584117224 * IZIZZYY,
  -0.04263356584117224 * ZZIIIYY,
  0.06657326751452787 * ZIIZIZI,
  0.009951760270487435 * ZIIZIYY,
  -0.009951760270487435 * IIIIZYY,
  0.029811234857032277 * IIZZYIY,
  -0.029811234857032277 * IIZIYIY,
  0.029811234857032277 * IIIIXIX,
  -0.029811234857032277 * IIIZXIX,
  -0.016996579493113128 * ZIIXXZI,
  -0.016996579493113128 * ZIZYYZI,
  0.021399156540440594 * ZIIXXYY,
  0.021399156540440594 * ZIZYYYY,
  0.021399156540440594 * IIIYYYY,
  0.021399156540440594 * IIZXXYY,
  -0.013031005428442644 * YXYYXIY,
  0.013031005428442644 * XXYYYIY,
  -0.013031005428442644 * YXXXYIX,
  -0.013031005428442644 * XXXXXIX,
  0.18162180636298753 * ZIIIIZI,
  -0.02954891439713244 * ZIIIIYY,
  0.02954891439713244 * IIIZZYY,
  0.047123102344781634 * IIZYZIY,
  -0.047123102344781634 * IIIYIIY,
  0.047123102344781634 * IIIXIIX,
  -0.047123102344781634 * IIZXZIX,
  0.0011462299188519957 * IZYXZIY,
  -0.0011462299188519957 * IIXYIIY,
  -0.0011462299188519957 * ZIXYIZY,
  0.0011462299188519957 * ZZYXZZY,
  0.0011462299188519957 * ZYXXZIY,
  -0.0011462299188519957 * IXXYIIY,
  -0.0011462299188519957 * ZXXYIZY,
  0.0011462299188519957 * IYXXZZY,
  -0.02954891439713244 * XXXXZZI,
  -0.02954891439713244 * YXXYIZI,
  0.0419051088276882 * XXXXZYY,
  0.0419051088276882 * YXXYIYY,
  0.08523438535110754 * ZIZIZZI,
  -0.012329956688085232 * ZIZIZYY,
  0.012329956688085232 * IIZZIYY,
  0.026511412194470563 * YXXZZIY,
  -0.026511412194470563 * XXYIZIY,
  -0.026511412194470563 * YXYIIIX,
  -0.026511412194470563 * XXXZIIX,
  -0.0023800346208126353 * YXIZZIY,
  0.0023800346208126353 * XYZZZIY,
  0.0023800346208126353 * XYZIIZY,
  -0.0023800346208126353 * YXIIIZY,
  -0.0023800346208126353 * YIIZZIY,
  0.0023800346208126353 * YZIZZIY,
  0.0023800346208126353 * YZIIIZY,
  -0.0023800346208126353 * YIIIIZY,
  0.13845751885587307 * IIIZZZI,
  0.11525196657031625 * ZZIIIZZ,
  0.11525196657031625 * IZZIIZZ,
  0.04922523275369355 * ZIZIIIZ,
  -0.02298750676111477 * IIIIXXZ,
  0.02298750676111477 * IIIZXXZ,
  0.02298750676111477 * ZIZIXXI,
  -0.02298750676111477 * ZIZZXXI,
  -0.0099848279022473 * ZZYXYZZ,
  -0.0099848279022473 * ZIXXXZZ,
  0.0099848279022473 * IIYXYII,
  0.0099848279022473 * IZXXXII,
  -0.0099848279022473 * IYXXYZZ,
  -0.0099848279022473 * ZXXXXZZ,
  0.0099848279022473 * IXYXYII,
  -0.0099848279022473 * ZYYXXII,
  -0.0011400372029230974 * YXXXYXZ,
  -0.0011400372029230974 * XXXXXXZ,
  0.0011400372029230974 * XXYXYXI,
  -0.0011400372029230974 * YXYXXXI,
  0.08523438535110754 * ZIZZZZZ,
  -0.026511412194470563 * IIIXIXZ,
  0.026511412194470563 * IIZXZXZ,
  0.026511412194470563 * ZIZXIXI,
  -0.026511412194470563 * ZIIXZXI,
  0.012329956688085232 * XXYYIZZ,
  -0.012329956688085232 * YXYXZZZ,
  -0.006515187754861235 * ZZXIIZZ,
  0.006515187754861235 * ZIXZIZZ,
  0.006515187754861235 * IIXIIII,
  -0.006515187754861235 * IZXZIII,
  0.006515187754861235 * IYYIIZZ,
  0.006515187754861235 * ZXXZIZZ,
  0.006515187754861235 * IXXIIII,
  0.006515187754861235 * ZYYZIII,
  0.021827091219709046 * YXYIIXZ,
  0.021827091219709046 * XXXZIXZ,
  0.021827091219709046 * XXXIIXI,
  0.021827091219709046 * YXYZIXI,
  0.0710523239734026 * IIZIIZZ,
  0.38947179486833605 * ZIZIIII,
  0.1752659586559729 * IZZIIZI,
  0.1563797059912982 * IZZIZII,
  -0.04357832815823902 * IZZYYII,
  -0.04357832815823902 * IZIXXII,
  0.10827247518837169 * IZZZZII,
  -0.0023800346208126353 * ZIXYIYI,
  0.0023800346208126353 * ZZYXZYI,
  0.0023800346208126353 * ZZYYIXI,
  0.0023800346208126353 * ZIXXZXI,
  0.04263356584117224 * YYYYIII,
  0.04263356584117224 * XYYXZII,
  0.11525196657031625 * IZIZIII,
  -0.012128953755816447 * ZXZIIII,
  0.012128953755816447 * IXIIIII,
  0.005013496401485496 * XYZIIYI,
  -0.005013496401485496 * YXIIIYI,
  0.005013496401485496 * XXIIIXI,
  0.005013496401485496 * YYZIIXI,
  0.1752659586559729 * ZZZIIII,
  0.1752659586559729 * ZZIIIZI,
  0.1563797059912982 * ZZIIZII,
  -0.04357832815823902 * ZZIYYII,
  -0.04357832815823902 * ZZZXXII,
  0.10827247518837169 * ZZIZZII,
  -0.0023800346208126353 * ZXXYIYI,
  0.0023800346208126353 * IYXXZYI,
  0.0023800346208126353 * IYXYIXI,
  0.0023800346208126353 * ZXXXZXI,
  -0.04263356584117224 * XYXYIII,
  0.04263356584117224 * YYXXZII,
  0.11525196657031625 * ZZZZIII,
  0.005013496401485496 * YZIIIYI,
  -0.005013496401485496 * YIIIIYI,
  0.005013496401485496 * XIIIIXI,
  -0.005013496401485496 * XZIIIXI,
  0.1752659586559729 * IZIIIII,
  0.08346249307966394 * IIIIZZI,
  -0.013699406664543499 * IIIYYZI,
  -0.013699406664543499 * IIZXXZI,
  0.0710523239734026 * IIZZIZI,
  0.041619446670138845 * IIIZIII,
  -0.010110542584382818 * XXXXIII,
  -0.010110542584382818 * YXXYZII,
  0.0690437246809851 * ZIIIZII,
  0.012814655363919151 * IIZYYII,
  0.012814655363919151 * IIIXXII,
  0.009956501332672103 * XXXIXII,
  0.001588350220674158 * YXYZXII,
  0.008368151111997945 * XXYIYII,
  0.008368151111997945 * YXXIYII,
  -0.001588350220674158 * XXXZXII,
  -0.009956501332672103 * YXYIXII,
  -0.012559369461620402 * ZIZXXII,
  -0.012559369461620402 * ZIIYYII,
  0.0381112830063259 * IIZIZII,
  0.014181455506385323 * XXYYZII,
  -0.014181455506385323 * YXYXIII,
  0.04922523275369355 * ZIZZIII
])
-- quantum_instance: None
-- optimizer: <qiskit.aqua.components.optimizers.cobyla.COBYLA object at 0x7f92880c0150>
-- gradient: None
-- cost_fn: <bound method VQE._energy_evaluation of <qiskit.aqua.algorithms.minimum_eigen_solvers.vqe.VQE object at 0x7f9279f57510>>
-- initial_point: [ 1.55322756e-05  2.34547289e-06 -1.43096817e-06  6.09302632e-08
 -2.41136702e-03  1.37912980e-06  7.07982466e-06  3.14157647e+00
  3.14165653e+00 -4.28927236e-07 -2.41374566e-03 -6.99681634e-08
  5.33657068e-07  3.86448423e-06]
-- var_form:      ┌──────────┐            ┌──────────┐                                     »
q_0: ┤ RY(θ[0]) ├─────■──────┤ RY(θ[7]) ├─────────────────────────────────────»
     ├──────────┤   ┌─┴─┐    └──────────┘┌──────────┐                         »
q_1: ┤ RY(θ[1]) ├───┤ X ├─────────■──────┤ RY(θ[8]) ├─────────────────────────»
     └──┬───┬───┘┌──┴───┴───┐   ┌─┴─┐    └──────────┘┌──────────┐             »
q_2: ───┤ X ├────┤ RY(θ[2]) ├───┤ X ├─────────■──────┤ RY(θ[9]) ├─────────────»
     ┌──┴───┴───┐└──────────┘   └───┘       ┌─┴─┐    └──────────┘┌───────────┐»
q_3: ┤ RY(θ[3]) ├───────────────────────────┤ X ├─────────■──────┤ RY(θ[10]) ├»
     ├──────────┤                           └───┘       ┌─┴─┐    └───────────┘»
q_4: ┤ RY(θ[4]) ├───────────────────────────────────────┤ X ├──────────■──────»
     ├──────────┤                                       └───┘        ┌─┴─┐    »
q_5: ┤ RY(θ[5]) ├────────────────────────────────────────────────────┤ X ├────»
     ├──────────┤                                                    └───┘    »
q_6: ┤ RY(θ[6]) ├─────────────────────────────────────────────────────────────»
     └──────────┘                                                             »
«                               
«q_0: ──────────────────────────
«                               
«q_1: ──────────────────────────
«                               
«q_2: ──────────────────────────
«                               
«q_3: ──────────────────────────
«     ┌───────────┐             
«q_4: ┤ RY(θ[11]) ├─────────────
«     └───────────┘┌───────────┐
«q_5: ──────■──────┤ RY(θ[12]) ├
«         ┌─┴─┐    ├───────────┤
«q_6: ────┤ X ├────┤ RY(θ[13]) ├
«         └───┘    └───────────┘
-- var_form_params: [ParameterVectorElement(θ[0]), ParameterVectorElement(θ[10]), ParameterVectorElement(θ[11]), ParameterVectorElement(θ[12]), ParameterVectorElement(θ[13]), ParameterVectorElement(θ[1]), ParameterVectorElement(θ[2]), ParameterVectorElement(θ[3]), ParameterVectorElement(θ[4]), ParameterVectorElement(θ[5]), ParameterVectorElement(θ[6]), ParameterVectorElement(θ[7]), ParameterVectorElement(θ[8]), ParameterVectorElement(θ[9])]
-- parameterized_circuits: None
-- ret: None
-- eval_time: None
-- callback: None
-- aux_op_nones: [False, False, False, False, False, False]
-- aux_operators: [SummedOp([PauliOp(Pauli('IIIIIII'), coeff=5.999999999999994), PauliOp(Pauli('ZIIZZZZ'), coeff=-0.4999999999999996), PauliOp(Pauli('ZIIZZZI'), coeff=-0.4999999999999996), PauliOp(Pauli('ZIZIIZZ'), coeff=-0.4999999999999996), PauliOp(Pauli('IZZIIII'), coeff=-0.9999999999999992), PauliOp(Pauli('ZZIIIII'), coeff=-0.9999999999999992), PauliOp(Pauli('IIIIIZI'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIIZII'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIZZII'), coeff=-0.4999999999999996), PauliOp(Pauli('IIZZIII'), coeff=-0.4999999999999996), PauliOp(Pauli('ZIIIIII'), coeff=-0.4999999999999996)], coeff=1.0, abelian=False), SummedOp([PauliOp(Pauli('IIIIIII'), coeff=1.4999999999999987), PauliOp(Pauli('IIIIIIZ'), coeff=0.1249999999999999), PauliOp(Pauli('IIZZZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIZZIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIZIZZ'), coeff=-0.7499999999999992), PauliOp(Pauli('ZIIIIZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIZIZZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIZZZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIIZXZZ'), coeff=0.1249999999999999), PauliOp(Pauli('IIIIXIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIXZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZXIZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIXII'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIIZXZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZXII'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIXZI'), coeff=0.1249999999999999), PauliOp(Pauli('IIIYXIY'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIZYYZX'), coeff=-0.2499999999999998), PauliOp(Pauli('IIZXYIY'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIXXZX'), coeff=-0.2499999999999998), PauliOp(Pauli('YXXXXYX'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXXYXX'), coeff=-0.1249999999999999), PauliOp(Pauli('XXXXYYX'), coeff=0.1249999999999999), PauliOp(Pauli('XXXXXXX'), coeff=-0.1249999999999999), PauliOp(Pauli('XXXYXXY'), coeff=0.1249999999999999), PauliOp(Pauli('XXXYYYY'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXYYXY'), coeff=0.1249999999999999), PauliOp(Pauli('YXXYXYY'), coeff=0.1249999999999999), PauliOp(Pauli('IIZZZIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIZZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIZIZI'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIIIIZI'), coeff=-0.7499999999999992), PauliOp(Pauli('ZIZIZZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZZZI'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIIXIZX'), coeff=0.1249999999999999), PauliOp(Pauli('IIZYZIY'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIZXZZX'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIYIIY'), coeff=0.1249999999999999), PauliOp(Pauli('IIIXIIX'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIZYZZY'), coeff=0.1249999999999999), PauliOp(Pauli('IIZXZIX'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIYIZY'), coeff=-0.1249999999999999), PauliOp(Pauli('XXXYIXY'), coeff=-0.2499999999999998), PauliOp(Pauli('XXXXZYY'), coeff=-0.2499999999999998), PauliOp(Pauli('YXXXZXY'), coeff=0.2499999999999998), PauliOp(Pauli('YXXYIYY'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIZIIIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIZZZZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIZIIZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXZIYZ'), coeff=-0.1249999999999999), PauliOp(Pauli('YXYIIXZ'), coeff=-0.1249999999999999), PauliOp(Pauli('XXYIIYZ'), coeff=0.1249999999999999), PauliOp(Pauli('XXXZIXZ'), coeff=-0.1249999999999999), PauliOp(Pauli('XXXIIXI'), coeff=-0.1249999999999999), PauliOp(Pauli('XXYZIYI'), coeff=0.1249999999999999), PauliOp(Pauli('YXYZIXI'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXIIYI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIZZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIZZIZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZIII'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIZII'), coeff=0.1249999999999999), PauliOp(Pauli('IIZIZII'), coeff=0.1249999999999999), PauliOp(Pauli('ZIZZIII'), coeff=0.1249999999999999)], coeff=1.0, abelian=False), SummedOp([PauliOp(Pauli('ZIIZZZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIIZZZI'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIZIIZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIIZI'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIZII'), coeff=0.2499999999999998), PauliOp(Pauli('IIIZZII'), coeff=0.2499999999999998), PauliOp(Pauli('IIZZIII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIIIII'), coeff=0.2499999999999998)], coeff=1.0, abelian=False), PauliOp(Pauli('IIIIIII'), coeff=0.0), PauliOp(Pauli('IIIIIII'), coeff=0.0), PauliOp(Pauli('IIIIIII'), coeff=0.0)]
-- eval_count: 0
===============================================================
NLocal: EfficientSU2
-- base_name: nlocal
-- data: [(<qiskit.circuit.library.standard_gates.x.XGate object at 0x7f92605653d0>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f927a2f47d0>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f927a2f49d0>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f927a2f4210>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f927a2f43d0>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f927a2f4710>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f927a2f4b50>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f927a2f4bd0>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f927a2f4f50>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f927a2f4410>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f927a2f4fd0>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f927a2f48d0>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f9279e47890>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f9290d7f890>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f927a2f4c10>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f927a2f4250>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f927a2f4090>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f927a2f41d0>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f927a2f4e50>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b973b350>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b973b650>, [Qubit(QuantumRegister(7, 'q'), 6)], [])]
-- qregs: [QuantumRegister(7, 'q')]
-- qubits: [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)]
-- qubit_set: {Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 6), Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 3)}
-- parameter_table: ParameterTable({ParameterVectorElement(θ[0]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f927a2f47d0>, 0)], ParameterVectorElement(θ[1]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f927a2f49d0>, 0)], ParameterVectorElement(θ[2]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f927a2f4210>, 0)], ParameterVectorElement(θ[3]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f927a2f43d0>, 0)], ParameterVectorElement(θ[4]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f927a2f4710>, 0)], ParameterVectorElement(θ[5]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f927a2f4b50>, 0)], ParameterVectorElement(θ[6]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f927a2f4bd0>, 0)], ParameterVectorElement(θ[7]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f927a2f4c10>, 0)], ParameterVectorElement(θ[8]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f927a2f4250>, 0)], ParameterVectorElement(θ[9]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f927a2f4090>, 0)], ParameterVectorElement(θ[10]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f927a2f41d0>, 0)], ParameterVectorElement(θ[11]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f927a2f4e50>, 0)], ParameterVectorElement(θ[12]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b973b350>, 0)], ParameterVectorElement(θ[13]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b973b650>, 0)]})
-- clbits: []
-- clbit_set: set()
-- ancillas: []
-- calibrations: defaultdict(<class 'dict'>, {})
-- parameters: [ParameterVectorElement(θ[0]), ParameterVectorElement(θ[1]), ParameterVectorElement(θ[2]), ParameterVectorElement(θ[3]), ParameterVectorElement(θ[4]), ParameterVectorElement(θ[5]), ParameterVectorElement(θ[6]), ParameterVectorElement(θ[7]), ParameterVectorElement(θ[8]), ParameterVectorElement(θ[9]), ParameterVectorElement(θ[10]), ParameterVectorElement(θ[11]), ParameterVectorElement(θ[12]), ParameterVectorElement(θ[13])]
-- layout: None
-- global_phase: 0
-- metadata: None
-- cregs: []
-- num_qubits: 7
-- insert_barriers: False
-- reps: 1
-- entanglement_blocks: [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7f927a2f4650>]
-- rotation_blocks: [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7f927a2f4a50>]
-- prepended_blocks: []
-- prepended_entanglement: []
-- appended_blocks: []
-- appended_entanglement: []
-- entanglement: linear
-- entangler_maps: None
-- ordered_parameters: θ, ['θ[0]', 'θ[1]', 'θ[2]', 'θ[3]', 'θ[4]', 'θ[5]', 'θ[6]', 'θ[7]', 'θ[8]', 'θ[9]', 'θ[10]', 'θ[11]', 'θ[12]', 'θ[13]']
-- overwrite_block_parameters: True
-- skip_final_rotation_layer: False
-- skip_unentangled_qubits: False
-- initial_state: <qiskit.chemistry.components.initial_states.hartree_fock.HartreeFock object at 0x7f9298b36d50>
-- initial_state_circuit:           
q_0: ─────
          
q_1: ─────
     ┌───┐
q_2: ┤ X ├
     └───┘
q_3: ─────
          
q_4: ─────
          
q_5: ─────
          
q_6: ─────
          
-- bounds: None
===============================================================
Optimizer: COBYLA
-- gradient_support_level: 1
-- bounds_support_level: 1
-- initial_point_support_level: 3
-- options: {'maxiter': 0, 'disp': False, 'rhobeg': 1.0}
-- max_evals_grouped: 1
-- tol: None
===============================================================

2022-04-18 23:13:38,058:qiskit.aqua.quantum_instance:INFO: statevector backend only works with shot=1, changing shots from 1024 to 1.
2022-04-18 23:13:38,058:qiskit.aqua.quantum_instance:INFO: 
Qiskit Terra version: 0.17.0
Backend: 'statevector_simulator (AerProvider)', with following setting:
{'basis_gates': ['ccx', 'cp', 'cswap', 'csx', 'cu1', 'cu2', 'cu3', 'cx', 'cy', 'cz', 'delay', 'diagonal', 'h', 'id', 'initialize', 'mcp', 'mcr', 'mcrx', 'mcry', 'mcrz', 'mcswap', 'mcsx', 'mcu1', 'mcu2', 'mcu3', 'mcx', 'mcy', 'mcz', 'multiplexer', 'p', 'pauli', 'r', 'rx', 'rxx', 'ry', 'ryy', 'rz', 'rzx', 'rzz', 's', 'sdg', 'swap', 'sx', 't', 'tdg', 'u', 'u1', 'u2', 'u3', 'unitary', 'x', 'y', 'z', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector'], 'coupling_map': None}
{'initial_layout': None, 'seed_transpiler': None, 'optimization_level': None}
RunConfig(max_credits=10, shots=1)
{'timeout': None}
{}
{}
Measurement mitigation: None
2022-04-18 23:13:38,059:qiskit.aqua.algorithms.vq_algorithm:INFO: Starting optimizer.
bounds=[(-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793)]
initial point=[ 1.55322756e-05  2.34547289e-06 -1.43096817e-06  6.09302632e-08
 -2.41136702e-03  1.37912980e-06  7.07982466e-06  3.14157647e+00
  3.14165653e+00 -4.28927236e-07 -2.41374566e-03 -6.99681634e-08
  5.33657068e-07  3.86448423e-06]
2022-04-18 23:13:38,299:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: Energy evaluation returned [-2.59364152] - 8.25334 (ms), eval count: 1
2022-04-18 23:13:38,299:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: Optimization complete in 0.24033594131469727 seconds.
Found opt_params [ 1.55322756e-05  2.34547289e-06 -1.43096817e-06  6.09302632e-08
 -2.41136702e-03  1.37912980e-06  7.07982466e-06  3.14157647e+00
  3.14165653e+00 -4.28927236e-07 -2.41374566e-03 -6.99681634e-08
  5.33657068e-07  3.86448423e-06] in 1 evals
ancilla op commutes?  True
ancilla op commutes?  True
ancilla op commutes?  True
ancilla op commutes?  False
ancilla op commutes?  False
ancilla op commutes?  False
#INFO: **** input file is /Users/mario/Documents/GitHub/VATech/quantum_database/second_quantization/circuits/hardware_efficient/gather_beh2_results_ry_linear.py ****
from qiskit                                        import *
from qiskit.chemistry.drivers                      import UnitsType,HFMethodType
from qiskit.chemistry.core                         import Hamiltonian,TransformationType,QubitMappingType
from qiskit.chemistry.components.initial_states    import HartreeFock
from qiskit.chemistry.components.variational_forms import UCCSD
from qiskit.aqua.components.optimizers             import L_BFGS_B,COBYLA,CG
from qiskit.aqua.algorithms                        import VQE
from qiskit.aqua                                   import QuantumInstance,aqua_globals
from qiskit.circuit.library                        import EfficientSU2

import logging
from   qiskit.chemistry import set_qiskit_chemistry_logging
from   qiskit.aqua      import set_qiskit_aqua_logging
set_qiskit_chemistry_logging(logging.INFO)
set_qiskit_aqua_logging(logging.INFO)

import sys
import numpy as np
sys.path.append('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/subroutines')
sys.path.append('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/subroutines/pyscfd')
from pyscfdriver import *
from utils       import *

def print_circuit(fname,circuit):
    outf = open(fname,'w')
    for gate in circuit:
        gate_name = gate[0].name
        qubits = [q.index for q in gate[1]]
        outf.write(str(gate_name)+' | '+' '.join([str(x) for x in qubits])+' | '+' '.join([str(x._symbol_expr) for x in gate[0].params])+'\n')
    outf.close()

def print_results(fname,res_vqe,res_ee,dN=0):
    outf = open(fname,'w')
    outf.write('%.12f %.12f \n' % (res_vqe[0],np.real(res_ee[0])))
    outf.write('%.12f %.12f \n' % (res_vqe[1]+dN,np.real(res_ee[1]+dN)))
    outf.write('%.12f %.12f \n' % (res_vqe[2],np.real(res_ee[2])))
    outf.write('%.12f %.12f \n' % (res_vqe[3],np.real(res_ee[3])))
    outf.close()

dist_list = [2.1,2.3,2.5,2.7,2.9,3.1,3.3,3.5] #[0.7,0.9,1.1,1.3,1.5,1.7,1.9,2.1,2.3,2.5,2.7,2.9,3.1,3.3,3.5,3.7,3.9,4.1,4.3,4.5]
depth_list = [1] #[1,2,3,4,5,6,7,8]

for depth in depth_list:
  for dist in dist_list:

    outfile = open('pes.txt','w')
    
    outfile.write("Bond distance: {}\n".format(dist))
    rho = np.load('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/SCF_FCI/beh2/res_fourth_pass.npy',allow_pickle=True).item()
    rho = rho[str(dist)]['rho_scf']
    driver    = PySCFDriver(atom="Be 0.0000 0.0000 0.0000; H 0.0000 0.0000 -{0}; H 0.0000 0.0000 {0}".format(dist),
                            unit=UnitsType.ANGSTROM,charge=0,spin=0,basis='sto-6g',hf_method=HFMethodType.RHF,symgroup='dooh',
                            outfile=outfile,irrep_nelec={'A1g':4,'A1u':2},rho=rho)
    molecule  = driver.run()
    outfile.write("\nHartree-Fock energy %f \n" % (molecule.hf_energy))
    
    core      = Hamiltonian(transformation=TransformationType.FULL,qubit_mapping=QubitMappingType.PARITY,two_qubit_reduction=True,freeze_core=False,orbital_reduction=[0])
    H_op,A_op = core.run(molecule)
    
    z2syms,sqlist           = None,None
    H_op,A_op,z2syms,sqlist = taper(molecule,core,H_op,A_op,outfile)
    
    init_state = HartreeFock(num_orbitals=core._molecule_info['num_orbitals'],qubit_mapping=core._qubit_mapping,two_qubit_reduction=core._two_qubit_reduction,num_particles=core._molecule_info['num_particles'],sq_list=sqlist)
    init_state.construct_circuit()
    x_hf = init_state._bitstr
 
    outfile.write("\nHartree-Fock energy %f \n" % (molecule.hf_energy))
    outfile.write("\nHartree-Fock circuit\n")
    outfile.write(str(init_state.construct_circuit().draw())+"\n")

    par = np.loadtxt('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/Ry_linear_DEPTH_%d/beh2/R_%s/output_parameters.txt' % (depth,str(dist)))
    var_form  = EfficientSU2(num_qubits=H_op.num_qubits,reps=depth,entanglement='linear',su2_gates=['ry'],initial_state=init_state)
    circuit = var_form.bind_parameters(par)

    optimizer = COBYLA(maxiter=0)
    algo      = VQE(H_op,var_form,optimizer,aux_operators=A_op,include_custom=True,initial_point=par)
    backend          = Aer.get_backend('statevector_simulator')
    quantum_instance = QuantumInstance(backend=backend)
    algo_result      = algo.run(quantum_instance)
    
    # -----------------------------------------------------------------------------------------------------------------------
    
    p1 = algo._ret['opt_params']
    res_vqe,res_ee = get_results(H_op,A_op,molecule,core,algo_result,outfile)
    print_results('ry_linear_%d/beh2_%s_results.txt' % (depth,str(dist)),res_vqe,res_ee,dN=2)

    circuit = var_form.bind_parameters(p1)
    print_circuit('ry_linear_%d/beh2_%s_circuit.txt' % (depth,str(dist)),circuit)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Mon Apr 18 23:13:38 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 3
[INPUT] num. electrons = 6
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry Dooh subgroup None
[INPUT] Mole.unit = Angstrom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000  -3.100000000000 AA    0.000000000000   0.000000000000  -5.858150986152 Bohr
[INPUT]  3 H      0.000000000000   0.000000000000   3.100000000000 AA    0.000000000000   0.000000000000   5.858150986152 Bohr

nuclear repulsion = 1.45096977187742
point group symmetry = Dooh
num. orbitals of irrep A1g = 3
num. orbitals of irrep A1u = 2
num. orbitals of irrep E1uy = 1
num. orbitals of irrep E1ux = 1
number of shells = 5
number of NR pGTOs = 42
number of NR cGTOs = 7
basis = sto-6g
ecp = {}
CPU time:        60.71

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 6 electrons in irreps ['A1g', 'A1u']
    0 free electrons in irreps E1uy E1ux




******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpl050nge_
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmpl050nge_
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (A1u) = -0.155442861871882  LUMO (A1g) = 0.00829242564045755
Initial guess E= -15.1670167625563  |g|= 3.39631e-10
macro= 0  E= -15.1670167625563  delta_E= -7.10543e-15  |g|= 3.39631e-10  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-15.1670167625563  |g|= 3.39631e-10  total 2 KF 4 JK
converged SCF energy = -15.1670167625563
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/chemistry_operator.py:170: DeprecationWarning: The qiskit.chemistry.chemistry_operator.MolecularChemistryResult object is deprecated as of 0.8.0 and will be removed no sooner than 3 months after the release. You should use qiskit.chemistry.algorithms.ground_state_solvers.FermionicGroundStateResult instead.
  super().__init__(a_dict)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:381: DeprecationWarning: The qiskit.chemistry.chemistry_operator.MolecularGroundStateResult object is deprecated as of 0.8.0 and will be removed no sooner than 3 months after the release. You should use qiskit.chemistry.algorithms.ground_state_solvers.FermionicGroundStateResult instead.
  mgsr = MolecularGroundStateResult()
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:91: DeprecationWarning: The ChemistryOperator is deprecated as of Qiskit Aqua 0.8.0 and will be removed no earlier than 3 months after the release date. Instead, the FermionicTransformation can be used to transform QMolecules and construct ground state result objects.
  super().__init__()
2022-04-18 23:13:38,771:qiskit.chemistry.core.hamiltonian:INFO: Configured orbital reduction list: [0]
2022-04-18 23:13:38,771:qiskit.chemistry.core.hamiltonian:INFO: Combined orbital reduction list: [0]
2022-04-18 23:13:38,771:qiskit.chemistry.core.hamiltonian:INFO:   converting to spin orbital reduction list: [0 7]
2022-04-18 23:13:38,771:qiskit.chemistry.core.hamiltonian:INFO:     => freezing spin orbitals: [0 7]
2022-04-18 23:13:38,771:qiskit.chemistry.core.hamiltonian:INFO:     => removing spin orbitals: [] (indexes accounting for freeze [])
2022-04-18 23:13:38,840:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital energy shift: -14.276353314082696
2022-04-18 23:13:41,673:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital x dipole shift: 0.0
2022-04-18 23:13:41,748:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital y dipole shift: 0.0
2022-04-18 23:13:41,825:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital z dipole shift: 0.0
2022-04-18 23:13:41,921:qiskit.chemistry.core.hamiltonian:INFO: Molecule num electrons: [3, 3], remaining for processing: [2, 2]
2022-04-18 23:13:41,922:qiskit.chemistry.core.hamiltonian:INFO: Molecule num spin orbitals: 14, remaining for processing: 12
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:417: DeprecationWarning: Processing a dictionary result is deprecated, pass a (minimum) eigensolver result now.
  ' pass a (minimum) eigensolver result now.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:134: DeprecationWarning: energy deprecated, use eigenvalues property.
  warnings.warn('energy deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:134: DeprecationWarning: energy deprecated, use eigenvalues property.
  warnings.warn('energy deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:149: DeprecationWarning: aux_ops deprecated, use aux_operator_eigenvalues property.
  DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:138: DeprecationWarning: energies deprecated, use eigenvalues property.
  warnings.warn('energies deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:138: DeprecationWarning: energies deprecated, use eigenvalues property.
  warnings.warn('energies deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:149: DeprecationWarning: aux_ops deprecated, use aux_operator_eigenvalues property.
  DeprecationWarning)
2022-04-18 23:13:47,428:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: 
==================== Setting of VQE ============================
Algorithm: VQE
-- max_evals_grouped: 1
-- circuit_sampler: None
-- expectation: None
-- user_valid_expectation: False
-- include_custom: True
-- expect_op: None
-- operator: SummedOp([
  -0.572406147492661 * IIIIIII,
  -0.26940668994353273 * ZIIZZZZ,
  0.09041950872683328 * ZIZIIZX,
  -0.09041950872683328 * ZIIZZZX,
  -0.15457386642185297 * ZIIZZZI,
  -0.0870002437426322 * ZIIZZYY,
  0.0870002437426322 * IIIIIYY,
  -0.18545473347504982 * ZIZIIZZ,
  -0.8583129454594027 * IZZIIII,
  -0.8583129454594028 * ZZIIIII,
  -0.4090508369140683 * IIIIIZI,
  -0.26940668994353273 * IIIIZII,
  0.0904195087268333 * IIZXXII,
  0.0904195087268333 * IIIYYII,
  -0.15457386642185303 * IIIZZII,
  0.0870002437426322 * XXXXZII,
  0.0870002437426322 * YXXYIII,
  -0.18545473347504998 * IIZZIII,
  -0.4090508369140681 * ZIIIIII,
  0.040250886556585874 * IIIIIIZ,
  -0.009486035371925775 * IIIIIXX,
  0.009486035371925775 * ZIIZZXX,
  0.0849523741625104 * IIZZZII,
  0.16174867735871268 * ZZZZZZZ,
  0.16174867735871268 * IZIZZZZ,
  0.07091084272291098 * ZIIZZIZ,
  -0.011317121072777164 * IIZZZIX,
  0.011317121072777164 * IIIIIIX,
  0.008888189559655419 * IIIIIXI,
  -0.00036191340035786427 * ZIZIIXZ,
  -0.008526276159297555 * IIZZZXZ,
  -0.008526276159297555 * ZIIZZXZ,
  -0.00036191340035786427 * IIIIIXZ,
  0.008888189559655419 * ZIZIIXI,
  -0.04184298810460943 * ZZIIIZX,
  0.04184298810460943 * ZZZZZZX,
  -0.04184298810460943 * IZZIIZX,
  0.04184298810460943 * IZIZZZX,
  -0.012519197334867626 * ZIZIIIX,
  0.012519197334867626 * ZIIZZIX,
  0.16866876941387898 * ZIIZIZZ,
  -0.029433256844352586 * ZIZIZZX,
  0.029433256844352586 * ZIIZIZX,
  -0.019919889141400766 * IIIIXIZ,
  0.019919889141400766 * IIIZXIZ,
  0.019919889141400766 * IIIIXII,
  -0.019919889141400766 * IIIZXII,
  0.0024060705080354043 * IIIIXXX,
  -0.0024060705080354043 * IIIZXXX,
  0.0024060705080354043 * ZIIZYXY,
  -0.0024060705080354043 * ZIIIYXY,
  0.029433256844352586 * ZIIXXZZ,
  0.029433256844352586 * ZIZYYZZ,
  0.0410405512707005 * ZIZYYZX,
  0.0410405512707005 * ZIIXXZX,
  0.016879316578331607 * ZZYXYZX,
  0.016879316578331607 * ZIXXXZX,
  -0.016879316578331607 * IIXYXIY,
  -0.016879316578331607 * IZYYYIY,
  0.016879316578331607 * IYXXYZX,
  0.016879316578331607 * ZXXXXZX,
  -0.016879316578331607 * IXXYXIY,
  -0.016879316578331607 * ZYXYYIY,
  -0.0024060705080354043 * YXXXYIZ,
  -0.0024060705080354043 * XXXXXIZ,
  0.0024060705080354043 * YXXXYII,
  0.0024060705080354043 * XXXXXII,
  0.01522503836562451 * YXXXYXX,
  0.01522503836562451 * XXXXXXX,
  -0.01522503836562451 * XXXYXXY,
  -0.01522503836562451 * YXXYYXY,
  0.060170775697986636 * ZIIIIZZ,
  0.018668545980685434 * ZIZZZZX,
  -0.018668545980685434 * ZIIIIZX,
  -0.029985667053462593 * IIIXIIZ,
  0.029985667053462593 * IIZXZIZ,
  0.029985667053462593 * IIIXIII,
  -0.029985667053462593 * IIZXZII,
  -0.009285949756377806 * IIIXIXX,
  0.009285949756377806 * IIZXZXX,
  -0.009285949756377806 * ZIIYZXY,
  0.009285949756377806 * ZIZYIXY,
  0.011892105879961182 * XXXXZZZ,
  0.011892105879961182 * YXXYIZZ,
  0.017812225915675356 * XXYYIZX,
  -0.017812225915675356 * YXYXZZX,
  0.017812225915675356 * XXXXZZX,
  0.017812225915675356 * YXXYIZX,
  0.1259929254332109 * ZIZIZZZ,
  0.009109928028164897 * ZZXIIZX,
  -0.009109928028164897 * ZIXZIZX,
  0.009109928028164897 * IIYZZIY,
  -0.009109928028164897 * IZYIZIY,
  -0.009109928028164897 * IYYIIZX,
  -0.009109928028164897 * ZXXZIZX,
  0.009109928028164897 * IXYZZIY,
  -0.009109928028164897 * ZYXIZIY,
  0.018174139316033223 * YXYIIIZ,
  0.018174139316033223 * XXXZIIZ,
  -0.018174139316033223 * YXYIIII,
  -0.018174139316033223 * XXXZIII,
  -0.0037769698263283736 * YXYIIXX,
  -0.0037769698263283736 * XXXZIXX,
  0.0037769698263283736 * XXYZZXY,
  -0.0037769698263283736 * YXXIZXY,
  0.0861358810885355 * IIIZZZZ,
  -0.016296167161196 * IIZIIZX,
  0.016296167161196 * IIIZZZX,
  0.032082679315716574 * IIZZZIZ,
  0.09794163115253693 * ZZZZZZI,
  0.09794163115253693 * IZIZZZI,
  0.09009919088665598 * ZIIZZII,
  -0.012042846028712629 * IIZZZXX,
  0.012042846028712629 * ZIZIIXX,
  0.03894386973055031 * ZZZZZYY,
  -0.03894386973055031 * IZZIIYY,
  0.03894386973055031 * IZIZZYY,
  -0.03894386973055031 * ZZIIIYY,
  0.060170775697986636 * ZIIZIZI,
  0.011892105879961179 * ZIIZIYY,
  -0.011892105879961179 * IIIIZYY,
  0.029985667053462593 * IIZZYIY,
  -0.029985667053462593 * IIZIYIY,
  0.029985667053462593 * IIIIXIX,
  -0.029985667053462593 * IIIZXIX,
  -0.018668545980685434 * ZIIXXZI,
  -0.018668545980685434 * ZIZYYZI,
  0.01781222591567536 * ZIIXXYY,
  0.01781222591567536 * ZIZYYYY,
  0.01781222591567536 * IIIYYYY,
  0.01781222591567536 * IIZXXYY,
  -0.009285949756377804 * YXYYXIY,
  0.009285949756377804 * XXYYYIY,
  -0.009285949756377804 * YXXXYIX,
  -0.009285949756377804 * XXXXXIX,
  0.18813514884917826 * ZIIIIZI,
  -0.03258590139087122 * ZIIIIYY,
  0.03258590139087122 * IIIZZYY,
  0.05640056457349314 * IIZYZIY,
  -0.05640056457349314 * IIIYIIY,
  0.05640056457349314 * IIIXIIX,
  -0.05640056457349314 * IIZXZIX,
  0.0008146731034338103 * IZYXZIY,
  -0.0008146731034338103 * IIXYIIY,
  -0.0008146731034338103 * ZIXYIZY,
  0.0008146731034338103 * ZZYXZZY,
  0.0008146731034338103 * ZYXXZIY,
  -0.0008146731034338103 * IXXYIIY,
  -0.0008146731034338103 * ZXXYIZY,
  0.0008146731034338103 * IYXXZZY,
  -0.032585901390871225 * XXXXZZI,
  -0.032585901390871225 * YXXYIZI,
  0.03364751345948899 * XXXXZYY,
  0.03364751345948899 * YXXYIYY,
  0.08848324388920974 * ZIZIZZI,
  -0.014138101935476691 * ZIZIZYY,
  0.014138101935476691 * IIZZIYY,
  0.026180947964189325 * YXXZZIY,
  -0.026180947964189325 * XXYIZIY,
  -0.026180947964189325 * YXYIIIX,
  -0.026180947964189325 * XXXZIIX,
  -0.0020685190995506616 * YXIZZIY,
  0.0020685190995506616 * XYZZZIY,
  0.0020685190995506616 * XYZIIZY,
  -0.0020685190995506616 * YXIIIZY,
  -0.0020685190995506616 * YIIZZIY,
  0.0020685190995506616 * YZIZZIY,
  0.0020685190995506616 * YZIIIZY,
  -0.0020685190995506616 * YIIIIZY,
  0.12374670434614499 * IIIZZZI,
  0.10452079304611409 * ZZIIIZZ,
  0.10452079304611409 * IZZIIZZ,
  0.04698876647072008 * ZIZIIIZ,
  -0.018174139316033223 * IIIIXXZ,
  0.018174139316033223 * IIIZXXZ,
  0.018174139316033223 * ZIZIXXI,
  -0.018174139316033223 * ZIZZXXI,
  -0.009109928028164897 * ZZYXYZZ,
  -0.009109928028164897 * ZIXXXZZ,
  0.009109928028164897 * IIYXYII,
  0.009109928028164897 * IZXXXII,
  -0.009109928028164897 * IYXXYZZ,
  -0.009109928028164897 * ZXXXXZZ,
  0.009109928028164897 * IXYXYII,
  -0.009109928028164897 * ZYYXXII,
  -0.0037769698263283727 * YXXXYXZ,
  -0.0037769698263283727 * XXXXXXZ,
  0.0037769698263283727 * XXYXYXI,
  -0.0037769698263283727 * YXYXXXI,
  0.08848324388920974 * ZIZZZZZ,
  -0.026180947964189325 * IIIXIXZ,
  0.026180947964189325 * IIZXZXZ,
  0.026180947964189325 * ZIZXIXI,
  -0.026180947964189325 * ZIIXZXI,
  0.014138101935476691 * XXYYIZZ,
  -0.014138101935476691 * YXYXZZZ,
  -0.004927793954058792 * ZZXIIZZ,
  0.004927793954058792 * ZIXZIZZ,
  0.004927793954058792 * IIXIIII,
  -0.004927793954058792 * IZXZIII,
  0.004927793954058792 * IYYIIZZ,
  0.004927793954058792 * ZXXZIZZ,
  0.004927793954058792 * IXXIIII,
  0.004927793954058792 * ZYYZIII,
  0.017090734858748513 * YXYIIXZ,
  0.017090734858748513 * XXXZIXZ,
  0.017090734858748513 * XXXIIXI,
  0.017090734858748513 * YXYZIXI,
  0.06407950132946855 * IIZIIZZ,
  0.38947179486833605 * ZIZIIII,
  0.179971955897211 * IZZIIZI,
  0.16174867735871268 * IZZIZII,
  -0.04184298810460943 * IZZYYII,
  -0.04184298810460943 * IZIXXII,
  0.09794163115253693 * IZZZZII,
  -0.0020685190995506616 * ZIXYIYI,
  0.0020685190995506616 * ZZYXZYI,
  0.0020685190995506616 * ZZYYIXI,
  0.0020685190995506616 * ZIXXZXI,
  0.03894386973055031 * YYYYIII,
  0.03894386973055031 * XYYXZII,
  0.10452079304611409 * IZIZIII,
  -0.012128953755816447 * ZXZIIII,
  0.012128953755816447 * IXIIIII,
  0.005307311299696489 * XYZIIYI,
  -0.005307311299696489 * YXIIIYI,
  0.005307311299696489 * XXIIIXI,
  0.005307311299696489 * YYZIIXI,
  0.179971955897211 * ZZZIIII,
  0.179971955897211 * ZZIIIZI,
  0.16174867735871268 * ZZIIZII,
  -0.04184298810460943 * ZZIYYII,
  -0.04184298810460943 * ZZZXXII,
  0.09794163115253693 * ZZIZZII,
  -0.0020685190995506616 * ZXXYIYI,
  0.0020685190995506616 * IYXXZYI,
  0.0020685190995506616 * IYXYIXI,
  0.0020685190995506616 * ZXXXZXI,
  -0.03894386973055031 * XYXYIII,
  0.03894386973055031 * YYXXZII,
  0.10452079304611409 * ZZZZIII,
  0.005307311299696489 * YZIIIYI,
  -0.005307311299696489 * YIIIIYI,
  0.005307311299696489 * XIIIIXI,
  -0.005307311299696489 * XZIIIXI,
  0.179971955897211 * IZIIIII,
  0.0861358810885355 * IIIIZZI,
  -0.016296167161196 * IIIYYZI,
  -0.016296167161196 * IIZXXZI,
  0.06407950132946855 * IIZZIZI,
  0.040250886556585874 * IIIZIII,
  -0.009486035371925775 * XXXXIII,
  -0.009486035371925775 * YXXYZII,
  0.07091084272291098 * ZIIIZII,
  0.011317121072777164 * IIZYYII,
  0.011317121072777164 * IIIXXII,
  0.008888189559655419 * XXXIXII,
  0.00036191340035786427 * YXYZXII,
  0.008526276159297555 * XXYIYII,
  0.008526276159297555 * YXXIYII,
  -0.00036191340035786427 * XXXZXII,
  -0.008888189559655419 * YXYIXII,
  -0.012519197334867626 * ZIZXXII,
  -0.012519197334867626 * ZIIYYII,
  0.032082679315716574 * IIZIZII,
  0.012042846028712629 * XXYYZII,
  -0.012042846028712629 * YXYXIII,
  0.04698876647072008 * ZIZZIII
])
-- quantum_instance: None
-- optimizer: <qiskit.aqua.components.optimizers.cobyla.COBYLA object at 0x7f92604ea190>
-- gradient: None
-- cost_fn: <bound method VQE._energy_evaluation of <qiskit.aqua.algorithms.minimum_eigen_solvers.vqe.VQE object at 0x7f92b979a690>>
-- initial_point: [ 1.55322756e-05  2.34547289e-06 -1.43096817e-06  6.09302632e-08
 -2.41136702e-03  1.37912980e-06  7.07982466e-06  3.14157647e+00
  3.14165653e+00 -4.28927236e-07 -2.41374566e-03 -6.99681634e-08
  5.33657068e-07  3.86448423e-06]
-- var_form:      ┌──────────┐            ┌──────────┐                                     »
q_0: ┤ RY(θ[0]) ├─────■──────┤ RY(θ[7]) ├─────────────────────────────────────»
     ├──────────┤   ┌─┴─┐    └──────────┘┌──────────┐                         »
q_1: ┤ RY(θ[1]) ├───┤ X ├─────────■──────┤ RY(θ[8]) ├─────────────────────────»
     └──┬───┬───┘┌──┴───┴───┐   ┌─┴─┐    └──────────┘┌──────────┐             »
q_2: ───┤ X ├────┤ RY(θ[2]) ├───┤ X ├─────────■──────┤ RY(θ[9]) ├─────────────»
     ┌──┴───┴───┐└──────────┘   └───┘       ┌─┴─┐    └──────────┘┌───────────┐»
q_3: ┤ RY(θ[3]) ├───────────────────────────┤ X ├─────────■──────┤ RY(θ[10]) ├»
     ├──────────┤                           └───┘       ┌─┴─┐    └───────────┘»
q_4: ┤ RY(θ[4]) ├───────────────────────────────────────┤ X ├──────────■──────»
     ├──────────┤                                       └───┘        ┌─┴─┐    »
q_5: ┤ RY(θ[5]) ├────────────────────────────────────────────────────┤ X ├────»
     ├──────────┤                                                    └───┘    »
q_6: ┤ RY(θ[6]) ├─────────────────────────────────────────────────────────────»
     └──────────┘                                                             »
«                               
«q_0: ──────────────────────────
«                               
«q_1: ──────────────────────────
«                               
«q_2: ──────────────────────────
«                               
«q_3: ──────────────────────────
«     ┌───────────┐             
«q_4: ┤ RY(θ[11]) ├─────────────
«     └───────────┘┌───────────┐
«q_5: ──────■──────┤ RY(θ[12]) ├
«         ┌─┴─┐    ├───────────┤
«q_6: ────┤ X ├────┤ RY(θ[13]) ├
«         └───┘    └───────────┘
-- var_form_params: [ParameterVectorElement(θ[0]), ParameterVectorElement(θ[10]), ParameterVectorElement(θ[11]), ParameterVectorElement(θ[12]), ParameterVectorElement(θ[13]), ParameterVectorElement(θ[1]), ParameterVectorElement(θ[2]), ParameterVectorElement(θ[3]), ParameterVectorElement(θ[4]), ParameterVectorElement(θ[5]), ParameterVectorElement(θ[6]), ParameterVectorElement(θ[7]), ParameterVectorElement(θ[8]), ParameterVectorElement(θ[9])]
-- parameterized_circuits: None
-- ret: None
-- eval_time: None
-- callback: None
-- aux_op_nones: [False, False, False, False, False, False]
-- aux_operators: [SummedOp([PauliOp(Pauli('IIIIIII'), coeff=5.999999999999994), PauliOp(Pauli('ZIIZZZZ'), coeff=-0.4999999999999996), PauliOp(Pauli('ZIIZZZI'), coeff=-0.4999999999999996), PauliOp(Pauli('ZIZIIZZ'), coeff=-0.4999999999999996), PauliOp(Pauli('IZZIIII'), coeff=-0.9999999999999992), PauliOp(Pauli('ZZIIIII'), coeff=-0.9999999999999992), PauliOp(Pauli('IIIIIZI'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIIZII'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIZZII'), coeff=-0.4999999999999996), PauliOp(Pauli('IIZZIII'), coeff=-0.4999999999999996), PauliOp(Pauli('ZIIIIII'), coeff=-0.4999999999999996)], coeff=1.0, abelian=False), SummedOp([PauliOp(Pauli('IIIIIII'), coeff=1.4999999999999987), PauliOp(Pauli('IIIIIIZ'), coeff=0.1249999999999999), PauliOp(Pauli('IIZZZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIZZIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIZIZZ'), coeff=-0.7499999999999992), PauliOp(Pauli('ZIIIIZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIZIZZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIZZZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIIZXZZ'), coeff=0.1249999999999999), PauliOp(Pauli('IIIIXIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIXZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZXIZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIXII'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIIZXZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZXII'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIXZI'), coeff=0.1249999999999999), PauliOp(Pauli('IIIYXIY'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIZYYZX'), coeff=-0.2499999999999998), PauliOp(Pauli('IIZXYIY'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIXXZX'), coeff=-0.2499999999999998), PauliOp(Pauli('YXXXXYX'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXXYXX'), coeff=-0.1249999999999999), PauliOp(Pauli('XXXXYYX'), coeff=0.1249999999999999), PauliOp(Pauli('XXXXXXX'), coeff=-0.1249999999999999), PauliOp(Pauli('XXXYXXY'), coeff=0.1249999999999999), PauliOp(Pauli('XXXYYYY'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXYYXY'), coeff=0.1249999999999999), PauliOp(Pauli('YXXYXYY'), coeff=0.1249999999999999), PauliOp(Pauli('IIZZZIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIZZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIZIZI'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIIIIZI'), coeff=-0.7499999999999992), PauliOp(Pauli('ZIZIZZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZZZI'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIIXIZX'), coeff=0.1249999999999999), PauliOp(Pauli('IIZYZIY'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIZXZZX'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIYIIY'), coeff=0.1249999999999999), PauliOp(Pauli('IIIXIIX'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIZYZZY'), coeff=0.1249999999999999), PauliOp(Pauli('IIZXZIX'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIYIZY'), coeff=-0.1249999999999999), PauliOp(Pauli('XXXYIXY'), coeff=-0.2499999999999998), PauliOp(Pauli('XXXXZYY'), coeff=-0.2499999999999998), PauliOp(Pauli('YXXXZXY'), coeff=0.2499999999999998), PauliOp(Pauli('YXXYIYY'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIZIIIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIZZZZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIZIIZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXZIYZ'), coeff=-0.1249999999999999), PauliOp(Pauli('YXYIIXZ'), coeff=-0.1249999999999999), PauliOp(Pauli('XXYIIYZ'), coeff=0.1249999999999999), PauliOp(Pauli('XXXZIXZ'), coeff=-0.1249999999999999), PauliOp(Pauli('XXXIIXI'), coeff=-0.1249999999999999), PauliOp(Pauli('XXYZIYI'), coeff=0.1249999999999999), PauliOp(Pauli('YXYZIXI'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXIIYI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIZZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIZZIZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZIII'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIZII'), coeff=0.1249999999999999), PauliOp(Pauli('IIZIZII'), coeff=0.1249999999999999), PauliOp(Pauli('ZIZZIII'), coeff=0.1249999999999999)], coeff=1.0, abelian=False), SummedOp([PauliOp(Pauli('ZIIZZZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIIZZZI'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIZIIZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIIZI'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIZII'), coeff=0.2499999999999998), PauliOp(Pauli('IIIZZII'), coeff=0.2499999999999998), PauliOp(Pauli('IIZZIII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIIIII'), coeff=0.2499999999999998)], coeff=1.0, abelian=False), PauliOp(Pauli('IIIIIII'), coeff=0.0), PauliOp(Pauli('IIIIIII'), coeff=0.0), PauliOp(Pauli('IIIIIII'), coeff=0.0)]
-- eval_count: 0
===============================================================
NLocal: EfficientSU2
-- base_name: nlocal
-- data: [(<qiskit.circuit.library.standard_gates.x.XGate object at 0x7f92a9f0c7d0>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b984d090>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f9288868cd0>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b982e210>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b982e7d0>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b982e850>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b982e350>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f927a2cadd0>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f92a9f0cd90>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f92b9819990>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f92b9819d90>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f92b9819410>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f92b9819390>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f92b9819b50>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f927a12e910>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b979a710>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b979a510>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b9819f90>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b9819910>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b9819490>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b98197d0>, [Qubit(QuantumRegister(7, 'q'), 6)], [])]
-- qregs: [QuantumRegister(7, 'q')]
-- qubits: [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)]
-- qubit_set: {Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 6), Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 3)}
-- parameter_table: ParameterTable({ParameterVectorElement(θ[0]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b984d090>, 0)], ParameterVectorElement(θ[1]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f9288868cd0>, 0)], ParameterVectorElement(θ[2]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b982e210>, 0)], ParameterVectorElement(θ[3]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b982e7d0>, 0)], ParameterVectorElement(θ[4]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b982e850>, 0)], ParameterVectorElement(θ[5]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b982e350>, 0)], ParameterVectorElement(θ[6]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f927a2cadd0>, 0)], ParameterVectorElement(θ[7]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f927a12e910>, 0)], ParameterVectorElement(θ[8]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b979a710>, 0)], ParameterVectorElement(θ[9]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b979a510>, 0)], ParameterVectorElement(θ[10]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b9819f90>, 0)], ParameterVectorElement(θ[11]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b9819910>, 0)], ParameterVectorElement(θ[12]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b9819490>, 0)], ParameterVectorElement(θ[13]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92b98197d0>, 0)]})
-- clbits: []
-- clbit_set: set()
-- ancillas: []
-- calibrations: defaultdict(<class 'dict'>, {})
-- parameters: [ParameterVectorElement(θ[0]), ParameterVectorElement(θ[1]), ParameterVectorElement(θ[2]), ParameterVectorElement(θ[3]), ParameterVectorElement(θ[4]), ParameterVectorElement(θ[5]), ParameterVectorElement(θ[6]), ParameterVectorElement(θ[7]), ParameterVectorElement(θ[8]), ParameterVectorElement(θ[9]), ParameterVectorElement(θ[10]), ParameterVectorElement(θ[11]), ParameterVectorElement(θ[12]), ParameterVectorElement(θ[13])]
-- layout: None
-- global_phase: 0
-- metadata: None
-- cregs: []
-- num_qubits: 7
-- insert_barriers: False
-- reps: 1
-- entanglement_blocks: [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7f92a9f0ca10>]
-- rotation_blocks: [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7f92a9f0cc50>]
-- prepended_blocks: []
-- prepended_entanglement: []
-- appended_blocks: []
-- appended_entanglement: []
-- entanglement: linear
-- entangler_maps: None
-- ordered_parameters: θ, ['θ[0]', 'θ[1]', 'θ[2]', 'θ[3]', 'θ[4]', 'θ[5]', 'θ[6]', 'θ[7]', 'θ[8]', 'θ[9]', 'θ[10]', 'θ[11]', 'θ[12]', 'θ[13]']
-- overwrite_block_parameters: True
-- skip_final_rotation_layer: False
-- skip_unentangled_qubits: False
-- initial_state: <qiskit.chemistry.components.initial_states.hartree_fock.HartreeFock object at 0x7f92b9020990>
-- initial_state_circuit:           
q_0: ─────
          
q_1: ─────
     ┌───┐
q_2: ┤ X ├
     └───┘
q_3: ─────
          
q_4: ─────
          
q_5: ─────
          
q_6: ─────
          
-- bounds: None
===============================================================
Optimizer: COBYLA
-- gradient_support_level: 1
-- bounds_support_level: 1
-- initial_point_support_level: 3
-- options: {'maxiter': 0, 'disp': False, 'rhobeg': 1.0}
-- max_evals_grouped: 1
-- tol: None
===============================================================

2022-04-18 23:13:47,429:qiskit.aqua.quantum_instance:INFO: statevector backend only works with shot=1, changing shots from 1024 to 1.
2022-04-18 23:13:47,429:qiskit.aqua.quantum_instance:INFO: 
Qiskit Terra version: 0.17.0
Backend: 'statevector_simulator (AerProvider)', with following setting:
{'basis_gates': ['ccx', 'cp', 'cswap', 'csx', 'cu1', 'cu2', 'cu3', 'cx', 'cy', 'cz', 'delay', 'diagonal', 'h', 'id', 'initialize', 'mcp', 'mcr', 'mcrx', 'mcry', 'mcrz', 'mcswap', 'mcsx', 'mcu1', 'mcu2', 'mcu3', 'mcx', 'mcy', 'mcz', 'multiplexer', 'p', 'pauli', 'r', 'rx', 'rxx', 'ry', 'ryy', 'rz', 'rzx', 'rzz', 's', 'sdg', 'swap', 'sx', 't', 'tdg', 'u', 'u1', 'u2', 'u3', 'unitary', 'x', 'y', 'z', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector'], 'coupling_map': None}
{'initial_layout': None, 'seed_transpiler': None, 'optimization_level': None}
RunConfig(max_credits=10, shots=1)
{'timeout': None}
{}
{}
Measurement mitigation: None
2022-04-18 23:13:47,429:qiskit.aqua.algorithms.vq_algorithm:INFO: Starting optimizer.
bounds=[(-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793)]
initial point=[ 1.55322756e-05  2.34547289e-06 -1.43096817e-06  6.09302632e-08
 -2.41136702e-03  1.37912980e-06  7.07982466e-06  3.14157647e+00
  3.14165653e+00 -4.28927236e-07 -2.41374566e-03 -6.99681634e-08
  5.33657068e-07  3.86448423e-06]
2022-04-18 23:13:47,760:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: Energy evaluation returned [-2.54832468] - 8.20684 (ms), eval count: 1
2022-04-18 23:13:47,761:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: Optimization complete in 0.33133721351623535 seconds.
Found opt_params [ 1.55322756e-05  2.34547289e-06 -1.43096817e-06  6.09302632e-08
 -2.41136702e-03  1.37912980e-06  7.07982466e-06  3.14157647e+00
  3.14165653e+00 -4.28927236e-07 -2.41374566e-03 -6.99681634e-08
  5.33657068e-07  3.86448423e-06] in 1 evals
ancilla op commutes?  True
ancilla op commutes?  True
ancilla op commutes?  True
ancilla op commutes?  False
ancilla op commutes?  False
ancilla op commutes?  False
#INFO: **** input file is /Users/mario/Documents/GitHub/VATech/quantum_database/second_quantization/circuits/hardware_efficient/gather_beh2_results_ry_linear.py ****
from qiskit                                        import *
from qiskit.chemistry.drivers                      import UnitsType,HFMethodType
from qiskit.chemistry.core                         import Hamiltonian,TransformationType,QubitMappingType
from qiskit.chemistry.components.initial_states    import HartreeFock
from qiskit.chemistry.components.variational_forms import UCCSD
from qiskit.aqua.components.optimizers             import L_BFGS_B,COBYLA,CG
from qiskit.aqua.algorithms                        import VQE
from qiskit.aqua                                   import QuantumInstance,aqua_globals
from qiskit.circuit.library                        import EfficientSU2

import logging
from   qiskit.chemistry import set_qiskit_chemistry_logging
from   qiskit.aqua      import set_qiskit_aqua_logging
set_qiskit_chemistry_logging(logging.INFO)
set_qiskit_aqua_logging(logging.INFO)

import sys
import numpy as np
sys.path.append('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/subroutines')
sys.path.append('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/subroutines/pyscfd')
from pyscfdriver import *
from utils       import *

def print_circuit(fname,circuit):
    outf = open(fname,'w')
    for gate in circuit:
        gate_name = gate[0].name
        qubits = [q.index for q in gate[1]]
        outf.write(str(gate_name)+' | '+' '.join([str(x) for x in qubits])+' | '+' '.join([str(x._symbol_expr) for x in gate[0].params])+'\n')
    outf.close()

def print_results(fname,res_vqe,res_ee,dN=0):
    outf = open(fname,'w')
    outf.write('%.12f %.12f \n' % (res_vqe[0],np.real(res_ee[0])))
    outf.write('%.12f %.12f \n' % (res_vqe[1]+dN,np.real(res_ee[1]+dN)))
    outf.write('%.12f %.12f \n' % (res_vqe[2],np.real(res_ee[2])))
    outf.write('%.12f %.12f \n' % (res_vqe[3],np.real(res_ee[3])))
    outf.close()

dist_list = [2.1,2.3,2.5,2.7,2.9,3.1,3.3,3.5] #[0.7,0.9,1.1,1.3,1.5,1.7,1.9,2.1,2.3,2.5,2.7,2.9,3.1,3.3,3.5,3.7,3.9,4.1,4.3,4.5]
depth_list = [1] #[1,2,3,4,5,6,7,8]

for depth in depth_list:
  for dist in dist_list:

    outfile = open('pes.txt','w')
    
    outfile.write("Bond distance: {}\n".format(dist))
    rho = np.load('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/SCF_FCI/beh2/res_fourth_pass.npy',allow_pickle=True).item()
    rho = rho[str(dist)]['rho_scf']
    driver    = PySCFDriver(atom="Be 0.0000 0.0000 0.0000; H 0.0000 0.0000 -{0}; H 0.0000 0.0000 {0}".format(dist),
                            unit=UnitsType.ANGSTROM,charge=0,spin=0,basis='sto-6g',hf_method=HFMethodType.RHF,symgroup='dooh',
                            outfile=outfile,irrep_nelec={'A1g':4,'A1u':2},rho=rho)
    molecule  = driver.run()
    outfile.write("\nHartree-Fock energy %f \n" % (molecule.hf_energy))
    
    core      = Hamiltonian(transformation=TransformationType.FULL,qubit_mapping=QubitMappingType.PARITY,two_qubit_reduction=True,freeze_core=False,orbital_reduction=[0])
    H_op,A_op = core.run(molecule)
    
    z2syms,sqlist           = None,None
    H_op,A_op,z2syms,sqlist = taper(molecule,core,H_op,A_op,outfile)
    
    init_state = HartreeFock(num_orbitals=core._molecule_info['num_orbitals'],qubit_mapping=core._qubit_mapping,two_qubit_reduction=core._two_qubit_reduction,num_particles=core._molecule_info['num_particles'],sq_list=sqlist)
    init_state.construct_circuit()
    x_hf = init_state._bitstr
 
    outfile.write("\nHartree-Fock energy %f \n" % (molecule.hf_energy))
    outfile.write("\nHartree-Fock circuit\n")
    outfile.write(str(init_state.construct_circuit().draw())+"\n")

    par = np.loadtxt('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/Ry_linear_DEPTH_%d/beh2/R_%s/output_parameters.txt' % (depth,str(dist)))
    var_form  = EfficientSU2(num_qubits=H_op.num_qubits,reps=depth,entanglement='linear',su2_gates=['ry'],initial_state=init_state)
    circuit = var_form.bind_parameters(par)

    optimizer = COBYLA(maxiter=0)
    algo      = VQE(H_op,var_form,optimizer,aux_operators=A_op,include_custom=True,initial_point=par)
    backend          = Aer.get_backend('statevector_simulator')
    quantum_instance = QuantumInstance(backend=backend)
    algo_result      = algo.run(quantum_instance)
    
    # -----------------------------------------------------------------------------------------------------------------------
    
    p1 = algo._ret['opt_params']
    res_vqe,res_ee = get_results(H_op,A_op,molecule,core,algo_result,outfile)
    print_results('ry_linear_%d/beh2_%s_results.txt' % (depth,str(dist)),res_vqe,res_ee,dN=2)

    circuit = var_form.bind_parameters(p1)
    print_circuit('ry_linear_%d/beh2_%s_circuit.txt' % (depth,str(dist)),circuit)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Mon Apr 18 23:13:48 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 3
[INPUT] num. electrons = 6
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry Dooh subgroup None
[INPUT] Mole.unit = Angstrom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000  -3.300000000000 AA    0.000000000000   0.000000000000  -6.236096211065 Bohr
[INPUT]  3 H      0.000000000000   0.000000000000   3.300000000000 AA    0.000000000000   0.000000000000   6.236096211065 Bohr

nuclear repulsion = 1.36303220994545
point group symmetry = Dooh
num. orbitals of irrep A1g = 3
num. orbitals of irrep A1u = 2
num. orbitals of irrep E1uy = 1
num. orbitals of irrep E1ux = 1
number of shells = 5
number of NR pGTOs = 42
number of NR cGTOs = 7
basis = sto-6g
ecp = {}
CPU time:        72.10

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 6 electrons in irreps ['A1g', 'A1u']
    0 free electrons in irreps E1uy E1ux




******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmprfv1ib63
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmprfv1ib63
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (A1u) = -0.138540232893578  LUMO (A1g) = -0.0112208845904936
Initial guess E= -15.1369610514212  |g|= 2.2423e-08
macro= 0  E= -15.1369610514212  delta_E= -3.55271e-15  |g|= 2.2423e-08  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-15.1369610514212  |g|= 2.2423e-08  total 2 KF 4 JK
converged SCF energy = -15.1369610514212
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/chemistry_operator.py:170: DeprecationWarning: The qiskit.chemistry.chemistry_operator.MolecularChemistryResult object is deprecated as of 0.8.0 and will be removed no sooner than 3 months after the release. You should use qiskit.chemistry.algorithms.ground_state_solvers.FermionicGroundStateResult instead.
  super().__init__(a_dict)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:381: DeprecationWarning: The qiskit.chemistry.chemistry_operator.MolecularGroundStateResult object is deprecated as of 0.8.0 and will be removed no sooner than 3 months after the release. You should use qiskit.chemistry.algorithms.ground_state_solvers.FermionicGroundStateResult instead.
  mgsr = MolecularGroundStateResult()
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:91: DeprecationWarning: The ChemistryOperator is deprecated as of Qiskit Aqua 0.8.0 and will be removed no earlier than 3 months after the release date. Instead, the FermionicTransformation can be used to transform QMolecules and construct ground state result objects.
  super().__init__()
2022-04-18 23:13:48,214:qiskit.chemistry.core.hamiltonian:INFO: Configured orbital reduction list: [0]
2022-04-18 23:13:48,215:qiskit.chemistry.core.hamiltonian:INFO: Combined orbital reduction list: [0]
2022-04-18 23:13:48,215:qiskit.chemistry.core.hamiltonian:INFO:   converting to spin orbital reduction list: [0 7]
2022-04-18 23:13:48,215:qiskit.chemistry.core.hamiltonian:INFO:     => freezing spin orbitals: [0 7]
2022-04-18 23:13:48,215:qiskit.chemistry.core.hamiltonian:INFO:     => removing spin orbitals: [] (indexes accounting for freeze [])
2022-04-18 23:13:48,289:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital energy shift: -14.234978244990751
2022-04-18 23:13:50,958:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital x dipole shift: 0.0
2022-04-18 23:13:51,023:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital y dipole shift: 0.0
2022-04-18 23:13:51,094:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital z dipole shift: 0.0
2022-04-18 23:13:51,181:qiskit.chemistry.core.hamiltonian:INFO: Molecule num electrons: [3, 3], remaining for processing: [2, 2]
2022-04-18 23:13:51,182:qiskit.chemistry.core.hamiltonian:INFO: Molecule num spin orbitals: 14, remaining for processing: 12
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:417: DeprecationWarning: Processing a dictionary result is deprecated, pass a (minimum) eigensolver result now.
  ' pass a (minimum) eigensolver result now.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:134: DeprecationWarning: energy deprecated, use eigenvalues property.
  warnings.warn('energy deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:134: DeprecationWarning: energy deprecated, use eigenvalues property.
  warnings.warn('energy deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:149: DeprecationWarning: aux_ops deprecated, use aux_operator_eigenvalues property.
  DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:138: DeprecationWarning: energies deprecated, use eigenvalues property.
  warnings.warn('energies deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:138: DeprecationWarning: energies deprecated, use eigenvalues property.
  warnings.warn('energies deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:149: DeprecationWarning: aux_ops deprecated, use aux_operator_eigenvalues property.
  DeprecationWarning)
2022-04-18 23:13:56,782:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: 
==================== Setting of VQE ============================
Algorithm: VQE
-- max_evals_grouped: 1
-- circuit_sampler: None
-- expectation: None
-- user_valid_expectation: False
-- include_custom: True
-- expect_op: None
-- operator: SummedOp([
  -0.5331263239137854 * IIIIIII,
  -0.28535594911716355 * ZIIZZZZ,
  0.08194420250122286 * ZIZIIZX,
  -0.08194420250122286 * ZIIZZZX,
  -0.13519728521124616 * ZIIZZZI,
  -0.07177790815210285 * ZIIZZYY,
  0.07177790815210285 * IIIIIYY,
  -0.1580651847801075 * ZIZIIZZ,
  -0.8576896781233205 * IZZIIII,
  -0.8576896781233205 * ZZIIIII,
  -0.41554790159067556 * IIIIIZI,
  -0.2853559491171636 * IIIIZII,
  0.08194420250122285 * IIZXXII,
  0.08194420250122285 * IIIYYII,
  -0.13519728521124602 * IIIZZII,
  0.07177790815210286 * XXXXZII,
  0.07177790815210286 * YXXYIII,
  -0.1580651847801074 * IIZZIII,
  -0.4155479015906754 * ZIIIIII,
  0.03874529986255832 * IIIIIIZ,
  -0.008327835480474543 * IIIIIXX,
  0.008327835480474543 * ZIIZZXX,
  0.07995910709259704 * IIZZZII,
  0.1680142428109963 * ZZZZZZZ,
  0.1680142428109963 * IZIZZZZ,
  0.07357639037124884 * ZIIZZIZ,
  -0.009201562040401649 * IIZZZIX,
  0.009201562040401649 * IIIIIIX,
  0.007947487726502965 * IIIIIXI,
  0.0003112452241667625 * ZIZIIXZ,
  -0.008258732950669726 * IIZZZXZ,
  -0.008258732950669726 * ZIIZZXZ,
  0.0003112452241667625 * IIIIIXZ,
  0.007947487726502965 * ZIZIIXI,
  -0.03763077148412431 * ZZIIIZX,
  0.03763077148412431 * ZZZZZZX,
  -0.03763077148412431 * IZZIIZX,
  0.03763077148412431 * IZIZZZX,
  -0.011850354457645722 * ZIZIIIX,
  0.011850354457645722 * ZIIZZIX,
  0.177477330653629 * ZIIZIZZ,
  -0.032092438323290645 * ZIZIZZX,
  0.032092438323290645 * ZIIZIZX,
  -0.014088041800879025 * IIIIXIZ,
  0.014088041800879025 * IIIZXIZ,
  0.014088041800879025 * IIIIXII,
  -0.014088041800879025 * IIIZXII,
  0.00409807934033433 * IIIIXXX,
  -0.00409807934033433 * IIIZXXX,
  0.00409807934033433 * ZIIZYXY,
  -0.00409807934033433 * ZIIIYXY,
  0.032092438323290645 * ZIIXXZZ,
  0.032092438323290645 * ZIZYYZZ,
  0.03127983366655123 * ZIZYYZX,
  0.03127983366655123 * ZIIXXZX,
  0.018422946455038416 * ZZYXYZX,
  0.018422946455038416 * ZIXXXZX,
  -0.018422946455038416 * IIXYXIY,
  -0.018422946455038416 * IZYYYIY,
  0.018422946455038416 * IYXXYZX,
  0.018422946455038416 * ZXXXXZX,
  -0.018422946455038416 * IXXYXIY,
  -0.018422946455038416 * ZYXYYIY,
  -0.004098079340334329 * YXXXYIZ,
  -0.004098079340334329 * XXXXXIZ,
  0.004098079340334329 * YXXXYII,
  0.004098079340334329 * XXXXXII,
  0.01677165716456906 * YXXXYXX,
  0.01677165716456906 * XXXXXXX,
  -0.01677165716456906 * XXXYXXY,
  -0.01677165716456906 * YXXYYXY,
  0.052833341663437346 * ZIIIIZZ,
  0.01883307810045955 * ZIZZZZX,
  -0.01883307810045955 * ZIIIIZX,
  -0.028034640140861194 * IIIXIIZ,
  0.028034640140861194 * IIZXZIZ,
  0.028034640140861194 * IIIXIII,
  -0.028034640140861194 * IIZXZII,
  -0.004653668158940993 * IIIXIXX,
  0.004653668158940993 * IIZXZXX,
  -0.004653668158940993 * ZIIYZXY,
  0.004653668158940993 * ZIZYIXY,
  0.012425914820808874 * XXXXZZZ,
  0.012425914820808874 * YXXYIZZ,
  0.012912401109610722 * XXYYIZX,
  -0.012912401109610722 * YXYXZZX,
  0.012912401109610722 * XXXXZZX,
  0.012912401109610722 * YXXYIZX,
  0.11123894075914827 * ZIZIZZZ,
  0.007845000291235419 * ZZXIIZX,
  -0.007845000291235419 * ZIXZIZX,
  0.007845000291235419 * IIYZZIY,
  -0.007845000291235419 * IZYIZIY,
  -0.007845000291235419 * IYYIIZX,
  -0.007845000291235419 * ZXXZIZX,
  0.007845000291235419 * IXYZZIY,
  -0.007845000291235419 * ZYXIZIY,
  0.012601155885443957 * YXYIIIZ,
  0.012601155885443957 * XXXZIIZ,
  -0.012601155885443957 * YXYIIII,
  -0.012601155885443957 * XXXZIII,
  -0.00544287341629868 * YXYIIXX,
  -0.00544287341629868 * XXXZIXX,
  0.00544287341629868 * XXYZZXY,
  -0.00544287341629868 * YXXIZXY,
  0.09034804753581789 * IIIZZZZ,
  -0.017293227873944404 * IIZIIZX,
  0.017293227873944404 * IIIZZZX,
  0.02664117706021128 * IIZZZIZ,
  0.08778225498008668 * ZZZZZZI,
  0.08778225498008668 * IZIZZZI,
  0.08435673288301816 * ZIIZZII,
  -0.009346862677733535 * IIZZZXX,
  0.009346862677733535 * ZIZIIXX,
  0.032797751213067015 * ZZZZZYY,
  -0.032797751213067015 * IZZIIYY,
  0.032797751213067015 * IZIZZYY,
  -0.032797751213067015 * ZZIIIYY,
  0.052833341663437346 * ZIIZIZI,
  0.012425914820808874 * ZIIZIYY,
  -0.012425914820808874 * IIIIZYY,
  0.028034640140861194 * IIZZYIY,
  -0.028034640140861194 * IIZIYIY,
  0.028034640140861194 * IIIIXIX,
  -0.028034640140861194 * IIIZXIX,
  -0.01883307810045955 * ZIIXXZI,
  -0.01883307810045955 * ZIZYYZI,
  0.012912401109610719 * ZIIXXYY,
  0.012912401109610719 * ZIZYYYY,
  0.012912401109610719 * IIIYYYY,
  0.012912401109610719 * IIZXXYY,
  -0.004653668158940994 * YXYYXIY,
  0.004653668158940994 * XXYYYIY,
  -0.004653668158940994 * YXXXYIX,
  -0.004653668158940994 * XXXXXIX,
  0.19730261245692213 * ZIIIIZI,
  -0.03203119069433555 * ZIIIIYY,
  0.03203119069433555 * IIIZZYY,
  0.06646545661789252 * IIZYZIY,
  -0.06646545661789252 * IIIYIIY,
  0.06646545661789252 * IIIXIIX,
  -0.06646545661789252 * IIZXZIX,
  0.0005008402427955572 * IZYXZIY,
  -0.0005008402427955572 * IIXYIIY,
  -0.0005008402427955572 * ZIXYIZY,
  0.0005008402427955572 * ZZYXZZY,
  0.0005008402427955572 * ZYXXZIY,
  -0.0005008402427955572 * IXXYIIY,
  -0.0005008402427955572 * ZXXYIZY,
  0.0005008402427955572 * IYXXZZY,
  -0.03203119069433555 * XXXXZZI,
  -0.03203119069433555 * YXXYIZI,
  0.02317197477187908 * XXXXZYY,
  0.02317197477187908 * YXXYIYY,
  0.09310663367810379 * ZIZIZZI,
  -0.014441901053319897 * ZIZIZYY,
  0.014441901053319897 * IIZZIYY,
  0.02378876373105343 * YXXZZIY,
  -0.02378876373105343 * XXYIZIY,
  -0.02378876373105343 * YXYIIIX,
  -0.02378876373105343 * XXXZIIX,
  -0.0016671440655961654 * YXIZZIY,
  0.0016671440655961654 * XYZZZIY,
  0.0016671440655961654 * XYZIIZY,
  -0.0016671440655961654 * YXIIIZY,
  -0.0016671440655961654 * YIIZZIY,
  0.0016671440655961654 * YZIZZIY,
  0.0016671440655961654 * YZIIIZY,
  -0.0016671440655961654 * YIIIIZY,
  0.10752870765489723 * IIIZZZI,
  0.09349044035283754 * ZZIIIZZ,
  0.09349044035283754 * IZZIIZZ,
  0.04442658204653161 * ZIZIIIZ,
  -0.012601155885443957 * IIIIXXZ,
  0.012601155885443957 * IIIZXXZ,
  0.012601155885443957 * ZIZIXXI,
  -0.012601155885443957 * ZIZZXXI,
  -0.007845000291235419 * ZZYXYZZ,
  -0.007845000291235419 * ZIXXXZZ,
  0.007845000291235419 * IIYXYII,
  0.007845000291235419 * IZXXXII,
  -0.007845000291235419 * IYXXYZZ,
  -0.007845000291235419 * ZXXXXZZ,
  0.007845000291235419 * IXYXYII,
  -0.007845000291235419 * ZYYXXII,
  -0.005442873416298681 * YXXXYXZ,
  -0.005442873416298681 * XXXXXXZ,
  0.005442873416298681 * XXYXYXI,
  -0.005442873416298681 * YXYXXXI,
  0.09310663367810379 * ZIZZZZZ,
  -0.023788763731053427 * IIIXIXZ,
  0.023788763731053427 * IIZXZXZ,
  0.023788763731053427 * ZIZXIXI,
  -0.023788763731053427 * ZIIXZXI,
  0.014441901053319894 * XXYYIZZ,
  -0.014441901053319894 * YXYXZZZ,
  -0.0033459992975665605 * ZZXIIZZ,
  0.0033459992975665605 * ZIXZIZZ,
  0.0033459992975665605 * IIXIIII,
  -0.0033459992975665605 * IZXZIII,
  0.0033459992975665605 * IYYIIZZ,
  0.0033459992975665605 * ZXXZIZZ,
  0.0033459992975665605 * IXXIIII,
  0.0033459992975665605 * ZYYZIII,
  0.01168084217595443 * YXYIIXZ,
  0.01168084217595443 * XXXZIXZ,
  0.01168084217595443 * XXXIIXI,
  0.01168084217595443 * YXYZIXI,
  0.05610742422248605 * IIZIIZZ,
  0.38947179486833605 * ZIZIIII,
  0.18519638743344666 * IZZIIZI,
  0.1680142428109963 * IZZIZII,
  -0.03763077148412431 * IZZYYII,
  -0.03763077148412431 * IZIXXII,
  0.08778225498008668 * IZZZZII,
  -0.0016671440655961654 * ZIXYIYI,
  0.0016671440655961654 * ZZYXZYI,
  0.0016671440655961654 * ZZYYIXI,
  0.0016671440655961654 * ZIXXZXI,
  0.032797751213067015 * YYYYIII,
  0.032797751213067015 * XYYXZII,
  0.09349044035283754 * IZIZIII,
  -0.012128953755816447 * ZXZIIII,
  0.012128953755816447 * IXIIIII,
  0.005597562297068158 * XYZIIYI,
  -0.005597562297068158 * YXIIIYI,
  0.005597562297068158 * XXIIIXI,
  0.005597562297068158 * YYZIIXI,
  0.18519638743344666 * ZZZIIII,
  0.18519638743344666 * ZZIIIZI,
  0.1680142428109963 * ZZIIZII,
  -0.03763077148412431 * ZZIYYII,
  -0.03763077148412431 * ZZZXXII,
  0.08778225498008668 * ZZIZZII,
  -0.0016671440655961654 * ZXXYIYI,
  0.0016671440655961654 * IYXXZYI,
  0.0016671440655961654 * IYXYIXI,
  0.0016671440655961654 * ZXXXZXI,
  -0.032797751213067015 * XYXYIII,
  0.032797751213067015 * YYXXZII,
  0.09349044035283754 * ZZZZIII,
  0.005597562297068158 * YZIIIYI,
  -0.005597562297068158 * YIIIIYI,
  0.005597562297068158 * XIIIIXI,
  -0.005597562297068158 * XZIIIXI,
  0.18519638743344666 * IZIIIII,
  0.09034804753581789 * IIIIZZI,
  -0.017293227873944404 * IIIYYZI,
  -0.017293227873944404 * IIZXXZI,
  0.05610742422248605 * IIZZIZI,
  0.03874529986255832 * IIIZIII,
  -0.008327835480474543 * XXXXIII,
  -0.008327835480474543 * YXXYZII,
  0.07357639037124884 * ZIIIZII,
  0.009201562040401649 * IIZYYII,
  0.009201562040401649 * IIIXXII,
  0.007947487726502965 * XXXIXII,
  -0.0003112452241667625 * YXYZXII,
  0.008258732950669726 * XXYIYII,
  0.008258732950669726 * YXXIYII,
  0.0003112452241667625 * XXXZXII,
  -0.007947487726502965 * YXYIXII,
  -0.011850354457645722 * ZIZXXII,
  -0.011850354457645722 * ZIIYYII,
  0.02664117706021128 * IIZIZII,
  0.009346862677733535 * XXYYZII,
  -0.009346862677733535 * YXYXIII,
  0.04442658204653161 * ZIZZIII
])
-- quantum_instance: None
-- optimizer: <qiskit.aqua.components.optimizers.cobyla.COBYLA object at 0x7f92b90dcb50>
-- gradient: None
-- cost_fn: <bound method VQE._energy_evaluation of <qiskit.aqua.algorithms.minimum_eigen_solvers.vqe.VQE object at 0x7f92b9810050>>
-- initial_point: [ 1.55322756e-05  2.34547289e-06 -1.43096817e-06  6.09302632e-08
 -2.41136702e-03  1.37912980e-06  7.07982466e-06  3.14157647e+00
  3.14165653e+00 -4.28927236e-07 -2.41374566e-03 -6.99681634e-08
  5.33657068e-07  3.86448423e-06]
-- var_form:      ┌──────────┐            ┌──────────┐                                     »
q_0: ┤ RY(θ[0]) ├─────■──────┤ RY(θ[7]) ├─────────────────────────────────────»
     ├──────────┤   ┌─┴─┐    └──────────┘┌──────────┐                         »
q_1: ┤ RY(θ[1]) ├───┤ X ├─────────■──────┤ RY(θ[8]) ├─────────────────────────»
     └──┬───┬───┘┌──┴───┴───┐   ┌─┴─┐    └──────────┘┌──────────┐             »
q_2: ───┤ X ├────┤ RY(θ[2]) ├───┤ X ├─────────■──────┤ RY(θ[9]) ├─────────────»
     ┌──┴───┴───┐└──────────┘   └───┘       ┌─┴─┐    └──────────┘┌───────────┐»
q_3: ┤ RY(θ[3]) ├───────────────────────────┤ X ├─────────■──────┤ RY(θ[10]) ├»
     ├──────────┤                           └───┘       ┌─┴─┐    └───────────┘»
q_4: ┤ RY(θ[4]) ├───────────────────────────────────────┤ X ├──────────■──────»
     ├──────────┤                                       └───┘        ┌─┴─┐    »
q_5: ┤ RY(θ[5]) ├────────────────────────────────────────────────────┤ X ├────»
     ├──────────┤                                                    └───┘    »
q_6: ┤ RY(θ[6]) ├─────────────────────────────────────────────────────────────»
     └──────────┘                                                             »
«                               
«q_0: ──────────────────────────
«                               
«q_1: ──────────────────────────
«                               
«q_2: ──────────────────────────
«                               
«q_3: ──────────────────────────
«     ┌───────────┐             
«q_4: ┤ RY(θ[11]) ├─────────────
«     └───────────┘┌───────────┐
«q_5: ──────■──────┤ RY(θ[12]) ├
«         ┌─┴─┐    ├───────────┤
«q_6: ────┤ X ├────┤ RY(θ[13]) ├
«         └───┘    └───────────┘
-- var_form_params: [ParameterVectorElement(θ[0]), ParameterVectorElement(θ[10]), ParameterVectorElement(θ[11]), ParameterVectorElement(θ[12]), ParameterVectorElement(θ[13]), ParameterVectorElement(θ[1]), ParameterVectorElement(θ[2]), ParameterVectorElement(θ[3]), ParameterVectorElement(θ[4]), ParameterVectorElement(θ[5]), ParameterVectorElement(θ[6]), ParameterVectorElement(θ[7]), ParameterVectorElement(θ[8]), ParameterVectorElement(θ[9])]
-- parameterized_circuits: None
-- ret: None
-- eval_time: None
-- callback: None
-- aux_op_nones: [False, False, False, False, False, False]
-- aux_operators: [SummedOp([PauliOp(Pauli('IIIIIII'), coeff=5.999999999999994), PauliOp(Pauli('ZIIZZZZ'), coeff=-0.4999999999999996), PauliOp(Pauli('ZIIZZZI'), coeff=-0.4999999999999996), PauliOp(Pauli('ZIZIIZZ'), coeff=-0.4999999999999996), PauliOp(Pauli('IZZIIII'), coeff=-0.9999999999999992), PauliOp(Pauli('ZZIIIII'), coeff=-0.9999999999999992), PauliOp(Pauli('IIIIIZI'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIIZII'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIZZII'), coeff=-0.4999999999999996), PauliOp(Pauli('IIZZIII'), coeff=-0.4999999999999996), PauliOp(Pauli('ZIIIIII'), coeff=-0.4999999999999996)], coeff=1.0, abelian=False), SummedOp([PauliOp(Pauli('IIIIIII'), coeff=1.4999999999999987), PauliOp(Pauli('IIIIIIZ'), coeff=0.1249999999999999), PauliOp(Pauli('IIZZZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIZZIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIZIZZ'), coeff=-0.7499999999999992), PauliOp(Pauli('ZIIIIZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIZIZZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIZZZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIIZXZZ'), coeff=0.1249999999999999), PauliOp(Pauli('IIIIXIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIXZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZXIZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIXII'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIIZXZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZXII'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIXZI'), coeff=0.1249999999999999), PauliOp(Pauli('IIIYXIY'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIZYYZX'), coeff=-0.2499999999999998), PauliOp(Pauli('IIZXYIY'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIXXZX'), coeff=-0.2499999999999998), PauliOp(Pauli('YXXXXYX'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXXYXX'), coeff=-0.1249999999999999), PauliOp(Pauli('XXXXYYX'), coeff=0.1249999999999999), PauliOp(Pauli('XXXXXXX'), coeff=-0.1249999999999999), PauliOp(Pauli('XXXYXXY'), coeff=0.1249999999999999), PauliOp(Pauli('XXXYYYY'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXYYXY'), coeff=0.1249999999999999), PauliOp(Pauli('YXXYXYY'), coeff=0.1249999999999999), PauliOp(Pauli('IIZZZIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIZZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIZIZI'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIIIIZI'), coeff=-0.7499999999999992), PauliOp(Pauli('ZIZIZZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZZZI'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIIXIZX'), coeff=0.1249999999999999), PauliOp(Pauli('IIZYZIY'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIZXZZX'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIYIIY'), coeff=0.1249999999999999), PauliOp(Pauli('IIIXIIX'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIZYZZY'), coeff=0.1249999999999999), PauliOp(Pauli('IIZXZIX'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIYIZY'), coeff=-0.1249999999999999), PauliOp(Pauli('XXXYIXY'), coeff=-0.2499999999999998), PauliOp(Pauli('XXXXZYY'), coeff=-0.2499999999999998), PauliOp(Pauli('YXXXZXY'), coeff=0.2499999999999998), PauliOp(Pauli('YXXYIYY'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIZIIIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIZZZZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIZIIZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXZIYZ'), coeff=-0.1249999999999999), PauliOp(Pauli('YXYIIXZ'), coeff=-0.1249999999999999), PauliOp(Pauli('XXYIIYZ'), coeff=0.1249999999999999), PauliOp(Pauli('XXXZIXZ'), coeff=-0.1249999999999999), PauliOp(Pauli('XXXIIXI'), coeff=-0.1249999999999999), PauliOp(Pauli('XXYZIYI'), coeff=0.1249999999999999), PauliOp(Pauli('YXYZIXI'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXIIYI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIZZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIZZIZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZIII'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIZII'), coeff=0.1249999999999999), PauliOp(Pauli('IIZIZII'), coeff=0.1249999999999999), PauliOp(Pauli('ZIZZIII'), coeff=0.1249999999999999)], coeff=1.0, abelian=False), SummedOp([PauliOp(Pauli('ZIIZZZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIIZZZI'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIZIIZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIIZI'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIZII'), coeff=0.2499999999999998), PauliOp(Pauli('IIIZZII'), coeff=0.2499999999999998), PauliOp(Pauli('IIZZIII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIIIII'), coeff=0.2499999999999998)], coeff=1.0, abelian=False), PauliOp(Pauli('IIIIIII'), coeff=0.0), PauliOp(Pauli('IIIIIII'), coeff=0.0), PauliOp(Pauli('IIIIIII'), coeff=0.0)]
-- eval_count: 0
===============================================================
NLocal: EfficientSU2
-- base_name: nlocal
-- data: [(<qiskit.circuit.library.standard_gates.x.XGate object at 0x7f9290db0c10>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f926067e290>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f926067e1d0>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f926067e410>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f926067eed0>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f926067ee90>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f926067ee10>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f926067edd0>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f926067ef90>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f926067e0d0>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f926067ec50>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f926067ebd0>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f926067eb50>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f926067ea90>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f926067e350>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f926067e190>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f926067ec90>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f926067e450>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f926067ead0>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f926067e9d0>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f926067e990>, [Qubit(QuantumRegister(7, 'q'), 6)], [])]
-- qregs: [QuantumRegister(7, 'q')]
-- qubits: [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)]
-- qubit_set: {Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 6), Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 3)}
-- parameter_table: ParameterTable({ParameterVectorElement(θ[0]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f926067e290>, 0)], ParameterVectorElement(θ[1]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f926067e1d0>, 0)], ParameterVectorElement(θ[2]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f926067e410>, 0)], ParameterVectorElement(θ[3]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f926067eed0>, 0)], ParameterVectorElement(θ[4]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f926067ee90>, 0)], ParameterVectorElement(θ[5]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f926067ee10>, 0)], ParameterVectorElement(θ[6]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f926067edd0>, 0)], ParameterVectorElement(θ[7]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f926067e350>, 0)], ParameterVectorElement(θ[8]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f926067e190>, 0)], ParameterVectorElement(θ[9]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f926067ec90>, 0)], ParameterVectorElement(θ[10]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f926067e450>, 0)], ParameterVectorElement(θ[11]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f926067ead0>, 0)], ParameterVectorElement(θ[12]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f926067e9d0>, 0)], ParameterVectorElement(θ[13]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f926067e990>, 0)]})
-- clbits: []
-- clbit_set: set()
-- ancillas: []
-- calibrations: defaultdict(<class 'dict'>, {})
-- parameters: [ParameterVectorElement(θ[0]), ParameterVectorElement(θ[1]), ParameterVectorElement(θ[2]), ParameterVectorElement(θ[3]), ParameterVectorElement(θ[4]), ParameterVectorElement(θ[5]), ParameterVectorElement(θ[6]), ParameterVectorElement(θ[7]), ParameterVectorElement(θ[8]), ParameterVectorElement(θ[9]), ParameterVectorElement(θ[10]), ParameterVectorElement(θ[11]), ParameterVectorElement(θ[12]), ParameterVectorElement(θ[13])]
-- layout: None
-- global_phase: 0
-- metadata: None
-- cregs: []
-- num_qubits: 7
-- insert_barriers: False
-- reps: 1
-- entanglement_blocks: [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7f92b986c1d0>]
-- rotation_blocks: [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7f92b986c4d0>]
-- prepended_blocks: []
-- prepended_entanglement: []
-- appended_blocks: []
-- appended_entanglement: []
-- entanglement: linear
-- entangler_maps: None
-- ordered_parameters: θ, ['θ[0]', 'θ[1]', 'θ[2]', 'θ[3]', 'θ[4]', 'θ[5]', 'θ[6]', 'θ[7]', 'θ[8]', 'θ[9]', 'θ[10]', 'θ[11]', 'θ[12]', 'θ[13]']
-- overwrite_block_parameters: True
-- skip_final_rotation_layer: False
-- skip_unentangled_qubits: False
-- initial_state: <qiskit.chemistry.components.initial_states.hartree_fock.HartreeFock object at 0x7f9279a8b950>
-- initial_state_circuit:           
q_0: ─────
          
q_1: ─────
     ┌───┐
q_2: ┤ X ├
     └───┘
q_3: ─────
          
q_4: ─────
          
q_5: ─────
          
q_6: ─────
          
-- bounds: None
===============================================================
Optimizer: COBYLA
-- gradient_support_level: 1
-- bounds_support_level: 1
-- initial_point_support_level: 3
-- options: {'maxiter': 0, 'disp': False, 'rhobeg': 1.0}
-- max_evals_grouped: 1
-- tol: None
===============================================================

2022-04-18 23:13:56,782:qiskit.aqua.quantum_instance:INFO: statevector backend only works with shot=1, changing shots from 1024 to 1.
2022-04-18 23:13:56,782:qiskit.aqua.quantum_instance:INFO: 
Qiskit Terra version: 0.17.0
Backend: 'statevector_simulator (AerProvider)', with following setting:
{'basis_gates': ['ccx', 'cp', 'cswap', 'csx', 'cu1', 'cu2', 'cu3', 'cx', 'cy', 'cz', 'delay', 'diagonal', 'h', 'id', 'initialize', 'mcp', 'mcr', 'mcrx', 'mcry', 'mcrz', 'mcswap', 'mcsx', 'mcu1', 'mcu2', 'mcu3', 'mcx', 'mcy', 'mcz', 'multiplexer', 'p', 'pauli', 'r', 'rx', 'rxx', 'ry', 'ryy', 'rz', 'rzx', 'rzz', 's', 'sdg', 'swap', 'sx', 't', 'tdg', 'u', 'u1', 'u2', 'u3', 'unitary', 'x', 'y', 'z', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector'], 'coupling_map': None}
{'initial_layout': None, 'seed_transpiler': None, 'optimization_level': None}
RunConfig(max_credits=10, shots=1)
{'timeout': None}
{}
{}
Measurement mitigation: None
2022-04-18 23:13:56,783:qiskit.aqua.algorithms.vq_algorithm:INFO: Starting optimizer.
bounds=[(-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793)]
initial point=[ 1.55322756e-05  2.34547289e-06 -1.43096817e-06  6.09302632e-08
 -2.41136702e-03  1.37912980e-06  7.07982466e-06  3.14157647e+00
  3.14165653e+00 -4.28927236e-07 -2.41374566e-03 -6.99681634e-08
  5.33657068e-07  3.86448423e-06]
2022-04-18 23:13:57,102:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: Energy evaluation returned [-2.50627763] - 11.35802 (ms), eval count: 1
2022-04-18 23:13:57,103:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: Optimization complete in 0.3199789524078369 seconds.
Found opt_params [ 1.55322756e-05  2.34547289e-06 -1.43096817e-06  6.09302632e-08
 -2.41136702e-03  1.37912980e-06  7.07982466e-06  3.14157647e+00
  3.14165653e+00 -4.28927236e-07 -2.41374566e-03 -6.99681634e-08
  5.33657068e-07  3.86448423e-06] in 1 evals
ancilla op commutes?  True
ancilla op commutes?  True
ancilla op commutes?  True
ancilla op commutes?  False
ancilla op commutes?  False
ancilla op commutes?  False
#INFO: **** input file is /Users/mario/Documents/GitHub/VATech/quantum_database/second_quantization/circuits/hardware_efficient/gather_beh2_results_ry_linear.py ****
from qiskit                                        import *
from qiskit.chemistry.drivers                      import UnitsType,HFMethodType
from qiskit.chemistry.core                         import Hamiltonian,TransformationType,QubitMappingType
from qiskit.chemistry.components.initial_states    import HartreeFock
from qiskit.chemistry.components.variational_forms import UCCSD
from qiskit.aqua.components.optimizers             import L_BFGS_B,COBYLA,CG
from qiskit.aqua.algorithms                        import VQE
from qiskit.aqua                                   import QuantumInstance,aqua_globals
from qiskit.circuit.library                        import EfficientSU2

import logging
from   qiskit.chemistry import set_qiskit_chemistry_logging
from   qiskit.aqua      import set_qiskit_aqua_logging
set_qiskit_chemistry_logging(logging.INFO)
set_qiskit_aqua_logging(logging.INFO)

import sys
import numpy as np
sys.path.append('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/subroutines')
sys.path.append('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/subroutines/pyscfd')
from pyscfdriver import *
from utils       import *

def print_circuit(fname,circuit):
    outf = open(fname,'w')
    for gate in circuit:
        gate_name = gate[0].name
        qubits = [q.index for q in gate[1]]
        outf.write(str(gate_name)+' | '+' '.join([str(x) for x in qubits])+' | '+' '.join([str(x._symbol_expr) for x in gate[0].params])+'\n')
    outf.close()

def print_results(fname,res_vqe,res_ee,dN=0):
    outf = open(fname,'w')
    outf.write('%.12f %.12f \n' % (res_vqe[0],np.real(res_ee[0])))
    outf.write('%.12f %.12f \n' % (res_vqe[1]+dN,np.real(res_ee[1]+dN)))
    outf.write('%.12f %.12f \n' % (res_vqe[2],np.real(res_ee[2])))
    outf.write('%.12f %.12f \n' % (res_vqe[3],np.real(res_ee[3])))
    outf.close()

dist_list = [2.1,2.3,2.5,2.7,2.9,3.1,3.3,3.5] #[0.7,0.9,1.1,1.3,1.5,1.7,1.9,2.1,2.3,2.5,2.7,2.9,3.1,3.3,3.5,3.7,3.9,4.1,4.3,4.5]
depth_list = [1] #[1,2,3,4,5,6,7,8]

for depth in depth_list:
  for dist in dist_list:

    outfile = open('pes.txt','w')
    
    outfile.write("Bond distance: {}\n".format(dist))
    rho = np.load('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/SCF_FCI/beh2/res_fourth_pass.npy',allow_pickle=True).item()
    rho = rho[str(dist)]['rho_scf']
    driver    = PySCFDriver(atom="Be 0.0000 0.0000 0.0000; H 0.0000 0.0000 -{0}; H 0.0000 0.0000 {0}".format(dist),
                            unit=UnitsType.ANGSTROM,charge=0,spin=0,basis='sto-6g',hf_method=HFMethodType.RHF,symgroup='dooh',
                            outfile=outfile,irrep_nelec={'A1g':4,'A1u':2},rho=rho)
    molecule  = driver.run()
    outfile.write("\nHartree-Fock energy %f \n" % (molecule.hf_energy))
    
    core      = Hamiltonian(transformation=TransformationType.FULL,qubit_mapping=QubitMappingType.PARITY,two_qubit_reduction=True,freeze_core=False,orbital_reduction=[0])
    H_op,A_op = core.run(molecule)
    
    z2syms,sqlist           = None,None
    H_op,A_op,z2syms,sqlist = taper(molecule,core,H_op,A_op,outfile)
    
    init_state = HartreeFock(num_orbitals=core._molecule_info['num_orbitals'],qubit_mapping=core._qubit_mapping,two_qubit_reduction=core._two_qubit_reduction,num_particles=core._molecule_info['num_particles'],sq_list=sqlist)
    init_state.construct_circuit()
    x_hf = init_state._bitstr
 
    outfile.write("\nHartree-Fock energy %f \n" % (molecule.hf_energy))
    outfile.write("\nHartree-Fock circuit\n")
    outfile.write(str(init_state.construct_circuit().draw())+"\n")

    par = np.loadtxt('/Users/mario/Documents/GitHub/QITE/qite_es/scf_calculations/Ry_linear_DEPTH_%d/beh2/R_%s/output_parameters.txt' % (depth,str(dist)))
    var_form  = EfficientSU2(num_qubits=H_op.num_qubits,reps=depth,entanglement='linear',su2_gates=['ry'],initial_state=init_state)
    circuit = var_form.bind_parameters(par)

    optimizer = COBYLA(maxiter=0)
    algo      = VQE(H_op,var_form,optimizer,aux_operators=A_op,include_custom=True,initial_point=par)
    backend          = Aer.get_backend('statevector_simulator')
    quantum_instance = QuantumInstance(backend=backend)
    algo_result      = algo.run(quantum_instance)
    
    # -----------------------------------------------------------------------------------------------------------------------
    
    p1 = algo._ret['opt_params']
    res_vqe,res_ee = get_results(H_op,A_op,molecule,core,algo_result,outfile)
    print_results('ry_linear_%d/beh2_%s_results.txt' % (depth,str(dist)),res_vqe,res_ee,dN=2)

    circuit = var_form.bind_parameters(p1)
    print_circuit('ry_linear_%d/beh2_%s_circuit.txt' % (depth,str(dist)),circuit)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Marios-MacBook-Pro.local', release='20.6.0', version='Darwin Kernel Version 20.6.0: Mon Aug 30 06:12:21 PDT 2021; root:xnu-7195.141.6~3/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.7.9 (default, Aug 31 2020, 07:22:35) 
[Clang 10.0.0 ]
numpy 1.20.1  scipy 1.6.0
Date: Mon Apr 18 23:13:57 2022
PySCF version 1.7.6
PySCF path  /Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/pyscf

[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 3
[INPUT] num. electrons = 6
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry Dooh subgroup None
[INPUT] Mole.unit = Angstrom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr
[INPUT]  2 H      0.000000000000   0.000000000000  -3.500000000000 AA    0.000000000000   0.000000000000  -6.614041435978 Bohr
[INPUT]  3 H      0.000000000000   0.000000000000   3.500000000000 AA    0.000000000000   0.000000000000   6.614041435978 Bohr

nuclear repulsion = 1.28514465509143
point group symmetry = Dooh
num. orbitals of irrep A1g = 3
num. orbitals of irrep A1u = 2
num. orbitals of irrep E1uy = 1
num. orbitals of irrep E1ux = 1
number of shells = 5
number of NR pGTOs = 42
number of NR cGTOs = 7
basis = sto-6g
ecp = {}
CPU time:        83.49

WARN: Newton solver expects mo_coeff with mo_occ as initial guess but mo_occ is not found in the arguments.
      The given argument is treated as density matrix.

Freeze 6 electrons in irreps ['A1g', 'A1u']
    0 free electrons in irreps E1uy E1ux




******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> ********
method = SymAdaptedRHF-RHF
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-09
SCF conv_tol_grad = None
SCF max_cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp_e9uirr5
max_memory 4000 MB (current use 0 MB)
******** <class 'pyscf.scf.hf_symm.SymAdaptedRHF'> Newton solver flags ********
SCF tol = 1e-09
conv_tol_grad = None
max. SCF cycles = 50
direct_scf = True
direct_scf_tol = 1e-13
chkfile to save SCF result = /var/folders/7m/f464jvrs78n7m3djcnsxfxgr0000gn/T/tmp_e9uirr5
max_cycle_inner = 12
max_stepsize = 0.05
ah_start_tol = 1e+09
ah_level_shift = 0
ah_conv_tol = 1e-12
ah_lindep = 1e-14
ah_start_cycle = 1
ah_max_cycle = 40
ah_grad_trust_region = 2.5
kf_interval = 4
kf_trust_region = 5
canonicalization = True
max_memory 4000 MB (current use 0 MB)
Set conv_tol_grad to 3.16228e-05
HOMO (A1u) = -0.1274003118757  LUMO (A1g) = -0.0259136889894812
Initial guess E= -15.1172481597583  |g|= 1.61623e-10
macro= 0  E= -15.1172481597583  delta_E= 3.55271e-15  |g|= 1.61623e-10  1 KF 2 JK
Canonicalize SCF orbitals
macro X = 1  E=-15.1172481597583  |g|= 1.61623e-10  total 2 KF 4 JK
converged SCF energy = -15.1172481597583
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/chemistry_operator.py:170: DeprecationWarning: The qiskit.chemistry.chemistry_operator.MolecularChemistryResult object is deprecated as of 0.8.0 and will be removed no sooner than 3 months after the release. You should use qiskit.chemistry.algorithms.ground_state_solvers.FermionicGroundStateResult instead.
  super().__init__(a_dict)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:381: DeprecationWarning: The qiskit.chemistry.chemistry_operator.MolecularGroundStateResult object is deprecated as of 0.8.0 and will be removed no sooner than 3 months after the release. You should use qiskit.chemistry.algorithms.ground_state_solvers.FermionicGroundStateResult instead.
  mgsr = MolecularGroundStateResult()
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:91: DeprecationWarning: The ChemistryOperator is deprecated as of Qiskit Aqua 0.8.0 and will be removed no earlier than 3 months after the release date. Instead, the FermionicTransformation can be used to transform QMolecules and construct ground state result objects.
  super().__init__()
2022-04-18 23:13:57,611:qiskit.chemistry.core.hamiltonian:INFO: Configured orbital reduction list: [0]
2022-04-18 23:13:57,612:qiskit.chemistry.core.hamiltonian:INFO: Combined orbital reduction list: [0]
2022-04-18 23:13:57,612:qiskit.chemistry.core.hamiltonian:INFO:   converting to spin orbital reduction list: [0 7]
2022-04-18 23:13:57,612:qiskit.chemistry.core.hamiltonian:INFO:     => freezing spin orbitals: [0 7]
2022-04-18 23:13:57,612:qiskit.chemistry.core.hamiltonian:INFO:     => removing spin orbitals: [] (indexes accounting for freeze [])
2022-04-18 23:13:57,684:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital energy shift: -14.198329850403091
2022-04-18 23:14:00,734:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital x dipole shift: 0.0
2022-04-18 23:14:00,798:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital y dipole shift: 0.0
2022-04-18 23:14:00,864:qiskit.chemistry.core.hamiltonian:INFO: Frozen orbital z dipole shift: 0.0
2022-04-18 23:14:00,951:qiskit.chemistry.core.hamiltonian:INFO: Molecule num electrons: [3, 3], remaining for processing: [2, 2]
2022-04-18 23:14:00,952:qiskit.chemistry.core.hamiltonian:INFO: Molecule num spin orbitals: 14, remaining for processing: 12
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:417: DeprecationWarning: Processing a dictionary result is deprecated, pass a (minimum) eigensolver result now.
  ' pass a (minimum) eigensolver result now.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:134: DeprecationWarning: energy deprecated, use eigenvalues property.
  warnings.warn('energy deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:134: DeprecationWarning: energy deprecated, use eigenvalues property.
  warnings.warn('energy deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:149: DeprecationWarning: aux_ops deprecated, use aux_operator_eigenvalues property.
  DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:138: DeprecationWarning: energies deprecated, use eigenvalues property.
  warnings.warn('energies deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:138: DeprecationWarning: energies deprecated, use eigenvalues property.
  warnings.warn('energies deprecated, use eigenvalues property.', DeprecationWarning)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/aqua/algorithms/eigen_solvers/eigen_solver.py:149: DeprecationWarning: aux_ops deprecated, use aux_operator_eigenvalues property.
  DeprecationWarning)
2022-04-18 23:14:06,644:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: 
==================== Setting of VQE ============================
Algorithm: VQE
-- max_evals_grouped: 1
-- circuit_sampler: None
-- expectation: None
-- user_valid_expectation: False
-- include_custom: True
-- expect_op: None
-- operator: SummedOp([
  -0.4962809329303882 * IIIIIII,
  -0.2991826860251494 * ZIIZZZZ,
  0.06934584475625848 * ZIZIIZX,
  -0.06934584475625848 * ZIIZZZX,
  -0.11846705823111678 * ZIIZZZI,
  -0.05427354545008781 * ZIIZZYY,
  0.05427354545008781 * IIIIIYY,
  -0.13438714178618844 * ZIZIIZZ,
  -0.8572799827180593 * IZZIIII,
  -0.8572799827180594 * ZZIIIII,
  -0.4215402575966692 * IIIIIZI,
  -0.2991826860251495 * IIIIZII,
  0.06934584475625848 * IIZXXII,
  0.06934584475625848 * IIIYYII,
  -0.11846705823111668 * IIIZZII,
  0.05427354545008781 * XXXXZII,
  0.05427354545008781 * YXXYIII,
  -0.1343871417861884 * IIZZIII,
  -0.4215402575966692 * ZIIIIII,
  0.03708843397352663 * IIIIIIZ,
  -0.006773703874555738 * IIIIIXX,
  0.006773703874555738 * ZIIZZXX,
  0.07547797832986776 * IIZZZII,
  0.17363295775115323 * ZZZZZZZ,
  0.17363295775115323 * IZIZZZZ,
  0.07617616051692637 * ZIIZZIZ,
  -0.006907616047980522 * IIZZZIX,
  0.006907616047980522 * IIIIIIX,
  0.00712553782871241 * IIIIIXI,
  0.0004899739921825836 * ZIZIIXZ,
  -0.007615511820894997 * IIZZZXZ,
  -0.007615511820894997 * ZIIZZXZ,
  0.0004899739921825836 * IIIIIXZ,
  0.00712553782871241 * ZIZIIXI,
  -0.03163249295895183 * ZZIIIZX,
  0.03163249295895183 * ZZZZZZX,
  -0.03163249295895183 * IZZIIZX,
  0.03163249295895183 * IZIZZZX,
  -0.010518709783338326 * ZIZIIIX,
  0.010518709783338326 * ZIIZZIX,
  0.18700557628936737 * ZIIZIZZ,
  -0.03076377937632359 * ZIZIZZX,
  0.03076377937632359 * ZIIZIZX,
  -0.00878927837499929 * IIIIXIZ,
  0.00878927837499929 * IIIZXIZ,
  0.00878927837499929 * IIIIXII,
  -0.00878927837499929 * IIIZXII,
  0.00441269545005362 * IIIIXXX,
  -0.00441269545005362 * IIIZXXX,
  0.00441269545005362 * ZIIZYXY,
  -0.00441269545005362 * ZIIIYXY,
  0.03076377937632359 * ZIIXXZZ,
  0.03076377937632359 * ZIZYYZZ,
  0.020989342510642384 * ZIZYYZX,
  0.020989342510642384 * ZIIXXZX,
  0.019694670372101816 * ZZYXYZX,
  0.019694670372101816 * ZIXXXZX,
  -0.019694670372101816 * IIXYXIY,
  -0.019694670372101816 * IZYYYIY,
  0.019694670372101816 * IYXXYZX,
  0.019694670372101816 * ZXXXXZX,
  -0.019694670372101816 * IXXYXIY,
  -0.019694670372101816 * ZYXYYIY,
  -0.004412695450053619 * YXXXYIZ,
  -0.004412695450053619 * XXXXXIZ,
  0.004412695450053619 * YXXXYII,
  0.004412695450053619 * XXXXXII,
  0.018534350315765034 * YXXXYXX,
  0.018534350315765034 * XXXXXXX,
  -0.018534350315765034 * XXXYXXY,
  -0.018534350315765034 * YXXYYXY,
  0.04587771234852591 * ZIIIIZZ,
  0.017054022177218155 * ZIZZZZX,
  -0.017054022177218155 * ZIIIIZX,
  -0.023961638225198676 * IIIXIIZ,
  0.023961638225198676 * IIZXZIZ,
  0.023961638225198676 * IIIXIII,
  -0.023961638225198676 * IIZXZII,
  -0.0005012733059910718 * IIIXIXX,
  0.0005012733059910718 * IIZXZXX,
  -0.0005012733059910718 * ZIIYZXY,
  0.0005012733059910718 * ZIZYIXY,
  0.011186399324609358 * XXXXZZZ,
  0.011186399324609358 * YXXYIZZ,
  0.008116785126886064 * XXYYIZX,
  -0.008116785126886064 * YXYXZZX,
  0.008116785126886064 * XXXXZZX,
  0.008116785126886064 * YXXYIZX,
  0.09646732084051014 * ZIZIZZZ,
  0.006352516364683148 * ZZXIIZX,
  -0.006352516364683148 * ZIXZIZX,
  0.006352516364683148 * IIYZZIY,
  -0.006352516364683148 * IZYIZIY,
  -0.006352516364683148 * IYYIIZX,
  -0.006352516364683148 * ZXXZIZX,
  0.006352516364683148 * IXYZZIY,
  -0.006352516364683148 * ZYXIZIY,
  0.007626811134703483 * YXYIIIZ,
  0.007626811134703483 * XXXZIIZ,
  -0.007626811134703483 * YXYIIII,
  -0.007626811134703483 * XXXZIII,
  -0.0056608125397875015 * YXYIIXX,
  -0.0056608125397875015 * XXXZIXX,
  0.0056608125397875015 * XXYZZXY,
  -0.0056608125397875015 * YXXIZXY,
  0.09471051083269137 * IIIZZZZ,
  -0.016179522323125816 * IIZIIZX,
  0.016179522323125816 * IIIZZZX,
  0.02248227480067408 * IIZZZIZ,
  0.07918750992902002 * ZZZZZZI,
  0.07918750992902002 * IZIZZZI,
  0.07924292231194213 * ZIIZZII,
  -0.006644807312054395 * IIZZZXX,
  0.006644807312054395 * ZIZIIXX,
  0.025441628480652997 * ZZZZZYY,
  -0.025441628480652997 * IZZIIYY,
  0.025441628480652997 * IZIZZYY,
  -0.025441628480652997 * ZZIIIYY,
  0.04587771234852591 * ZIIZIZI,
  0.011186399324609358 * ZIIZIYY,
  -0.011186399324609358 * IIIIZYY,
  0.023961638225198676 * IIZZYIY,
  -0.023961638225198676 * IIZIYIY,
  0.023961638225198676 * IIIIXIX,
  -0.023961638225198676 * IIIZXIX,
  -0.017054022177218155 * ZIIXXZI,
  -0.017054022177218155 * ZIZYYZI,
  0.008116785126886064 * ZIIXXYY,
  0.008116785126886064 * ZIZYYYY,
  0.008116785126886064 * IIIYYYY,
  0.008116785126886064 * IIZXXYY,
  -0.0005012733059910718 * YXYYXIY,
  0.0005012733059910718 * XXYYYIY,
  -0.0005012733059910718 * YXXXYIX,
  -0.0005012733059910718 * XXXXXIX,
  0.20583685597878848 * ZIIIIZI,
  -0.02759651722769342 * ZIIIIYY,
  0.02759651722769342 * IIIZZYY,
  0.07513554493144413 * IIZYZIY,
  -0.07513554493144413 * IIIYIIY,
  0.07513554493144413 * IIIXIIX,
  -0.07513554493144413 * IIZXZIX,
  0.00026801199475092266 * IZYXZIY,
  -0.00026801199475092266 * IIXYIIY,
  -0.00026801199475092266 * ZIXYIZY,
  0.00026801199475092266 * ZZYXZZY,
  0.00026801199475092266 * ZYXXZIY,
  -0.00026801199475092266 * IXXYIIY,
  -0.00026801199475092266 * ZXXYIZY,
  0.00026801199475092266 * IYXXZZY,
  -0.02759651722769342 * XXXXZZI,
  -0.02759651722769342 * YXXYIZI,
  0.013644424456083624 * XXXXZYY,
  0.013644424456083624 * YXXYIYY,
  0.09761781973211821 * ZIZIZZI,
  -0.012890932869591306 * ZIZIZYY,
  0.012890932869591306 * IIZZIYY,
  0.019535740181645705 * YXXZZIY,
  -0.019535740181645705 * XXYIZIY,
  -0.019535740181645705 * YXYIIIX,
  -0.019535740181645705 * XXXZIIX,
  -0.0012434128783103218 * YXIZZIY,
  0.0012434128783103218 * XYZZZIY,
  0.0012434128783103218 * XYZIIZY,
  -0.0012434128783103218 * YXIIIZY,
  -0.0012434128783103218 * YIIZZIY,
  0.0012434128783103218 * YZIZZIY,
  0.0012434128783103218 * YZIIIZY,
  -0.0012434128783103218 * YIIIIZY,
  0.09288734676802574 * IIIZZZI,
  0.08361763075744812 * ZZIIIZZ,
  0.08361763075744812 * IZZIIZZ,
  0.041585553387829745 * ZIZIIIZ,
  -0.007626811134703483 * IIIIXXZ,
  0.007626811134703483 * IIIZXXZ,
  0.007626811134703483 * ZIZIXXI,
  -0.007626811134703483 * ZIZZXXI,
  -0.006352516364683149 * ZZYXYZZ,
  -0.006352516364683149 * ZIXXXZZ,
  0.006352516364683149 * IIYXYII,
  0.006352516364683149 * IZXXXII,
  -0.006352516364683149 * IYXXYZZ,
  -0.006352516364683149 * ZXXXXZZ,
  0.006352516364683149 * IXYXYII,
  -0.006352516364683149 * ZYYXXII,
  -0.0056608125397874945 * YXXXYXZ,
  -0.0056608125397874945 * XXXXXXZ,
  0.0056608125397874945 * XXYXYXI,
  -0.0056608125397874945 * YXYXXXI,
  0.09761781973211821 * ZIZZZZZ,
  -0.019535740181645705 * IIIXIXZ,
  0.019535740181645705 * IIZXZXZ,
  0.019535740181645705 * ZIZXIXI,
  -0.019535740181645705 * ZIIXZXI,
  0.012890932869591306 * XXYYIZZ,
  -0.012890932869591306 * YXYXZZZ,
  -0.002051628501925672 * ZZXIIZZ,
  0.002051628501925672 * ZIXZIZZ,
  0.002051628501925672 * IIXIIII,
  -0.002051628501925672 * IZXZIII,
  0.002051628501925672 * IYYIIZZ,
  0.002051628501925672 * ZXXZIZZ,
  0.002051628501925672 * IXXIIII,
  0.002051628501925672 * ZYYZIII,
  0.006943542900666338 * YXYIIXZ,
  0.006943542900666338 * XXXZIXZ,
  0.006943542900666338 * XXXIIXI,
  0.006943542900666338 * YXYZIXI,
  0.04852909628849608 * IIZIIZZ,
  0.38947179486833605 * ZIZIIII,
  0.18942946818646345 * IZZIIZI,
  0.17363295775115323 * IZZIZII,
  -0.03163249295895183 * IZZYYII,
  -0.03163249295895183 * IZIXXII,
  0.07918750992902002 * IZZZZII,
  -0.0012434128783103218 * ZIXYIYI,
  0.0012434128783103218 * ZZYXZYI,
  0.0012434128783103218 * ZZYYIXI,
  0.0012434128783103218 * ZIXXZXI,
  0.025441628480652997 * YYYYIII,
  0.025441628480652997 * XYYXZII,
  0.08361763075744812 * IZIZIII,
  -0.012128953755816447 * ZXZIIII,
  0.012128953755816447 * IXIIIII,
  0.005816074839622429 * XYZIIYI,
  -0.005816074839622429 * YXIIIYI,
  0.005816074839622429 * XXIIIXI,
  0.005816074839622429 * YYZIIXI,
  0.18942946818646345 * ZZZIIII,
  0.18942946818646345 * ZZIIIZI,
  0.17363295775115323 * ZZIIZII,
  -0.03163249295895183 * ZZIYYII,
  -0.03163249295895183 * ZZZXXII,
  0.07918750992902002 * ZZIZZII,
  -0.0012434128783103218 * ZXXYIYI,
  0.0012434128783103218 * IYXXZYI,
  0.0012434128783103218 * IYXYIXI,
  0.0012434128783103218 * ZXXXZXI,
  -0.025441628480652997 * XYXYIII,
  0.025441628480652997 * YYXXZII,
  0.08361763075744812 * ZZZZIII,
  0.005816074839622429 * YZIIIYI,
  -0.005816074839622429 * YIIIIYI,
  0.005816074839622429 * XIIIIXI,
  -0.005816074839622429 * XZIIIXI,
  0.18942946818646345 * IZIIIII,
  0.09471051083269137 * IIIIZZI,
  -0.01617952232312582 * IIIYYZI,
  -0.01617952232312582 * IIZXXZI,
  0.04852909628849608 * IIZZIZI,
  0.03708843397352663 * IIIZIII,
  -0.006773703874555738 * XXXXIII,
  -0.006773703874555738 * YXXYZII,
  0.07617616051692637 * ZIIIZII,
  0.006907616047980522 * IIZYYII,
  0.006907616047980522 * IIIXXII,
  0.00712553782871241 * XXXIXII,
  -0.0004899739921825836 * YXYZXII,
  0.007615511820894997 * XXYIYII,
  0.007615511820894997 * YXXIYII,
  0.0004899739921825836 * XXXZXII,
  -0.00712553782871241 * YXYIXII,
  -0.010518709783338326 * ZIZXXII,
  -0.010518709783338326 * ZIIYYII,
  0.02248227480067408 * IIZIZII,
  0.006644807312054395 * XXYYZII,
  -0.006644807312054395 * YXYXIII,
  0.041585553387829745 * ZIZZIII
])
-- quantum_instance: None
-- optimizer: <qiskit.aqua.components.optimizers.cobyla.COBYLA object at 0x7f92a93f8b10>
-- gradient: None
-- cost_fn: <bound method VQE._energy_evaluation of <qiskit.aqua.algorithms.minimum_eigen_solvers.vqe.VQE object at 0x7f92b95484d0>>
-- initial_point: [ 1.55322756e-05  2.34547289e-06 -1.43096817e-06  6.09302632e-08
 -2.41136702e-03  1.37912980e-06  7.07982466e-06  3.14157647e+00
  3.14165653e+00 -4.28927236e-07 -2.41374566e-03 -6.99681634e-08
  5.33657068e-07  3.86448423e-06]
-- var_form:      ┌──────────┐            ┌──────────┐                                     »
q_0: ┤ RY(θ[0]) ├─────■──────┤ RY(θ[7]) ├─────────────────────────────────────»
     ├──────────┤   ┌─┴─┐    └──────────┘┌──────────┐                         »
q_1: ┤ RY(θ[1]) ├───┤ X ├─────────■──────┤ RY(θ[8]) ├─────────────────────────»
     └──┬───┬───┘┌──┴───┴───┐   ┌─┴─┐    └──────────┘┌──────────┐             »
q_2: ───┤ X ├────┤ RY(θ[2]) ├───┤ X ├─────────■──────┤ RY(θ[9]) ├─────────────»
     ┌──┴───┴───┐└──────────┘   └───┘       ┌─┴─┐    └──────────┘┌───────────┐»
q_3: ┤ RY(θ[3]) ├───────────────────────────┤ X ├─────────■──────┤ RY(θ[10]) ├»
     ├──────────┤                           └───┘       ┌─┴─┐    └───────────┘»
q_4: ┤ RY(θ[4]) ├───────────────────────────────────────┤ X ├──────────■──────»
     ├──────────┤                                       └───┘        ┌─┴─┐    »
q_5: ┤ RY(θ[5]) ├────────────────────────────────────────────────────┤ X ├────»
     ├──────────┤                                                    └───┘    »
q_6: ┤ RY(θ[6]) ├─────────────────────────────────────────────────────────────»
     └──────────┘                                                             »
«                               
«q_0: ──────────────────────────
«                               
«q_1: ──────────────────────────
«                               
«q_2: ──────────────────────────
«                               
«q_3: ──────────────────────────
«     ┌───────────┐             
«q_4: ┤ RY(θ[11]) ├─────────────
«     └───────────┘┌───────────┐
«q_5: ──────■──────┤ RY(θ[12]) ├
«         ┌─┴─┐    ├───────────┤
«q_6: ────┤ X ├────┤ RY(θ[13]) ├
«         └───┘    └───────────┘
-- var_form_params: [ParameterVectorElement(θ[0]), ParameterVectorElement(θ[10]), ParameterVectorElement(θ[11]), ParameterVectorElement(θ[12]), ParameterVectorElement(θ[13]), ParameterVectorElement(θ[1]), ParameterVectorElement(θ[2]), ParameterVectorElement(θ[3]), ParameterVectorElement(θ[4]), ParameterVectorElement(θ[5]), ParameterVectorElement(θ[6]), ParameterVectorElement(θ[7]), ParameterVectorElement(θ[8]), ParameterVectorElement(θ[9])]
-- parameterized_circuits: None
-- ret: None
-- eval_time: None
-- callback: None
-- aux_op_nones: [False, False, False, False, False, False]
-- aux_operators: [SummedOp([PauliOp(Pauli('IIIIIII'), coeff=5.999999999999994), PauliOp(Pauli('ZIIZZZZ'), coeff=-0.4999999999999996), PauliOp(Pauli('ZIIZZZI'), coeff=-0.4999999999999996), PauliOp(Pauli('ZIZIIZZ'), coeff=-0.4999999999999996), PauliOp(Pauli('IZZIIII'), coeff=-0.9999999999999992), PauliOp(Pauli('ZZIIIII'), coeff=-0.9999999999999992), PauliOp(Pauli('IIIIIZI'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIIZII'), coeff=-0.4999999999999996), PauliOp(Pauli('IIIZZII'), coeff=-0.4999999999999996), PauliOp(Pauli('IIZZIII'), coeff=-0.4999999999999996), PauliOp(Pauli('ZIIIIII'), coeff=-0.4999999999999996)], coeff=1.0, abelian=False), SummedOp([PauliOp(Pauli('IIIIIII'), coeff=1.4999999999999987), PauliOp(Pauli('IIIIIIZ'), coeff=0.1249999999999999), PauliOp(Pauli('IIZZZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIZZIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIZIZZ'), coeff=-0.7499999999999992), PauliOp(Pauli('ZIIIIZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIZIZZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIZZZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIIZXZZ'), coeff=0.1249999999999999), PauliOp(Pauli('IIIIXIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIXZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZXIZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIXII'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIIZXZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZXII'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIXZI'), coeff=0.1249999999999999), PauliOp(Pauli('IIIYXIY'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIZYYZX'), coeff=-0.2499999999999998), PauliOp(Pauli('IIZXYIY'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIXXZX'), coeff=-0.2499999999999998), PauliOp(Pauli('YXXXXYX'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXXYXX'), coeff=-0.1249999999999999), PauliOp(Pauli('XXXXYYX'), coeff=0.1249999999999999), PauliOp(Pauli('XXXXXXX'), coeff=-0.1249999999999999), PauliOp(Pauli('XXXYXXY'), coeff=0.1249999999999999), PauliOp(Pauli('XXXYYYY'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXYYXY'), coeff=0.1249999999999999), PauliOp(Pauli('YXXYXYY'), coeff=0.1249999999999999), PauliOp(Pauli('IIZZZIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIZZII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIZIZI'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIIIIZI'), coeff=-0.7499999999999992), PauliOp(Pauli('ZIZIZZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZZZI'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIIXIZX'), coeff=0.1249999999999999), PauliOp(Pauli('IIZYZIY'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIZXZZX'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIYIIY'), coeff=0.1249999999999999), PauliOp(Pauli('IIIXIIX'), coeff=-0.1249999999999999), PauliOp(Pauli('ZIZYZZY'), coeff=0.1249999999999999), PauliOp(Pauli('IIZXZIX'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIYIZY'), coeff=-0.1249999999999999), PauliOp(Pauli('XXXYIXY'), coeff=-0.2499999999999998), PauliOp(Pauli('XXXXZYY'), coeff=-0.2499999999999998), PauliOp(Pauli('YXXXZXY'), coeff=0.2499999999999998), PauliOp(Pauli('YXXYIYY'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIZIIIZ'), coeff=0.1249999999999999), PauliOp(Pauli('ZIZZZZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('IIZIIZZ'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXZIYZ'), coeff=-0.1249999999999999), PauliOp(Pauli('YXYIIXZ'), coeff=-0.1249999999999999), PauliOp(Pauli('XXYIIYZ'), coeff=0.1249999999999999), PauliOp(Pauli('XXXZIXZ'), coeff=-0.1249999999999999), PauliOp(Pauli('XXXIIXI'), coeff=-0.1249999999999999), PauliOp(Pauli('XXYZIYI'), coeff=0.1249999999999999), PauliOp(Pauli('YXYZIXI'), coeff=-0.1249999999999999), PauliOp(Pauli('YXXIIYI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIIZZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIZZIZI'), coeff=-0.1249999999999999), PauliOp(Pauli('IIIZIII'), coeff=0.1249999999999999), PauliOp(Pauli('ZIIIZII'), coeff=0.1249999999999999), PauliOp(Pauli('IIZIZII'), coeff=0.1249999999999999), PauliOp(Pauli('ZIZZIII'), coeff=0.1249999999999999)], coeff=1.0, abelian=False), SummedOp([PauliOp(Pauli('ZIIZZZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIIZZZI'), coeff=-0.2499999999999998), PauliOp(Pauli('ZIZIIZZ'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIIZI'), coeff=-0.2499999999999998), PauliOp(Pauli('IIIIZII'), coeff=0.2499999999999998), PauliOp(Pauli('IIIZZII'), coeff=0.2499999999999998), PauliOp(Pauli('IIZZIII'), coeff=0.2499999999999998), PauliOp(Pauli('ZIIIIII'), coeff=0.2499999999999998)], coeff=1.0, abelian=False), PauliOp(Pauli('IIIIIII'), coeff=0.0), PauliOp(Pauli('IIIIIII'), coeff=0.0), PauliOp(Pauli('IIIIIII'), coeff=0.0)]
-- eval_count: 0
===============================================================
NLocal: EfficientSU2
-- base_name: nlocal
-- data: [(<qiskit.circuit.library.standard_gates.x.XGate object at 0x7f92a9fa3e50>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa3fd0>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa3310>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa38d0>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa3d10>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9f92b10>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9f92690>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9f92bd0>, [Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f92a9fa3b10>, [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f92a9f92510>, [Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f92a9f92710>, [Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f92a9f928d0>, [Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f92a9f92450>, [Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.x.CXGate object at 0x7f92a9f92fd0>, [Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa3950>, [Qubit(QuantumRegister(7, 'q'), 0)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa3ad0>, [Qubit(QuantumRegister(7, 'q'), 1)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9f92d50>, [Qubit(QuantumRegister(7, 'q'), 2)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9f92d90>, [Qubit(QuantumRegister(7, 'q'), 3)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9f92090>, [Qubit(QuantumRegister(7, 'q'), 4)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9f92990>, [Qubit(QuantumRegister(7, 'q'), 5)], []), (<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9f92190>, [Qubit(QuantumRegister(7, 'q'), 6)], [])]
-- qregs: [QuantumRegister(7, 'q')]
-- qubits: [Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 3), Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 6)]
-- qubit_set: {Qubit(QuantumRegister(7, 'q'), 2), Qubit(QuantumRegister(7, 'q'), 1), Qubit(QuantumRegister(7, 'q'), 0), Qubit(QuantumRegister(7, 'q'), 6), Qubit(QuantumRegister(7, 'q'), 5), Qubit(QuantumRegister(7, 'q'), 4), Qubit(QuantumRegister(7, 'q'), 3)}
-- parameter_table: ParameterTable({ParameterVectorElement(θ[0]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa3fd0>, 0)], ParameterVectorElement(θ[1]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa3310>, 0)], ParameterVectorElement(θ[2]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa38d0>, 0)], ParameterVectorElement(θ[3]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa3d10>, 0)], ParameterVectorElement(θ[4]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9f92b10>, 0)], ParameterVectorElement(θ[5]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9f92690>, 0)], ParameterVectorElement(θ[6]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9f92bd0>, 0)], ParameterVectorElement(θ[7]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa3950>, 0)], ParameterVectorElement(θ[8]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9fa3ad0>, 0)], ParameterVectorElement(θ[9]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9f92d50>, 0)], ParameterVectorElement(θ[10]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9f92d90>, 0)], ParameterVectorElement(θ[11]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9f92090>, 0)], ParameterVectorElement(θ[12]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9f92990>, 0)], ParameterVectorElement(θ[13]): [(<qiskit.circuit.library.standard_gates.ry.RYGate object at 0x7f92a9f92190>, 0)]})
-- clbits: []
-- clbit_set: set()
-- ancillas: []
-- calibrations: defaultdict(<class 'dict'>, {})
-- parameters: [ParameterVectorElement(θ[0]), ParameterVectorElement(θ[1]), ParameterVectorElement(θ[2]), ParameterVectorElement(θ[3]), ParameterVectorElement(θ[4]), ParameterVectorElement(θ[5]), ParameterVectorElement(θ[6]), ParameterVectorElement(θ[7]), ParameterVectorElement(θ[8]), ParameterVectorElement(θ[9]), ParameterVectorElement(θ[10]), ParameterVectorElement(θ[11]), ParameterVectorElement(θ[12]), ParameterVectorElement(θ[13])]
-- layout: None
-- global_phase: 0
-- metadata: None
-- cregs: []
-- num_qubits: 7
-- insert_barriers: False
-- reps: 1
-- entanglement_blocks: [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7f92a9fa3190>]
-- rotation_blocks: [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7f92a9fa3410>]
-- prepended_blocks: []
-- prepended_entanglement: []
-- appended_blocks: []
-- appended_entanglement: []
-- entanglement: linear
-- entangler_maps: None
-- ordered_parameters: θ, ['θ[0]', 'θ[1]', 'θ[2]', 'θ[3]', 'θ[4]', 'θ[5]', 'θ[6]', 'θ[7]', 'θ[8]', 'θ[9]', 'θ[10]', 'θ[11]', 'θ[12]', 'θ[13]']
-- overwrite_block_parameters: True
-- skip_final_rotation_layer: False
-- skip_unentangled_qubits: False
-- initial_state: <qiskit.chemistry.components.initial_states.hartree_fock.HartreeFock object at 0x7f927947f1d0>
-- initial_state_circuit:           
q_0: ─────
          
q_1: ─────
     ┌───┐
q_2: ┤ X ├
     └───┘
q_3: ─────
          
q_4: ─────
          
q_5: ─────
          
q_6: ─────
          
-- bounds: None
===============================================================
Optimizer: COBYLA
-- gradient_support_level: 1
-- bounds_support_level: 1
-- initial_point_support_level: 3
-- options: {'maxiter': 0, 'disp': False, 'rhobeg': 1.0}
-- max_evals_grouped: 1
-- tol: None
===============================================================

2022-04-18 23:14:06,645:qiskit.aqua.quantum_instance:INFO: statevector backend only works with shot=1, changing shots from 1024 to 1.
2022-04-18 23:14:06,645:qiskit.aqua.quantum_instance:INFO: 
Qiskit Terra version: 0.17.0
Backend: 'statevector_simulator (AerProvider)', with following setting:
{'basis_gates': ['ccx', 'cp', 'cswap', 'csx', 'cu1', 'cu2', 'cu3', 'cx', 'cy', 'cz', 'delay', 'diagonal', 'h', 'id', 'initialize', 'mcp', 'mcr', 'mcrx', 'mcry', 'mcrz', 'mcswap', 'mcsx', 'mcu1', 'mcu2', 'mcu3', 'mcx', 'mcy', 'mcz', 'multiplexer', 'p', 'pauli', 'r', 'rx', 'rxx', 'ry', 'ryy', 'rz', 'rzx', 'rzz', 's', 'sdg', 'swap', 'sx', 't', 'tdg', 'u', 'u1', 'u2', 'u3', 'unitary', 'x', 'y', 'z', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector', 'kraus', 'roerror', 'save_amplitudes', 'save_amplitudes_sq', 'save_density_matrix', 'save_expval', 'save_probs', 'save_probs_ket', 'save_state', 'save_statevector', 'set_statevector'], 'coupling_map': None}
{'initial_layout': None, 'seed_transpiler': None, 'optimization_level': None}
RunConfig(max_credits=10, shots=1)
{'timeout': None}
{}
{}
Measurement mitigation: None
2022-04-18 23:14:06,645:qiskit.aqua.algorithms.vq_algorithm:INFO: Starting optimizer.
bounds=[(-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793), (-3.141592653589793, 3.141592653589793)]
initial point=[ 1.55322756e-05  2.34547289e-06 -1.43096817e-06  6.09302632e-08
 -2.41136702e-03  1.37912980e-06  7.07982466e-06  3.14157647e+00
  3.14165653e+00 -4.28927236e-07 -2.41374566e-03 -6.99681634e-08
  5.33657068e-07  3.86448423e-06]
2022-04-18 23:14:06,871:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: Energy evaluation returned [-2.46765074] - 8.32891 (ms), eval count: 1
2022-04-18 23:14:06,871:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: Optimization complete in 0.22567296028137207 seconds.
Found opt_params [ 1.55322756e-05  2.34547289e-06 -1.43096817e-06  6.09302632e-08
 -2.41136702e-03  1.37912980e-06  7.07982466e-06  3.14157647e+00
  3.14165653e+00 -4.28927236e-07 -2.41374566e-03 -6.99681634e-08
  5.33657068e-07  3.86448423e-06] in 1 evals
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/chemistry_operator.py:170: DeprecationWarning: The qiskit.chemistry.chemistry_operator.MolecularChemistryResult object is deprecated as of 0.8.0 and will be removed no sooner than 3 months after the release. You should use qiskit.chemistry.algorithms.ground_state_solvers.FermionicGroundStateResult instead.
  super().__init__(a_dict)
/Users/mario/anaconda3/envs/qiskit2021/lib/python3.7/site-packages/qiskit/chemistry/core/hamiltonian.py:381: DeprecationWarning: The qiskit.chemistry.chemistry_operator.MolecularGroundStateResult object is deprecated as of 0.8.0 and will be removed no sooner than 3 months after the release. You should use qiskit.chemistry.algorithms.ground_state_solvers.FermionicGroundStateResult instead.
  mgsr = MolecularGroundStateResult()
ancilla op commutes?  True
ancilla op commutes?  True
ancilla op commutes?  True
ancilla op commutes?  False
ancilla op commutes?  False
ancilla op commutes?  False
